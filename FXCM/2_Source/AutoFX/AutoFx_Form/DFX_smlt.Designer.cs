//------------------------------------------------------------------------------
// <auto-generated>
//     このコードはツールによって生成されました。
//     ランタイム バージョン:4.0.30319.18444
//
//     このファイルへの変更は、以下の状況下で不正な動作の原因になったり、
//     コードが再生成されるときに損失したりします。
// </auto-generated>
//------------------------------------------------------------------------------

#pragma warning disable 1591

namespace AutoFx_Form {
    
    
    /// <summary>
    ///Represents a strongly typed in-memory cache of data.
    ///</summary>
    [global::System.Serializable()]
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedDataSetSchema")]
    [global::System.Xml.Serialization.XmlRootAttribute("DFX_smlt")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.DataSet")]
    public partial class DFX_smlt : global::System.Data.DataSet {
        
        private T_Indicator_15mDataTable tableT_Indicator_15m;
        
        private T_RateHistory_15mDataTable tableT_RateHistory_15m;
        
        private T_Order判定HistoryDataTable tableT_Order判定History;
        
        private global::System.Data.SchemaSerializationMode _schemaSerializationMode = global::System.Data.SchemaSerializationMode.IncludeSchema;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public DFX_smlt() {
            this.BeginInit();
            this.InitClass();
            global::System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler = new global::System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
            base.Tables.CollectionChanged += schemaChangedHandler;
            base.Relations.CollectionChanged += schemaChangedHandler;
            this.EndInit();
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected DFX_smlt(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                base(info, context, false) {
            if ((this.IsBinarySerialized(info, context) == true)) {
                this.InitVars(false);
                global::System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler1 = new global::System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
                this.Tables.CollectionChanged += schemaChangedHandler1;
                this.Relations.CollectionChanged += schemaChangedHandler1;
                return;
            }
            string strSchema = ((string)(info.GetValue("XmlSchema", typeof(string))));
            if ((this.DetermineSchemaSerializationMode(info, context) == global::System.Data.SchemaSerializationMode.IncludeSchema)) {
                global::System.Data.DataSet ds = new global::System.Data.DataSet();
                ds.ReadXmlSchema(new global::System.Xml.XmlTextReader(new global::System.IO.StringReader(strSchema)));
                if ((ds.Tables["T_Indicator_15m"] != null)) {
                    base.Tables.Add(new T_Indicator_15mDataTable(ds.Tables["T_Indicator_15m"]));
                }
                if ((ds.Tables["T_RateHistory_15m"] != null)) {
                    base.Tables.Add(new T_RateHistory_15mDataTable(ds.Tables["T_RateHistory_15m"]));
                }
                if ((ds.Tables["T_Order判定History"] != null)) {
                    base.Tables.Add(new T_Order判定HistoryDataTable(ds.Tables["T_Order判定History"]));
                }
                this.DataSetName = ds.DataSetName;
                this.Prefix = ds.Prefix;
                this.Namespace = ds.Namespace;
                this.Locale = ds.Locale;
                this.CaseSensitive = ds.CaseSensitive;
                this.EnforceConstraints = ds.EnforceConstraints;
                this.Merge(ds, false, global::System.Data.MissingSchemaAction.Add);
                this.InitVars();
            }
            else {
                this.ReadXmlSchema(new global::System.Xml.XmlTextReader(new global::System.IO.StringReader(strSchema)));
            }
            this.GetSerializationData(info, context);
            global::System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler = new global::System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
            base.Tables.CollectionChanged += schemaChangedHandler;
            this.Relations.CollectionChanged += schemaChangedHandler;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public T_Indicator_15mDataTable T_Indicator_15m {
            get {
                return this.tableT_Indicator_15m;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public T_RateHistory_15mDataTable T_RateHistory_15m {
            get {
                return this.tableT_RateHistory_15m;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public T_Order判定HistoryDataTable T_Order判定History {
            get {
                return this.tableT_Order判定History;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.BrowsableAttribute(true)]
        [global::System.ComponentModel.DesignerSerializationVisibilityAttribute(global::System.ComponentModel.DesignerSerializationVisibility.Visible)]
        public override global::System.Data.SchemaSerializationMode SchemaSerializationMode {
            get {
                return this._schemaSerializationMode;
            }
            set {
                this._schemaSerializationMode = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.DesignerSerializationVisibilityAttribute(global::System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        public new global::System.Data.DataTableCollection Tables {
            get {
                return base.Tables;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.DesignerSerializationVisibilityAttribute(global::System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        public new global::System.Data.DataRelationCollection Relations {
            get {
                return base.Relations;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected override void InitializeDerivedDataSet() {
            this.BeginInit();
            this.InitClass();
            this.EndInit();
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public override global::System.Data.DataSet Clone() {
            DFX_smlt cln = ((DFX_smlt)(base.Clone()));
            cln.InitVars();
            cln.SchemaSerializationMode = this.SchemaSerializationMode;
            return cln;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected override bool ShouldSerializeTables() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected override bool ShouldSerializeRelations() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected override void ReadXmlSerializable(global::System.Xml.XmlReader reader) {
            if ((this.DetermineSchemaSerializationMode(reader) == global::System.Data.SchemaSerializationMode.IncludeSchema)) {
                this.Reset();
                global::System.Data.DataSet ds = new global::System.Data.DataSet();
                ds.ReadXml(reader);
                if ((ds.Tables["T_Indicator_15m"] != null)) {
                    base.Tables.Add(new T_Indicator_15mDataTable(ds.Tables["T_Indicator_15m"]));
                }
                if ((ds.Tables["T_RateHistory_15m"] != null)) {
                    base.Tables.Add(new T_RateHistory_15mDataTable(ds.Tables["T_RateHistory_15m"]));
                }
                if ((ds.Tables["T_Order判定History"] != null)) {
                    base.Tables.Add(new T_Order判定HistoryDataTable(ds.Tables["T_Order判定History"]));
                }
                this.DataSetName = ds.DataSetName;
                this.Prefix = ds.Prefix;
                this.Namespace = ds.Namespace;
                this.Locale = ds.Locale;
                this.CaseSensitive = ds.CaseSensitive;
                this.EnforceConstraints = ds.EnforceConstraints;
                this.Merge(ds, false, global::System.Data.MissingSchemaAction.Add);
                this.InitVars();
            }
            else {
                this.ReadXml(reader);
                this.InitVars();
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected override global::System.Xml.Schema.XmlSchema GetSchemaSerializable() {
            global::System.IO.MemoryStream stream = new global::System.IO.MemoryStream();
            this.WriteXmlSchema(new global::System.Xml.XmlTextWriter(stream, null));
            stream.Position = 0;
            return global::System.Xml.Schema.XmlSchema.Read(new global::System.Xml.XmlTextReader(stream), null);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        internal void InitVars() {
            this.InitVars(true);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        internal void InitVars(bool initTable) {
            this.tableT_Indicator_15m = ((T_Indicator_15mDataTable)(base.Tables["T_Indicator_15m"]));
            if ((initTable == true)) {
                if ((this.tableT_Indicator_15m != null)) {
                    this.tableT_Indicator_15m.InitVars();
                }
            }
            this.tableT_RateHistory_15m = ((T_RateHistory_15mDataTable)(base.Tables["T_RateHistory_15m"]));
            if ((initTable == true)) {
                if ((this.tableT_RateHistory_15m != null)) {
                    this.tableT_RateHistory_15m.InitVars();
                }
            }
            this.tableT_Order判定History = ((T_Order判定HistoryDataTable)(base.Tables["T_Order判定History"]));
            if ((initTable == true)) {
                if ((this.tableT_Order判定History != null)) {
                    this.tableT_Order判定History.InitVars();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void InitClass() {
            this.DataSetName = "DFX_smlt";
            this.Prefix = "";
            this.Namespace = "http://tempuri.org/DFX_smlt.xsd";
            this.EnforceConstraints = true;
            this.SchemaSerializationMode = global::System.Data.SchemaSerializationMode.IncludeSchema;
            this.tableT_Indicator_15m = new T_Indicator_15mDataTable();
            base.Tables.Add(this.tableT_Indicator_15m);
            this.tableT_RateHistory_15m = new T_RateHistory_15mDataTable();
            base.Tables.Add(this.tableT_RateHistory_15m);
            this.tableT_Order判定History = new T_Order判定HistoryDataTable();
            base.Tables.Add(this.tableT_Order判定History);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private bool ShouldSerializeT_Indicator_15m() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private bool ShouldSerializeT_RateHistory_15m() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private bool ShouldSerializeT_Order判定History() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void SchemaChanged(object sender, global::System.ComponentModel.CollectionChangeEventArgs e) {
            if ((e.Action == global::System.ComponentModel.CollectionChangeAction.Remove)) {
                this.InitVars();
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedDataSetSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
            DFX_smlt ds = new DFX_smlt();
            global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
            global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
            global::System.Xml.Schema.XmlSchemaAny any = new global::System.Xml.Schema.XmlSchemaAny();
            any.Namespace = ds.Namespace;
            sequence.Items.Add(any);
            type.Particle = sequence;
            global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
            if (xs.Contains(dsSchema.TargetNamespace)) {
                global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                try {
                    global::System.Xml.Schema.XmlSchema schema = null;
                    dsSchema.Write(s1);
                    for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                        schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                        s2.SetLength(0);
                        schema.Write(s2);
                        if ((s1.Length == s2.Length)) {
                            s1.Position = 0;
                            s2.Position = 0;
                            for (; ((s1.Position != s1.Length) 
                                        && (s1.ReadByte() == s2.ReadByte())); ) {
                                ;
                            }
                            if ((s1.Position == s1.Length)) {
                                return type;
                            }
                        }
                    }
                }
                finally {
                    if ((s1 != null)) {
                        s1.Close();
                    }
                    if ((s2 != null)) {
                        s2.Close();
                    }
                }
            }
            xs.Add(dsSchema);
            return type;
        }
        
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public delegate void T_Indicator_15mRowChangeEventHandler(object sender, T_Indicator_15mRowChangeEvent e);
        
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public delegate void T_RateHistory_15mRowChangeEventHandler(object sender, T_RateHistory_15mRowChangeEvent e);
        
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public delegate void T_Order判定HistoryRowChangeEventHandler(object sender, T_Order判定HistoryRowChangeEvent e);
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class T_Indicator_15mDataTable : global::System.Data.TypedTableBase<T_Indicator_15mRow> {
            
            private global::System.Data.DataColumn column通貨ペアNo;
            
            private global::System.Data.DataColumn column日時;
            
            private global::System.Data.DataColumn columnAC_AC;
            
            private global::System.Data.DataColumn columnAD_AD;
            
            private global::System.Data.DataColumn columnADX_ADX;
            
            private global::System.Data.DataColumn columnALLIGATOR_Jaw;
            
            private global::System.Data.DataColumn columnALLIGATOR_Teeth;
            
            private global::System.Data.DataColumn columnALLIGATOR_Lips;
            
            private global::System.Data.DataColumn columnAO_AO;
            
            private global::System.Data.DataColumn columnAROON_UP;
            
            private global::System.Data.DataColumn columnAROON_DOWN;
            
            private global::System.Data.DataColumn columnARSI_ARSI;
            
            private global::System.Data.DataColumn columnASI_ASI;
            
            private global::System.Data.DataColumn columnATR_ATR;
            
            private global::System.Data.DataColumn columnBB_TL;
            
            private global::System.Data.DataColumn columnBB_BL;
            
            private global::System.Data.DataColumn columnBB_AL;
            
            private global::System.Data.DataColumn columnCCI_CCI;
            
            private global::System.Data.DataColumn columnCHO_CHO;
            
            private global::System.Data.DataColumn columnCMF_CMF;
            
            private global::System.Data.DataColumn columnCMO_CMO;
            
            private global::System.Data.DataColumn column買い_DMI_DI_plus;
            
            private global::System.Data.DataColumn column買い_DMI_DI_minus;
            
            private global::System.Data.DataColumn column売り_DMI_DI_plus;
            
            private global::System.Data.DataColumn column売り_DMI_DI_minus;
            
            private global::System.Data.DataColumn columnEMA_EMA;
            
            private global::System.Data.DataColumn columnEW_EW;
            
            private global::System.Data.DataColumn columnEWN_EWN;
            
            private global::System.Data.DataColumn columnEWO_EWO;
            
            private global::System.Data.DataColumn columnFRACTAL_FRACTAL;
            
            private global::System.Data.DataColumn columnGATOR_UP;
            
            private global::System.Data.DataColumn columnGATOR_DN;
            
            private global::System.Data.DataColumn columnHA_始値;
            
            private global::System.Data.DataColumn columnHA_終値;
            
            private global::System.Data.DataColumn columnHA_高値;
            
            private global::System.Data.DataColumn columnHA_安値;
            
            private global::System.Data.DataColumn columnICH_TL;
            
            private global::System.Data.DataColumn columnICH_KL;
            
            private global::System.Data.DataColumn columnICH_CS;
            
            private global::System.Data.DataColumn columnICH_SA;
            
            private global::System.Data.DataColumn columnICH_SB;
            
            private global::System.Data.DataColumn columnKAMA_KAMA;
            
            private global::System.Data.DataColumn columnKRI_KRI;
            
            private global::System.Data.DataColumn columnLWMA_LWMA;
            
            private global::System.Data.DataColumn columnMACD_MACD;
            
            private global::System.Data.DataColumn columnMACD_SIGNAL;
            
            private global::System.Data.DataColumn columnMACD_HISTOGRAM;
            
            private global::System.Data.DataColumn columnMAE_ME1;
            
            private global::System.Data.DataColumn columnMAE_ME2;
            
            private global::System.Data.DataColumn columnMD_MD;
            
            private global::System.Data.DataColumn columnMVA_MVA;
            
            private global::System.Data.DataColumn columnOSC_OSC;
            
            private global::System.Data.DataColumn columnPIVOT_PIVOT;
            
            private global::System.Data.DataColumn columnPPMA_PPMA;
            
            private global::System.Data.DataColumn columnREGRESSION_REGRESSION;
            
            private global::System.Data.DataColumn columnRLW_PercentR;
            
            private global::System.Data.DataColumn columnROC_ROC;
            
            private global::System.Data.DataColumn columnRSI_RSI;
            
            private global::System.Data.DataColumn columnSAR_UP;
            
            private global::System.Data.DataColumn columnSAR_DN;
            
            private global::System.Data.DataColumn columnSFK_K;
            
            private global::System.Data.DataColumn columnSFK_D;
            
            private global::System.Data.DataColumn columnSHIFT_I_MVA;
            
            private global::System.Data.DataColumn columnSHIFT_O_ADX;
            
            private global::System.Data.DataColumn columnSHOWTIMETOEND_SHOWTIMETOEND;
            
            private global::System.Data.DataColumn columnSMMA_SMMA;
            
            private global::System.Data.DataColumn columnSSD_K;
            
            private global::System.Data.DataColumn columnSSD_D;
            
            private global::System.Data.DataColumn columnSTOCHASTIC_K;
            
            private global::System.Data.DataColumn columnSTOCHASTIC_D;
            
            private global::System.Data.DataColumn columnTMA_TMA;
            
            private global::System.Data.DataColumn columnTMACD_TMACD;
            
            private global::System.Data.DataColumn columnTSI_TSI;
            
            private global::System.Data.DataColumn columnVIDYA_V;
            
            private global::System.Data.DataColumn columnWMA_WMA;
            
            private global::System.Data.DataColumn columnZIGZAG_Up;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public T_Indicator_15mDataTable() {
                this.TableName = "T_Indicator_15m";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal T_Indicator_15mDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected T_Indicator_15mDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn 通貨ペアNoColumn {
                get {
                    return this.column通貨ペアNo;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn 日時Column {
                get {
                    return this.column日時;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn AC_ACColumn {
                get {
                    return this.columnAC_AC;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn AD_ADColumn {
                get {
                    return this.columnAD_AD;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn ADX_ADXColumn {
                get {
                    return this.columnADX_ADX;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn ALLIGATOR_JawColumn {
                get {
                    return this.columnALLIGATOR_Jaw;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn ALLIGATOR_TeethColumn {
                get {
                    return this.columnALLIGATOR_Teeth;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn ALLIGATOR_LipsColumn {
                get {
                    return this.columnALLIGATOR_Lips;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn AO_AOColumn {
                get {
                    return this.columnAO_AO;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn AROON_UPColumn {
                get {
                    return this.columnAROON_UP;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn AROON_DOWNColumn {
                get {
                    return this.columnAROON_DOWN;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn ARSI_ARSIColumn {
                get {
                    return this.columnARSI_ARSI;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn ASI_ASIColumn {
                get {
                    return this.columnASI_ASI;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn ATR_ATRColumn {
                get {
                    return this.columnATR_ATR;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn BB_TLColumn {
                get {
                    return this.columnBB_TL;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn BB_BLColumn {
                get {
                    return this.columnBB_BL;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn BB_ALColumn {
                get {
                    return this.columnBB_AL;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn CCI_CCIColumn {
                get {
                    return this.columnCCI_CCI;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn CHO_CHOColumn {
                get {
                    return this.columnCHO_CHO;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn CMF_CMFColumn {
                get {
                    return this.columnCMF_CMF;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn CMO_CMOColumn {
                get {
                    return this.columnCMO_CMO;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn 買い_DMI_DI_plusColumn {
                get {
                    return this.column買い_DMI_DI_plus;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn 買い_DMI_DI_minusColumn {
                get {
                    return this.column買い_DMI_DI_minus;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn 売り_DMI_DI_plusColumn {
                get {
                    return this.column売り_DMI_DI_plus;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn 売り_DMI_DI_minusColumn {
                get {
                    return this.column売り_DMI_DI_minus;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn EMA_EMAColumn {
                get {
                    return this.columnEMA_EMA;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn EW_EWColumn {
                get {
                    return this.columnEW_EW;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn EWN_EWNColumn {
                get {
                    return this.columnEWN_EWN;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn EWO_EWOColumn {
                get {
                    return this.columnEWO_EWO;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn FRACTAL_FRACTALColumn {
                get {
                    return this.columnFRACTAL_FRACTAL;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn GATOR_UPColumn {
                get {
                    return this.columnGATOR_UP;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn GATOR_DNColumn {
                get {
                    return this.columnGATOR_DN;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn HA_始値Column {
                get {
                    return this.columnHA_始値;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn HA_終値Column {
                get {
                    return this.columnHA_終値;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn HA_高値Column {
                get {
                    return this.columnHA_高値;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn HA_安値Column {
                get {
                    return this.columnHA_安値;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn ICH_TLColumn {
                get {
                    return this.columnICH_TL;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn ICH_KLColumn {
                get {
                    return this.columnICH_KL;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn ICH_CSColumn {
                get {
                    return this.columnICH_CS;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn ICH_SAColumn {
                get {
                    return this.columnICH_SA;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn ICH_SBColumn {
                get {
                    return this.columnICH_SB;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn KAMA_KAMAColumn {
                get {
                    return this.columnKAMA_KAMA;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn KRI_KRIColumn {
                get {
                    return this.columnKRI_KRI;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn LWMA_LWMAColumn {
                get {
                    return this.columnLWMA_LWMA;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn MACD_MACDColumn {
                get {
                    return this.columnMACD_MACD;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn MACD_SIGNALColumn {
                get {
                    return this.columnMACD_SIGNAL;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn MACD_HISTOGRAMColumn {
                get {
                    return this.columnMACD_HISTOGRAM;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn MAE_ME1Column {
                get {
                    return this.columnMAE_ME1;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn MAE_ME2Column {
                get {
                    return this.columnMAE_ME2;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn MD_MDColumn {
                get {
                    return this.columnMD_MD;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn MVA_MVAColumn {
                get {
                    return this.columnMVA_MVA;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn OSC_OSCColumn {
                get {
                    return this.columnOSC_OSC;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn PIVOT_PIVOTColumn {
                get {
                    return this.columnPIVOT_PIVOT;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn PPMA_PPMAColumn {
                get {
                    return this.columnPPMA_PPMA;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn REGRESSION_REGRESSIONColumn {
                get {
                    return this.columnREGRESSION_REGRESSION;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn RLW_PercentRColumn {
                get {
                    return this.columnRLW_PercentR;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn ROC_ROCColumn {
                get {
                    return this.columnROC_ROC;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn RSI_RSIColumn {
                get {
                    return this.columnRSI_RSI;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn SAR_UPColumn {
                get {
                    return this.columnSAR_UP;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn SAR_DNColumn {
                get {
                    return this.columnSAR_DN;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn SFK_KColumn {
                get {
                    return this.columnSFK_K;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn SFK_DColumn {
                get {
                    return this.columnSFK_D;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn SHIFT_I_MVAColumn {
                get {
                    return this.columnSHIFT_I_MVA;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn SHIFT_O_ADXColumn {
                get {
                    return this.columnSHIFT_O_ADX;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn SHOWTIMETOEND_SHOWTIMETOENDColumn {
                get {
                    return this.columnSHOWTIMETOEND_SHOWTIMETOEND;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn SMMA_SMMAColumn {
                get {
                    return this.columnSMMA_SMMA;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn SSD_KColumn {
                get {
                    return this.columnSSD_K;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn SSD_DColumn {
                get {
                    return this.columnSSD_D;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn STOCHASTIC_KColumn {
                get {
                    return this.columnSTOCHASTIC_K;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn STOCHASTIC_DColumn {
                get {
                    return this.columnSTOCHASTIC_D;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn TMA_TMAColumn {
                get {
                    return this.columnTMA_TMA;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn TMACD_TMACDColumn {
                get {
                    return this.columnTMACD_TMACD;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn TSI_TSIColumn {
                get {
                    return this.columnTSI_TSI;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn VIDYA_VColumn {
                get {
                    return this.columnVIDYA_V;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn WMA_WMAColumn {
                get {
                    return this.columnWMA_WMA;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn ZIGZAG_UpColumn {
                get {
                    return this.columnZIGZAG_Up;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public T_Indicator_15mRow this[int index] {
                get {
                    return ((T_Indicator_15mRow)(this.Rows[index]));
                }
            }
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event T_Indicator_15mRowChangeEventHandler T_Indicator_15mRowChanging;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event T_Indicator_15mRowChangeEventHandler T_Indicator_15mRowChanged;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event T_Indicator_15mRowChangeEventHandler T_Indicator_15mRowDeleting;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event T_Indicator_15mRowChangeEventHandler T_Indicator_15mRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void AddT_Indicator_15mRow(T_Indicator_15mRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public T_Indicator_15mRow AddT_Indicator_15mRow(
                        byte 通貨ペアNo, 
                        System.DateTime 日時, 
                        double AC_AC, 
                        double AD_AD, 
                        double ADX_ADX, 
                        double ALLIGATOR_Jaw, 
                        double ALLIGATOR_Teeth, 
                        double ALLIGATOR_Lips, 
                        double AO_AO, 
                        double AROON_UP, 
                        double AROON_DOWN, 
                        double ARSI_ARSI, 
                        double ASI_ASI, 
                        double ATR_ATR, 
                        double BB_TL, 
                        double BB_BL, 
                        double BB_AL, 
                        double CCI_CCI, 
                        double CHO_CHO, 
                        double CMF_CMF, 
                        double CMO_CMO, 
                        double 買い_DMI_DI_plus, 
                        double 買い_DMI_DI_minus, 
                        double 売り_DMI_DI_plus, 
                        double 売り_DMI_DI_minus, 
                        double EMA_EMA, 
                        double EW_EW, 
                        double EWN_EWN, 
                        double EWO_EWO, 
                        double FRACTAL_FRACTAL, 
                        double GATOR_UP, 
                        double GATOR_DN, 
                        double HA_始値, 
                        double HA_終値, 
                        double HA_高値, 
                        double HA_安値, 
                        double ICH_TL, 
                        double ICH_KL, 
                        double ICH_CS, 
                        double ICH_SA, 
                        double ICH_SB, 
                        double KAMA_KAMA, 
                        double KRI_KRI, 
                        double LWMA_LWMA, 
                        double MACD_MACD, 
                        double MACD_SIGNAL, 
                        double MACD_HISTOGRAM, 
                        double MAE_ME1, 
                        double MAE_ME2, 
                        double MD_MD, 
                        double MVA_MVA, 
                        double OSC_OSC, 
                        double PIVOT_PIVOT, 
                        double PPMA_PPMA, 
                        double REGRESSION_REGRESSION, 
                        double RLW_PercentR, 
                        double ROC_ROC, 
                        double RSI_RSI, 
                        double SAR_UP, 
                        double SAR_DN, 
                        double SFK_K, 
                        double SFK_D, 
                        double SHIFT_I_MVA, 
                        double SHIFT_O_ADX, 
                        double SHOWTIMETOEND_SHOWTIMETOEND, 
                        double SMMA_SMMA, 
                        double SSD_K, 
                        double SSD_D, 
                        double STOCHASTIC_K, 
                        double STOCHASTIC_D, 
                        double TMA_TMA, 
                        double TMACD_TMACD, 
                        double TSI_TSI, 
                        double VIDYA_V, 
                        double WMA_WMA, 
                        double ZIGZAG_Up) {
                T_Indicator_15mRow rowT_Indicator_15mRow = ((T_Indicator_15mRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        通貨ペアNo,
                        日時,
                        AC_AC,
                        AD_AD,
                        ADX_ADX,
                        ALLIGATOR_Jaw,
                        ALLIGATOR_Teeth,
                        ALLIGATOR_Lips,
                        AO_AO,
                        AROON_UP,
                        AROON_DOWN,
                        ARSI_ARSI,
                        ASI_ASI,
                        ATR_ATR,
                        BB_TL,
                        BB_BL,
                        BB_AL,
                        CCI_CCI,
                        CHO_CHO,
                        CMF_CMF,
                        CMO_CMO,
                        買い_DMI_DI_plus,
                        買い_DMI_DI_minus,
                        売り_DMI_DI_plus,
                        売り_DMI_DI_minus,
                        EMA_EMA,
                        EW_EW,
                        EWN_EWN,
                        EWO_EWO,
                        FRACTAL_FRACTAL,
                        GATOR_UP,
                        GATOR_DN,
                        HA_始値,
                        HA_終値,
                        HA_高値,
                        HA_安値,
                        ICH_TL,
                        ICH_KL,
                        ICH_CS,
                        ICH_SA,
                        ICH_SB,
                        KAMA_KAMA,
                        KRI_KRI,
                        LWMA_LWMA,
                        MACD_MACD,
                        MACD_SIGNAL,
                        MACD_HISTOGRAM,
                        MAE_ME1,
                        MAE_ME2,
                        MD_MD,
                        MVA_MVA,
                        OSC_OSC,
                        PIVOT_PIVOT,
                        PPMA_PPMA,
                        REGRESSION_REGRESSION,
                        RLW_PercentR,
                        ROC_ROC,
                        RSI_RSI,
                        SAR_UP,
                        SAR_DN,
                        SFK_K,
                        SFK_D,
                        SHIFT_I_MVA,
                        SHIFT_O_ADX,
                        SHOWTIMETOEND_SHOWTIMETOEND,
                        SMMA_SMMA,
                        SSD_K,
                        SSD_D,
                        STOCHASTIC_K,
                        STOCHASTIC_D,
                        TMA_TMA,
                        TMACD_TMACD,
                        TSI_TSI,
                        VIDYA_V,
                        WMA_WMA,
                        ZIGZAG_Up};
                rowT_Indicator_15mRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowT_Indicator_15mRow);
                return rowT_Indicator_15mRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public T_Indicator_15mRow FindBy通貨ペアNo日時(byte 通貨ペアNo, System.DateTime 日時) {
                return ((T_Indicator_15mRow)(this.Rows.Find(new object[] {
                            通貨ペアNo,
                            日時})));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public override global::System.Data.DataTable Clone() {
                T_Indicator_15mDataTable cln = ((T_Indicator_15mDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Data.DataTable CreateInstance() {
                return new T_Indicator_15mDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal void InitVars() {
                this.column通貨ペアNo = base.Columns["通貨ペアNo"];
                this.column日時 = base.Columns["日時"];
                this.columnAC_AC = base.Columns["AC_AC"];
                this.columnAD_AD = base.Columns["AD_AD"];
                this.columnADX_ADX = base.Columns["ADX_ADX"];
                this.columnALLIGATOR_Jaw = base.Columns["ALLIGATOR_Jaw"];
                this.columnALLIGATOR_Teeth = base.Columns["ALLIGATOR_Teeth"];
                this.columnALLIGATOR_Lips = base.Columns["ALLIGATOR_Lips"];
                this.columnAO_AO = base.Columns["AO_AO"];
                this.columnAROON_UP = base.Columns["AROON_UP"];
                this.columnAROON_DOWN = base.Columns["AROON_DOWN"];
                this.columnARSI_ARSI = base.Columns["ARSI_ARSI"];
                this.columnASI_ASI = base.Columns["ASI_ASI"];
                this.columnATR_ATR = base.Columns["ATR_ATR"];
                this.columnBB_TL = base.Columns["BB_TL"];
                this.columnBB_BL = base.Columns["BB_BL"];
                this.columnBB_AL = base.Columns["BB_AL"];
                this.columnCCI_CCI = base.Columns["CCI_CCI"];
                this.columnCHO_CHO = base.Columns["CHO_CHO"];
                this.columnCMF_CMF = base.Columns["CMF_CMF"];
                this.columnCMO_CMO = base.Columns["CMO_CMO"];
                this.column買い_DMI_DI_plus = base.Columns["買い_DMI_DI_plus"];
                this.column買い_DMI_DI_minus = base.Columns["買い_DMI_DI_minus"];
                this.column売り_DMI_DI_plus = base.Columns["売り_DMI_DI_plus"];
                this.column売り_DMI_DI_minus = base.Columns["売り_DMI_DI_minus"];
                this.columnEMA_EMA = base.Columns["EMA_EMA"];
                this.columnEW_EW = base.Columns["EW_EW"];
                this.columnEWN_EWN = base.Columns["EWN_EWN"];
                this.columnEWO_EWO = base.Columns["EWO_EWO"];
                this.columnFRACTAL_FRACTAL = base.Columns["FRACTAL_FRACTAL"];
                this.columnGATOR_UP = base.Columns["GATOR_UP"];
                this.columnGATOR_DN = base.Columns["GATOR_DN"];
                this.columnHA_始値 = base.Columns["HA_始値"];
                this.columnHA_終値 = base.Columns["HA_終値"];
                this.columnHA_高値 = base.Columns["HA_高値"];
                this.columnHA_安値 = base.Columns["HA_安値"];
                this.columnICH_TL = base.Columns["ICH_TL"];
                this.columnICH_KL = base.Columns["ICH_KL"];
                this.columnICH_CS = base.Columns["ICH_CS"];
                this.columnICH_SA = base.Columns["ICH_SA"];
                this.columnICH_SB = base.Columns["ICH_SB"];
                this.columnKAMA_KAMA = base.Columns["KAMA_KAMA"];
                this.columnKRI_KRI = base.Columns["KRI_KRI"];
                this.columnLWMA_LWMA = base.Columns["LWMA_LWMA"];
                this.columnMACD_MACD = base.Columns["MACD_MACD"];
                this.columnMACD_SIGNAL = base.Columns["MACD_SIGNAL"];
                this.columnMACD_HISTOGRAM = base.Columns["MACD_HISTOGRAM"];
                this.columnMAE_ME1 = base.Columns["MAE_ME1"];
                this.columnMAE_ME2 = base.Columns["MAE_ME2"];
                this.columnMD_MD = base.Columns["MD_MD"];
                this.columnMVA_MVA = base.Columns["MVA_MVA"];
                this.columnOSC_OSC = base.Columns["OSC_OSC"];
                this.columnPIVOT_PIVOT = base.Columns["PIVOT_PIVOT"];
                this.columnPPMA_PPMA = base.Columns["PPMA_PPMA"];
                this.columnREGRESSION_REGRESSION = base.Columns["REGRESSION_REGRESSION"];
                this.columnRLW_PercentR = base.Columns["RLW_PercentR"];
                this.columnROC_ROC = base.Columns["ROC_ROC"];
                this.columnRSI_RSI = base.Columns["RSI_RSI"];
                this.columnSAR_UP = base.Columns["SAR_UP"];
                this.columnSAR_DN = base.Columns["SAR_DN"];
                this.columnSFK_K = base.Columns["SFK_K"];
                this.columnSFK_D = base.Columns["SFK_D"];
                this.columnSHIFT_I_MVA = base.Columns["SHIFT_I_MVA"];
                this.columnSHIFT_O_ADX = base.Columns["SHIFT_O_ADX"];
                this.columnSHOWTIMETOEND_SHOWTIMETOEND = base.Columns["SHOWTIMETOEND_SHOWTIMETOEND"];
                this.columnSMMA_SMMA = base.Columns["SMMA_SMMA"];
                this.columnSSD_K = base.Columns["SSD_K"];
                this.columnSSD_D = base.Columns["SSD_D"];
                this.columnSTOCHASTIC_K = base.Columns["STOCHASTIC_K"];
                this.columnSTOCHASTIC_D = base.Columns["STOCHASTIC_D"];
                this.columnTMA_TMA = base.Columns["TMA_TMA"];
                this.columnTMACD_TMACD = base.Columns["TMACD_TMACD"];
                this.columnTSI_TSI = base.Columns["TSI_TSI"];
                this.columnVIDYA_V = base.Columns["VIDYA_V"];
                this.columnWMA_WMA = base.Columns["WMA_WMA"];
                this.columnZIGZAG_Up = base.Columns["ZIGZAG_Up"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            private void InitClass() {
                this.column通貨ペアNo = new global::System.Data.DataColumn("通貨ペアNo", typeof(byte), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.column通貨ペアNo);
                this.column日時 = new global::System.Data.DataColumn("日時", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.column日時);
                this.columnAC_AC = new global::System.Data.DataColumn("AC_AC", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnAC_AC);
                this.columnAD_AD = new global::System.Data.DataColumn("AD_AD", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnAD_AD);
                this.columnADX_ADX = new global::System.Data.DataColumn("ADX_ADX", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnADX_ADX);
                this.columnALLIGATOR_Jaw = new global::System.Data.DataColumn("ALLIGATOR_Jaw", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnALLIGATOR_Jaw);
                this.columnALLIGATOR_Teeth = new global::System.Data.DataColumn("ALLIGATOR_Teeth", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnALLIGATOR_Teeth);
                this.columnALLIGATOR_Lips = new global::System.Data.DataColumn("ALLIGATOR_Lips", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnALLIGATOR_Lips);
                this.columnAO_AO = new global::System.Data.DataColumn("AO_AO", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnAO_AO);
                this.columnAROON_UP = new global::System.Data.DataColumn("AROON_UP", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnAROON_UP);
                this.columnAROON_DOWN = new global::System.Data.DataColumn("AROON_DOWN", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnAROON_DOWN);
                this.columnARSI_ARSI = new global::System.Data.DataColumn("ARSI_ARSI", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnARSI_ARSI);
                this.columnASI_ASI = new global::System.Data.DataColumn("ASI_ASI", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnASI_ASI);
                this.columnATR_ATR = new global::System.Data.DataColumn("ATR_ATR", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnATR_ATR);
                this.columnBB_TL = new global::System.Data.DataColumn("BB_TL", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnBB_TL);
                this.columnBB_BL = new global::System.Data.DataColumn("BB_BL", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnBB_BL);
                this.columnBB_AL = new global::System.Data.DataColumn("BB_AL", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnBB_AL);
                this.columnCCI_CCI = new global::System.Data.DataColumn("CCI_CCI", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCCI_CCI);
                this.columnCHO_CHO = new global::System.Data.DataColumn("CHO_CHO", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCHO_CHO);
                this.columnCMF_CMF = new global::System.Data.DataColumn("CMF_CMF", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCMF_CMF);
                this.columnCMO_CMO = new global::System.Data.DataColumn("CMO_CMO", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCMO_CMO);
                this.column買い_DMI_DI_plus = new global::System.Data.DataColumn("買い_DMI_DI_plus", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.column買い_DMI_DI_plus);
                this.column買い_DMI_DI_minus = new global::System.Data.DataColumn("買い_DMI_DI_minus", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.column買い_DMI_DI_minus);
                this.column売り_DMI_DI_plus = new global::System.Data.DataColumn("売り_DMI_DI_plus", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.column売り_DMI_DI_plus);
                this.column売り_DMI_DI_minus = new global::System.Data.DataColumn("売り_DMI_DI_minus", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.column売り_DMI_DI_minus);
                this.columnEMA_EMA = new global::System.Data.DataColumn("EMA_EMA", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnEMA_EMA);
                this.columnEW_EW = new global::System.Data.DataColumn("EW_EW", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnEW_EW);
                this.columnEWN_EWN = new global::System.Data.DataColumn("EWN_EWN", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnEWN_EWN);
                this.columnEWO_EWO = new global::System.Data.DataColumn("EWO_EWO", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnEWO_EWO);
                this.columnFRACTAL_FRACTAL = new global::System.Data.DataColumn("FRACTAL_FRACTAL", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnFRACTAL_FRACTAL);
                this.columnGATOR_UP = new global::System.Data.DataColumn("GATOR_UP", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnGATOR_UP);
                this.columnGATOR_DN = new global::System.Data.DataColumn("GATOR_DN", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnGATOR_DN);
                this.columnHA_始値 = new global::System.Data.DataColumn("HA_始値", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnHA_始値);
                this.columnHA_終値 = new global::System.Data.DataColumn("HA_終値", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnHA_終値);
                this.columnHA_高値 = new global::System.Data.DataColumn("HA_高値", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnHA_高値);
                this.columnHA_安値 = new global::System.Data.DataColumn("HA_安値", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnHA_安値);
                this.columnICH_TL = new global::System.Data.DataColumn("ICH_TL", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnICH_TL);
                this.columnICH_KL = new global::System.Data.DataColumn("ICH_KL", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnICH_KL);
                this.columnICH_CS = new global::System.Data.DataColumn("ICH_CS", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnICH_CS);
                this.columnICH_SA = new global::System.Data.DataColumn("ICH_SA", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnICH_SA);
                this.columnICH_SB = new global::System.Data.DataColumn("ICH_SB", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnICH_SB);
                this.columnKAMA_KAMA = new global::System.Data.DataColumn("KAMA_KAMA", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnKAMA_KAMA);
                this.columnKRI_KRI = new global::System.Data.DataColumn("KRI_KRI", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnKRI_KRI);
                this.columnLWMA_LWMA = new global::System.Data.DataColumn("LWMA_LWMA", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnLWMA_LWMA);
                this.columnMACD_MACD = new global::System.Data.DataColumn("MACD_MACD", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnMACD_MACD);
                this.columnMACD_SIGNAL = new global::System.Data.DataColumn("MACD_SIGNAL", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnMACD_SIGNAL);
                this.columnMACD_HISTOGRAM = new global::System.Data.DataColumn("MACD_HISTOGRAM", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnMACD_HISTOGRAM);
                this.columnMAE_ME1 = new global::System.Data.DataColumn("MAE_ME1", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnMAE_ME1);
                this.columnMAE_ME2 = new global::System.Data.DataColumn("MAE_ME2", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnMAE_ME2);
                this.columnMD_MD = new global::System.Data.DataColumn("MD_MD", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnMD_MD);
                this.columnMVA_MVA = new global::System.Data.DataColumn("MVA_MVA", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnMVA_MVA);
                this.columnOSC_OSC = new global::System.Data.DataColumn("OSC_OSC", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnOSC_OSC);
                this.columnPIVOT_PIVOT = new global::System.Data.DataColumn("PIVOT_PIVOT", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPIVOT_PIVOT);
                this.columnPPMA_PPMA = new global::System.Data.DataColumn("PPMA_PPMA", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPPMA_PPMA);
                this.columnREGRESSION_REGRESSION = new global::System.Data.DataColumn("REGRESSION_REGRESSION", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnREGRESSION_REGRESSION);
                this.columnRLW_PercentR = new global::System.Data.DataColumn("RLW_PercentR", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnRLW_PercentR);
                this.columnROC_ROC = new global::System.Data.DataColumn("ROC_ROC", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnROC_ROC);
                this.columnRSI_RSI = new global::System.Data.DataColumn("RSI_RSI", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnRSI_RSI);
                this.columnSAR_UP = new global::System.Data.DataColumn("SAR_UP", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSAR_UP);
                this.columnSAR_DN = new global::System.Data.DataColumn("SAR_DN", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSAR_DN);
                this.columnSFK_K = new global::System.Data.DataColumn("SFK_K", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSFK_K);
                this.columnSFK_D = new global::System.Data.DataColumn("SFK_D", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSFK_D);
                this.columnSHIFT_I_MVA = new global::System.Data.DataColumn("SHIFT_I_MVA", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSHIFT_I_MVA);
                this.columnSHIFT_O_ADX = new global::System.Data.DataColumn("SHIFT_O_ADX", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSHIFT_O_ADX);
                this.columnSHOWTIMETOEND_SHOWTIMETOEND = new global::System.Data.DataColumn("SHOWTIMETOEND_SHOWTIMETOEND", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSHOWTIMETOEND_SHOWTIMETOEND);
                this.columnSMMA_SMMA = new global::System.Data.DataColumn("SMMA_SMMA", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSMMA_SMMA);
                this.columnSSD_K = new global::System.Data.DataColumn("SSD_K", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSSD_K);
                this.columnSSD_D = new global::System.Data.DataColumn("SSD_D", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSSD_D);
                this.columnSTOCHASTIC_K = new global::System.Data.DataColumn("STOCHASTIC_K", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSTOCHASTIC_K);
                this.columnSTOCHASTIC_D = new global::System.Data.DataColumn("STOCHASTIC_D", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSTOCHASTIC_D);
                this.columnTMA_TMA = new global::System.Data.DataColumn("TMA_TMA", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnTMA_TMA);
                this.columnTMACD_TMACD = new global::System.Data.DataColumn("TMACD_TMACD", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnTMACD_TMACD);
                this.columnTSI_TSI = new global::System.Data.DataColumn("TSI_TSI", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnTSI_TSI);
                this.columnVIDYA_V = new global::System.Data.DataColumn("VIDYA_V", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnVIDYA_V);
                this.columnWMA_WMA = new global::System.Data.DataColumn("WMA_WMA", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnWMA_WMA);
                this.columnZIGZAG_Up = new global::System.Data.DataColumn("ZIGZAG_Up", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnZIGZAG_Up);
                this.Constraints.Add(new global::System.Data.UniqueConstraint("Constraint1", new global::System.Data.DataColumn[] {
                                this.column通貨ペアNo,
                                this.column日時}, true));
                this.column通貨ペアNo.AllowDBNull = false;
                this.column日時.AllowDBNull = false;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public T_Indicator_15mRow NewT_Indicator_15mRow() {
                return ((T_Indicator_15mRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new T_Indicator_15mRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Type GetRowType() {
                return typeof(T_Indicator_15mRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.T_Indicator_15mRowChanged != null)) {
                    this.T_Indicator_15mRowChanged(this, new T_Indicator_15mRowChangeEvent(((T_Indicator_15mRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.T_Indicator_15mRowChanging != null)) {
                    this.T_Indicator_15mRowChanging(this, new T_Indicator_15mRowChangeEvent(((T_Indicator_15mRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.T_Indicator_15mRowDeleted != null)) {
                    this.T_Indicator_15mRowDeleted(this, new T_Indicator_15mRowChangeEvent(((T_Indicator_15mRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.T_Indicator_15mRowDeleting != null)) {
                    this.T_Indicator_15mRowDeleting(this, new T_Indicator_15mRowChangeEvent(((T_Indicator_15mRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void RemoveT_Indicator_15mRow(T_Indicator_15mRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                DFX_smlt ds = new DFX_smlt();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "T_Indicator_15mDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class T_RateHistory_15mDataTable : global::System.Data.TypedTableBase<T_RateHistory_15mRow> {
            
            private global::System.Data.DataColumn column通貨ペアNo;
            
            private global::System.Data.DataColumn column日時;
            
            private global::System.Data.DataColumn column買い_始値;
            
            private global::System.Data.DataColumn column買い_高値;
            
            private global::System.Data.DataColumn column買い_安値;
            
            private global::System.Data.DataColumn column買い_終値;
            
            private global::System.Data.DataColumn column売り_始値;
            
            private global::System.Data.DataColumn column売り_高値;
            
            private global::System.Data.DataColumn column売り_安値;
            
            private global::System.Data.DataColumn column売り_終値;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public T_RateHistory_15mDataTable() {
                this.TableName = "T_RateHistory_15m";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal T_RateHistory_15mDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected T_RateHistory_15mDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn 通貨ペアNoColumn {
                get {
                    return this.column通貨ペアNo;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn 日時Column {
                get {
                    return this.column日時;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn 買い_始値Column {
                get {
                    return this.column買い_始値;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn 買い_高値Column {
                get {
                    return this.column買い_高値;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn 買い_安値Column {
                get {
                    return this.column買い_安値;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn 買い_終値Column {
                get {
                    return this.column買い_終値;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn 売り_始値Column {
                get {
                    return this.column売り_始値;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn 売り_高値Column {
                get {
                    return this.column売り_高値;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn 売り_安値Column {
                get {
                    return this.column売り_安値;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn 売り_終値Column {
                get {
                    return this.column売り_終値;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public T_RateHistory_15mRow this[int index] {
                get {
                    return ((T_RateHistory_15mRow)(this.Rows[index]));
                }
            }
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event T_RateHistory_15mRowChangeEventHandler T_RateHistory_15mRowChanging;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event T_RateHistory_15mRowChangeEventHandler T_RateHistory_15mRowChanged;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event T_RateHistory_15mRowChangeEventHandler T_RateHistory_15mRowDeleting;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event T_RateHistory_15mRowChangeEventHandler T_RateHistory_15mRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void AddT_RateHistory_15mRow(T_RateHistory_15mRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public T_RateHistory_15mRow AddT_RateHistory_15mRow(byte 通貨ペアNo, System.DateTime 日時, double 買い_始値, double 買い_高値, double 買い_安値, double 買い_終値, double 売り_始値, double 売り_高値, double 売り_安値, double 売り_終値) {
                T_RateHistory_15mRow rowT_RateHistory_15mRow = ((T_RateHistory_15mRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        通貨ペアNo,
                        日時,
                        買い_始値,
                        買い_高値,
                        買い_安値,
                        買い_終値,
                        売り_始値,
                        売り_高値,
                        売り_安値,
                        売り_終値};
                rowT_RateHistory_15mRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowT_RateHistory_15mRow);
                return rowT_RateHistory_15mRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public T_RateHistory_15mRow FindBy通貨ペアNo日時(byte 通貨ペアNo, System.DateTime 日時) {
                return ((T_RateHistory_15mRow)(this.Rows.Find(new object[] {
                            通貨ペアNo,
                            日時})));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public override global::System.Data.DataTable Clone() {
                T_RateHistory_15mDataTable cln = ((T_RateHistory_15mDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Data.DataTable CreateInstance() {
                return new T_RateHistory_15mDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal void InitVars() {
                this.column通貨ペアNo = base.Columns["通貨ペアNo"];
                this.column日時 = base.Columns["日時"];
                this.column買い_始値 = base.Columns["買い_始値"];
                this.column買い_高値 = base.Columns["買い_高値"];
                this.column買い_安値 = base.Columns["買い_安値"];
                this.column買い_終値 = base.Columns["買い_終値"];
                this.column売り_始値 = base.Columns["売り_始値"];
                this.column売り_高値 = base.Columns["売り_高値"];
                this.column売り_安値 = base.Columns["売り_安値"];
                this.column売り_終値 = base.Columns["売り_終値"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            private void InitClass() {
                this.column通貨ペアNo = new global::System.Data.DataColumn("通貨ペアNo", typeof(byte), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.column通貨ペアNo);
                this.column日時 = new global::System.Data.DataColumn("日時", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.column日時);
                this.column買い_始値 = new global::System.Data.DataColumn("買い_始値", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.column買い_始値);
                this.column買い_高値 = new global::System.Data.DataColumn("買い_高値", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.column買い_高値);
                this.column買い_安値 = new global::System.Data.DataColumn("買い_安値", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.column買い_安値);
                this.column買い_終値 = new global::System.Data.DataColumn("買い_終値", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.column買い_終値);
                this.column売り_始値 = new global::System.Data.DataColumn("売り_始値", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.column売り_始値);
                this.column売り_高値 = new global::System.Data.DataColumn("売り_高値", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.column売り_高値);
                this.column売り_安値 = new global::System.Data.DataColumn("売り_安値", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.column売り_安値);
                this.column売り_終値 = new global::System.Data.DataColumn("売り_終値", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.column売り_終値);
                this.Constraints.Add(new global::System.Data.UniqueConstraint("Constraint1", new global::System.Data.DataColumn[] {
                                this.column通貨ペアNo,
                                this.column日時}, true));
                this.column通貨ペアNo.AllowDBNull = false;
                this.column日時.AllowDBNull = false;
                this.column買い_始値.AllowDBNull = false;
                this.column買い_高値.AllowDBNull = false;
                this.column買い_安値.AllowDBNull = false;
                this.column買い_終値.AllowDBNull = false;
                this.column売り_始値.AllowDBNull = false;
                this.column売り_高値.AllowDBNull = false;
                this.column売り_安値.AllowDBNull = false;
                this.column売り_終値.AllowDBNull = false;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public T_RateHistory_15mRow NewT_RateHistory_15mRow() {
                return ((T_RateHistory_15mRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new T_RateHistory_15mRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Type GetRowType() {
                return typeof(T_RateHistory_15mRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.T_RateHistory_15mRowChanged != null)) {
                    this.T_RateHistory_15mRowChanged(this, new T_RateHistory_15mRowChangeEvent(((T_RateHistory_15mRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.T_RateHistory_15mRowChanging != null)) {
                    this.T_RateHistory_15mRowChanging(this, new T_RateHistory_15mRowChangeEvent(((T_RateHistory_15mRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.T_RateHistory_15mRowDeleted != null)) {
                    this.T_RateHistory_15mRowDeleted(this, new T_RateHistory_15mRowChangeEvent(((T_RateHistory_15mRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.T_RateHistory_15mRowDeleting != null)) {
                    this.T_RateHistory_15mRowDeleting(this, new T_RateHistory_15mRowChangeEvent(((T_RateHistory_15mRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void RemoveT_RateHistory_15mRow(T_RateHistory_15mRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                DFX_smlt ds = new DFX_smlt();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "T_RateHistory_15mDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class T_Order判定HistoryDataTable : global::System.Data.TypedTableBase<T_Order判定HistoryRow> {
            
            private global::System.Data.DataColumn column通貨ペアNo;
            
            private global::System.Data.DataColumn column日時;
            
            private global::System.Data.DataColumn column処理位置;
            
            private global::System.Data.DataColumn column買いRate;
            
            private global::System.Data.DataColumn column売りRate;
            
            private global::System.Data.DataColumn columnOrderEntryRate;
            
            private global::System.Data.DataColumn columnLimit;
            
            private global::System.Data.DataColumn column危険Rate;
            
            private global::System.Data.DataColumn column処理位置_補足;
            
            private global::System.Data.DataColumn column取引状況;
            
            private global::System.Data.DataColumn column注文設定_モード;
            
            private global::System.Data.DataColumn column買売モード_15m;
            
            private global::System.Data.DataColumn column買売モード_Daily;
            
            private global::System.Data.DataColumn column成行をスキップ;
            
            private global::System.Data.DataColumn columnポジション有り;
            
            private global::System.Data.DataColumn columnボーナスステージ判定;
            
            private global::System.Data.DataColumn columnADX上昇判定_15m;
            
            private global::System.Data.DataColumn columnASI買い気配;
            
            private global::System.Data.DataColumn columnDMIplusDI上昇判定;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public T_Order判定HistoryDataTable() {
                this.TableName = "T_Order判定History";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal T_Order判定HistoryDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected T_Order判定HistoryDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn 通貨ペアNoColumn {
                get {
                    return this.column通貨ペアNo;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn 日時Column {
                get {
                    return this.column日時;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn 処理位置Column {
                get {
                    return this.column処理位置;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn 買いRateColumn {
                get {
                    return this.column買いRate;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn 売りRateColumn {
                get {
                    return this.column売りRate;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn OrderEntryRateColumn {
                get {
                    return this.columnOrderEntryRate;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn LimitColumn {
                get {
                    return this.columnLimit;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn 危険RateColumn {
                get {
                    return this.column危険Rate;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn 処理位置_補足Column {
                get {
                    return this.column処理位置_補足;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn 取引状況Column {
                get {
                    return this.column取引状況;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn 注文設定_モードColumn {
                get {
                    return this.column注文設定_モード;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn 買売モード_15mColumn {
                get {
                    return this.column買売モード_15m;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn 買売モード_DailyColumn {
                get {
                    return this.column買売モード_Daily;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn 成行をスキップColumn {
                get {
                    return this.column成行をスキップ;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn ポジション有りColumn {
                get {
                    return this.columnポジション有り;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn ボーナスステージ判定Column {
                get {
                    return this.columnボーナスステージ判定;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn ADX上昇判定_15mColumn {
                get {
                    return this.columnADX上昇判定_15m;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn ASI買い気配Column {
                get {
                    return this.columnASI買い気配;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn DMIplusDI上昇判定Column {
                get {
                    return this.columnDMIplusDI上昇判定;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public T_Order判定HistoryRow this[int index] {
                get {
                    return ((T_Order判定HistoryRow)(this.Rows[index]));
                }
            }
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event T_Order判定HistoryRowChangeEventHandler T_Order判定HistoryRowChanging;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event T_Order判定HistoryRowChangeEventHandler T_Order判定HistoryRowChanged;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event T_Order判定HistoryRowChangeEventHandler T_Order判定HistoryRowDeleting;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event T_Order判定HistoryRowChangeEventHandler T_Order判定HistoryRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void AddT_Order判定HistoryRow(T_Order判定HistoryRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public T_Order判定HistoryRow AddT_Order判定HistoryRow(
                        byte 通貨ペアNo, 
                        System.DateTime 日時, 
                        byte 処理位置, 
                        double 買いRate, 
                        double 売りRate, 
                        double OrderEntryRate, 
                        double Limit, 
                        double 危険Rate, 
                        string 処理位置_補足, 
                        string 取引状況, 
                        string 注文設定_モード, 
                        string 買売モード_15m, 
                        string 買売モード_Daily, 
                        string 成行をスキップ, 
                        string ポジション有り, 
                        string ボーナスステージ判定, 
                        string ADX上昇判定_15m, 
                        string ASI買い気配, 
                        string DMIplusDI上昇判定) {
                T_Order判定HistoryRow rowT_Order判定HistoryRow = ((T_Order判定HistoryRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        通貨ペアNo,
                        日時,
                        処理位置,
                        買いRate,
                        売りRate,
                        OrderEntryRate,
                        Limit,
                        危険Rate,
                        処理位置_補足,
                        取引状況,
                        注文設定_モード,
                        買売モード_15m,
                        買売モード_Daily,
                        成行をスキップ,
                        ポジション有り,
                        ボーナスステージ判定,
                        ADX上昇判定_15m,
                        ASI買い気配,
                        DMIplusDI上昇判定};
                rowT_Order判定HistoryRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowT_Order判定HistoryRow);
                return rowT_Order判定HistoryRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public T_Order判定HistoryRow FindBy通貨ペアNo日時処理位置(byte 通貨ペアNo, System.DateTime 日時, byte 処理位置) {
                return ((T_Order判定HistoryRow)(this.Rows.Find(new object[] {
                            通貨ペアNo,
                            日時,
                            処理位置})));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public override global::System.Data.DataTable Clone() {
                T_Order判定HistoryDataTable cln = ((T_Order判定HistoryDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Data.DataTable CreateInstance() {
                return new T_Order判定HistoryDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal void InitVars() {
                this.column通貨ペアNo = base.Columns["通貨ペアNo"];
                this.column日時 = base.Columns["日時"];
                this.column処理位置 = base.Columns["処理位置"];
                this.column買いRate = base.Columns["買いRate"];
                this.column売りRate = base.Columns["売りRate"];
                this.columnOrderEntryRate = base.Columns["OrderEntryRate"];
                this.columnLimit = base.Columns["Limit"];
                this.column危険Rate = base.Columns["危険Rate"];
                this.column処理位置_補足 = base.Columns["処理位置_補足"];
                this.column取引状況 = base.Columns["取引状況"];
                this.column注文設定_モード = base.Columns["注文設定_モード"];
                this.column買売モード_15m = base.Columns["買売モード_15m"];
                this.column買売モード_Daily = base.Columns["買売モード_Daily"];
                this.column成行をスキップ = base.Columns["成行をスキップ"];
                this.columnポジション有り = base.Columns["ポジション有り"];
                this.columnボーナスステージ判定 = base.Columns["ボーナスステージ判定"];
                this.columnADX上昇判定_15m = base.Columns["ADX上昇判定_15m"];
                this.columnASI買い気配 = base.Columns["ASI買い気配"];
                this.columnDMIplusDI上昇判定 = base.Columns["DMIplusDI上昇判定"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            private void InitClass() {
                this.column通貨ペアNo = new global::System.Data.DataColumn("通貨ペアNo", typeof(byte), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.column通貨ペアNo);
                this.column日時 = new global::System.Data.DataColumn("日時", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.column日時);
                this.column処理位置 = new global::System.Data.DataColumn("処理位置", typeof(byte), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.column処理位置);
                this.column買いRate = new global::System.Data.DataColumn("買いRate", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.column買いRate);
                this.column売りRate = new global::System.Data.DataColumn("売りRate", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.column売りRate);
                this.columnOrderEntryRate = new global::System.Data.DataColumn("OrderEntryRate", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnOrderEntryRate);
                this.columnLimit = new global::System.Data.DataColumn("Limit", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnLimit);
                this.column危険Rate = new global::System.Data.DataColumn("危険Rate", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.column危険Rate);
                this.column処理位置_補足 = new global::System.Data.DataColumn("処理位置_補足", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.column処理位置_補足);
                this.column取引状況 = new global::System.Data.DataColumn("取引状況", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.column取引状況);
                this.column注文設定_モード = new global::System.Data.DataColumn("注文設定_モード", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.column注文設定_モード);
                this.column買売モード_15m = new global::System.Data.DataColumn("買売モード_15m", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.column買売モード_15m);
                this.column買売モード_Daily = new global::System.Data.DataColumn("買売モード_Daily", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.column買売モード_Daily);
                this.column成行をスキップ = new global::System.Data.DataColumn("成行をスキップ", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.column成行をスキップ);
                this.columnポジション有り = new global::System.Data.DataColumn("ポジション有り", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnポジション有り);
                this.columnボーナスステージ判定 = new global::System.Data.DataColumn("ボーナスステージ判定", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnボーナスステージ判定);
                this.columnADX上昇判定_15m = new global::System.Data.DataColumn("ADX上昇判定_15m", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnADX上昇判定_15m);
                this.columnASI買い気配 = new global::System.Data.DataColumn("ASI買い気配", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnASI買い気配);
                this.columnDMIplusDI上昇判定 = new global::System.Data.DataColumn("DMIplusDI上昇判定", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDMIplusDI上昇判定);
                this.Constraints.Add(new global::System.Data.UniqueConstraint("Constraint1", new global::System.Data.DataColumn[] {
                                this.column通貨ペアNo,
                                this.column日時,
                                this.column処理位置}, true));
                this.column通貨ペアNo.AllowDBNull = false;
                this.column日時.AllowDBNull = false;
                this.column処理位置.AllowDBNull = false;
                this.column処理位置_補足.MaxLength = 200;
                this.column取引状況.MaxLength = 100;
                this.column注文設定_モード.MaxLength = 10;
                this.column買売モード_15m.MaxLength = 10;
                this.column買売モード_Daily.MaxLength = 10;
                this.column成行をスキップ.MaxLength = 10;
                this.columnポジション有り.MaxLength = 10;
                this.columnボーナスステージ判定.MaxLength = 10;
                this.columnADX上昇判定_15m.MaxLength = 10;
                this.columnASI買い気配.MaxLength = 10;
                this.columnDMIplusDI上昇判定.MaxLength = 10;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public T_Order判定HistoryRow NewT_Order判定HistoryRow() {
                return ((T_Order判定HistoryRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new T_Order判定HistoryRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Type GetRowType() {
                return typeof(T_Order判定HistoryRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.T_Order判定HistoryRowChanged != null)) {
                    this.T_Order判定HistoryRowChanged(this, new T_Order判定HistoryRowChangeEvent(((T_Order判定HistoryRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.T_Order判定HistoryRowChanging != null)) {
                    this.T_Order判定HistoryRowChanging(this, new T_Order判定HistoryRowChangeEvent(((T_Order判定HistoryRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.T_Order判定HistoryRowDeleted != null)) {
                    this.T_Order判定HistoryRowDeleted(this, new T_Order判定HistoryRowChangeEvent(((T_Order判定HistoryRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.T_Order判定HistoryRowDeleting != null)) {
                    this.T_Order判定HistoryRowDeleting(this, new T_Order判定HistoryRowChangeEvent(((T_Order判定HistoryRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void RemoveT_Order判定HistoryRow(T_Order判定HistoryRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                DFX_smlt ds = new DFX_smlt();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "T_Order判定HistoryDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        public partial class T_Indicator_15mRow : global::System.Data.DataRow {
            
            private T_Indicator_15mDataTable tableT_Indicator_15m;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal T_Indicator_15mRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableT_Indicator_15m = ((T_Indicator_15mDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public byte 通貨ペアNo {
                get {
                    return ((byte)(this[this.tableT_Indicator_15m.通貨ペアNoColumn]));
                }
                set {
                    this[this.tableT_Indicator_15m.通貨ペアNoColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public System.DateTime 日時 {
                get {
                    return ((global::System.DateTime)(this[this.tableT_Indicator_15m.日時Column]));
                }
                set {
                    this[this.tableT_Indicator_15m.日時Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public double AC_AC {
                get {
                    try {
                        return ((double)(this[this.tableT_Indicator_15m.AC_ACColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'T_Indicator_15m\' にある列 \'AC_AC\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tableT_Indicator_15m.AC_ACColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public double AD_AD {
                get {
                    try {
                        return ((double)(this[this.tableT_Indicator_15m.AD_ADColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'T_Indicator_15m\' にある列 \'AD_AD\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tableT_Indicator_15m.AD_ADColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public double ADX_ADX {
                get {
                    try {
                        return ((double)(this[this.tableT_Indicator_15m.ADX_ADXColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'T_Indicator_15m\' にある列 \'ADX_ADX\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tableT_Indicator_15m.ADX_ADXColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public double ALLIGATOR_Jaw {
                get {
                    try {
                        return ((double)(this[this.tableT_Indicator_15m.ALLIGATOR_JawColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'T_Indicator_15m\' にある列 \'ALLIGATOR_Jaw\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tableT_Indicator_15m.ALLIGATOR_JawColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public double ALLIGATOR_Teeth {
                get {
                    try {
                        return ((double)(this[this.tableT_Indicator_15m.ALLIGATOR_TeethColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'T_Indicator_15m\' にある列 \'ALLIGATOR_Teeth\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tableT_Indicator_15m.ALLIGATOR_TeethColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public double ALLIGATOR_Lips {
                get {
                    try {
                        return ((double)(this[this.tableT_Indicator_15m.ALLIGATOR_LipsColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'T_Indicator_15m\' にある列 \'ALLIGATOR_Lips\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tableT_Indicator_15m.ALLIGATOR_LipsColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public double AO_AO {
                get {
                    try {
                        return ((double)(this[this.tableT_Indicator_15m.AO_AOColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'T_Indicator_15m\' にある列 \'AO_AO\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tableT_Indicator_15m.AO_AOColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public double AROON_UP {
                get {
                    try {
                        return ((double)(this[this.tableT_Indicator_15m.AROON_UPColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'T_Indicator_15m\' にある列 \'AROON_UP\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tableT_Indicator_15m.AROON_UPColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public double AROON_DOWN {
                get {
                    try {
                        return ((double)(this[this.tableT_Indicator_15m.AROON_DOWNColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'T_Indicator_15m\' にある列 \'AROON_DOWN\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tableT_Indicator_15m.AROON_DOWNColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public double ARSI_ARSI {
                get {
                    try {
                        return ((double)(this[this.tableT_Indicator_15m.ARSI_ARSIColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'T_Indicator_15m\' にある列 \'ARSI_ARSI\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tableT_Indicator_15m.ARSI_ARSIColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public double ASI_ASI {
                get {
                    try {
                        return ((double)(this[this.tableT_Indicator_15m.ASI_ASIColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'T_Indicator_15m\' にある列 \'ASI_ASI\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tableT_Indicator_15m.ASI_ASIColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public double ATR_ATR {
                get {
                    try {
                        return ((double)(this[this.tableT_Indicator_15m.ATR_ATRColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'T_Indicator_15m\' にある列 \'ATR_ATR\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tableT_Indicator_15m.ATR_ATRColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public double BB_TL {
                get {
                    try {
                        return ((double)(this[this.tableT_Indicator_15m.BB_TLColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'T_Indicator_15m\' にある列 \'BB_TL\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tableT_Indicator_15m.BB_TLColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public double BB_BL {
                get {
                    try {
                        return ((double)(this[this.tableT_Indicator_15m.BB_BLColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'T_Indicator_15m\' にある列 \'BB_BL\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tableT_Indicator_15m.BB_BLColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public double BB_AL {
                get {
                    try {
                        return ((double)(this[this.tableT_Indicator_15m.BB_ALColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'T_Indicator_15m\' にある列 \'BB_AL\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tableT_Indicator_15m.BB_ALColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public double CCI_CCI {
                get {
                    try {
                        return ((double)(this[this.tableT_Indicator_15m.CCI_CCIColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'T_Indicator_15m\' にある列 \'CCI_CCI\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tableT_Indicator_15m.CCI_CCIColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public double CHO_CHO {
                get {
                    try {
                        return ((double)(this[this.tableT_Indicator_15m.CHO_CHOColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'T_Indicator_15m\' にある列 \'CHO_CHO\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tableT_Indicator_15m.CHO_CHOColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public double CMF_CMF {
                get {
                    try {
                        return ((double)(this[this.tableT_Indicator_15m.CMF_CMFColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'T_Indicator_15m\' にある列 \'CMF_CMF\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tableT_Indicator_15m.CMF_CMFColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public double CMO_CMO {
                get {
                    try {
                        return ((double)(this[this.tableT_Indicator_15m.CMO_CMOColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'T_Indicator_15m\' にある列 \'CMO_CMO\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tableT_Indicator_15m.CMO_CMOColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public double 買い_DMI_DI_plus {
                get {
                    try {
                        return ((double)(this[this.tableT_Indicator_15m.買い_DMI_DI_plusColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'T_Indicator_15m\' にある列 \'買い_DMI_DI_plus\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tableT_Indicator_15m.買い_DMI_DI_plusColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public double 買い_DMI_DI_minus {
                get {
                    try {
                        return ((double)(this[this.tableT_Indicator_15m.買い_DMI_DI_minusColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'T_Indicator_15m\' にある列 \'買い_DMI_DI_minus\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tableT_Indicator_15m.買い_DMI_DI_minusColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public double 売り_DMI_DI_plus {
                get {
                    try {
                        return ((double)(this[this.tableT_Indicator_15m.売り_DMI_DI_plusColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'T_Indicator_15m\' にある列 \'売り_DMI_DI_plus\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tableT_Indicator_15m.売り_DMI_DI_plusColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public double 売り_DMI_DI_minus {
                get {
                    try {
                        return ((double)(this[this.tableT_Indicator_15m.売り_DMI_DI_minusColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'T_Indicator_15m\' にある列 \'売り_DMI_DI_minus\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tableT_Indicator_15m.売り_DMI_DI_minusColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public double EMA_EMA {
                get {
                    try {
                        return ((double)(this[this.tableT_Indicator_15m.EMA_EMAColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'T_Indicator_15m\' にある列 \'EMA_EMA\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tableT_Indicator_15m.EMA_EMAColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public double EW_EW {
                get {
                    try {
                        return ((double)(this[this.tableT_Indicator_15m.EW_EWColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'T_Indicator_15m\' にある列 \'EW_EW\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tableT_Indicator_15m.EW_EWColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public double EWN_EWN {
                get {
                    try {
                        return ((double)(this[this.tableT_Indicator_15m.EWN_EWNColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'T_Indicator_15m\' にある列 \'EWN_EWN\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tableT_Indicator_15m.EWN_EWNColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public double EWO_EWO {
                get {
                    try {
                        return ((double)(this[this.tableT_Indicator_15m.EWO_EWOColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'T_Indicator_15m\' にある列 \'EWO_EWO\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tableT_Indicator_15m.EWO_EWOColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public double FRACTAL_FRACTAL {
                get {
                    try {
                        return ((double)(this[this.tableT_Indicator_15m.FRACTAL_FRACTALColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'T_Indicator_15m\' にある列 \'FRACTAL_FRACTAL\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tableT_Indicator_15m.FRACTAL_FRACTALColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public double GATOR_UP {
                get {
                    try {
                        return ((double)(this[this.tableT_Indicator_15m.GATOR_UPColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'T_Indicator_15m\' にある列 \'GATOR_UP\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tableT_Indicator_15m.GATOR_UPColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public double GATOR_DN {
                get {
                    try {
                        return ((double)(this[this.tableT_Indicator_15m.GATOR_DNColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'T_Indicator_15m\' にある列 \'GATOR_DN\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tableT_Indicator_15m.GATOR_DNColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public double HA_始値 {
                get {
                    try {
                        return ((double)(this[this.tableT_Indicator_15m.HA_始値Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'T_Indicator_15m\' にある列 \'HA_始値\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tableT_Indicator_15m.HA_始値Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public double HA_終値 {
                get {
                    try {
                        return ((double)(this[this.tableT_Indicator_15m.HA_終値Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'T_Indicator_15m\' にある列 \'HA_終値\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tableT_Indicator_15m.HA_終値Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public double HA_高値 {
                get {
                    try {
                        return ((double)(this[this.tableT_Indicator_15m.HA_高値Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'T_Indicator_15m\' にある列 \'HA_高値\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tableT_Indicator_15m.HA_高値Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public double HA_安値 {
                get {
                    try {
                        return ((double)(this[this.tableT_Indicator_15m.HA_安値Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'T_Indicator_15m\' にある列 \'HA_安値\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tableT_Indicator_15m.HA_安値Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public double ICH_TL {
                get {
                    try {
                        return ((double)(this[this.tableT_Indicator_15m.ICH_TLColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'T_Indicator_15m\' にある列 \'ICH_TL\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tableT_Indicator_15m.ICH_TLColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public double ICH_KL {
                get {
                    try {
                        return ((double)(this[this.tableT_Indicator_15m.ICH_KLColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'T_Indicator_15m\' にある列 \'ICH_KL\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tableT_Indicator_15m.ICH_KLColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public double ICH_CS {
                get {
                    try {
                        return ((double)(this[this.tableT_Indicator_15m.ICH_CSColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'T_Indicator_15m\' にある列 \'ICH_CS\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tableT_Indicator_15m.ICH_CSColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public double ICH_SA {
                get {
                    try {
                        return ((double)(this[this.tableT_Indicator_15m.ICH_SAColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'T_Indicator_15m\' にある列 \'ICH_SA\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tableT_Indicator_15m.ICH_SAColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public double ICH_SB {
                get {
                    try {
                        return ((double)(this[this.tableT_Indicator_15m.ICH_SBColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'T_Indicator_15m\' にある列 \'ICH_SB\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tableT_Indicator_15m.ICH_SBColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public double KAMA_KAMA {
                get {
                    try {
                        return ((double)(this[this.tableT_Indicator_15m.KAMA_KAMAColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'T_Indicator_15m\' にある列 \'KAMA_KAMA\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tableT_Indicator_15m.KAMA_KAMAColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public double KRI_KRI {
                get {
                    try {
                        return ((double)(this[this.tableT_Indicator_15m.KRI_KRIColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'T_Indicator_15m\' にある列 \'KRI_KRI\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tableT_Indicator_15m.KRI_KRIColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public double LWMA_LWMA {
                get {
                    try {
                        return ((double)(this[this.tableT_Indicator_15m.LWMA_LWMAColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'T_Indicator_15m\' にある列 \'LWMA_LWMA\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tableT_Indicator_15m.LWMA_LWMAColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public double MACD_MACD {
                get {
                    try {
                        return ((double)(this[this.tableT_Indicator_15m.MACD_MACDColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'T_Indicator_15m\' にある列 \'MACD_MACD\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tableT_Indicator_15m.MACD_MACDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public double MACD_SIGNAL {
                get {
                    try {
                        return ((double)(this[this.tableT_Indicator_15m.MACD_SIGNALColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'T_Indicator_15m\' にある列 \'MACD_SIGNAL\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tableT_Indicator_15m.MACD_SIGNALColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public double MACD_HISTOGRAM {
                get {
                    try {
                        return ((double)(this[this.tableT_Indicator_15m.MACD_HISTOGRAMColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'T_Indicator_15m\' にある列 \'MACD_HISTOGRAM\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tableT_Indicator_15m.MACD_HISTOGRAMColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public double MAE_ME1 {
                get {
                    try {
                        return ((double)(this[this.tableT_Indicator_15m.MAE_ME1Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'T_Indicator_15m\' にある列 \'MAE_ME1\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tableT_Indicator_15m.MAE_ME1Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public double MAE_ME2 {
                get {
                    try {
                        return ((double)(this[this.tableT_Indicator_15m.MAE_ME2Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'T_Indicator_15m\' にある列 \'MAE_ME2\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tableT_Indicator_15m.MAE_ME2Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public double MD_MD {
                get {
                    try {
                        return ((double)(this[this.tableT_Indicator_15m.MD_MDColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'T_Indicator_15m\' にある列 \'MD_MD\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tableT_Indicator_15m.MD_MDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public double MVA_MVA {
                get {
                    try {
                        return ((double)(this[this.tableT_Indicator_15m.MVA_MVAColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'T_Indicator_15m\' にある列 \'MVA_MVA\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tableT_Indicator_15m.MVA_MVAColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public double OSC_OSC {
                get {
                    try {
                        return ((double)(this[this.tableT_Indicator_15m.OSC_OSCColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'T_Indicator_15m\' にある列 \'OSC_OSC\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tableT_Indicator_15m.OSC_OSCColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public double PIVOT_PIVOT {
                get {
                    try {
                        return ((double)(this[this.tableT_Indicator_15m.PIVOT_PIVOTColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'T_Indicator_15m\' にある列 \'PIVOT_PIVOT\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tableT_Indicator_15m.PIVOT_PIVOTColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public double PPMA_PPMA {
                get {
                    try {
                        return ((double)(this[this.tableT_Indicator_15m.PPMA_PPMAColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'T_Indicator_15m\' にある列 \'PPMA_PPMA\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tableT_Indicator_15m.PPMA_PPMAColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public double REGRESSION_REGRESSION {
                get {
                    try {
                        return ((double)(this[this.tableT_Indicator_15m.REGRESSION_REGRESSIONColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'T_Indicator_15m\' にある列 \'REGRESSION_REGRESSION\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tableT_Indicator_15m.REGRESSION_REGRESSIONColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public double RLW_PercentR {
                get {
                    try {
                        return ((double)(this[this.tableT_Indicator_15m.RLW_PercentRColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'T_Indicator_15m\' にある列 \'RLW_PercentR\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tableT_Indicator_15m.RLW_PercentRColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public double ROC_ROC {
                get {
                    try {
                        return ((double)(this[this.tableT_Indicator_15m.ROC_ROCColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'T_Indicator_15m\' にある列 \'ROC_ROC\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tableT_Indicator_15m.ROC_ROCColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public double RSI_RSI {
                get {
                    try {
                        return ((double)(this[this.tableT_Indicator_15m.RSI_RSIColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'T_Indicator_15m\' にある列 \'RSI_RSI\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tableT_Indicator_15m.RSI_RSIColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public double SAR_UP {
                get {
                    try {
                        return ((double)(this[this.tableT_Indicator_15m.SAR_UPColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'T_Indicator_15m\' にある列 \'SAR_UP\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tableT_Indicator_15m.SAR_UPColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public double SAR_DN {
                get {
                    try {
                        return ((double)(this[this.tableT_Indicator_15m.SAR_DNColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'T_Indicator_15m\' にある列 \'SAR_DN\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tableT_Indicator_15m.SAR_DNColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public double SFK_K {
                get {
                    try {
                        return ((double)(this[this.tableT_Indicator_15m.SFK_KColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'T_Indicator_15m\' にある列 \'SFK_K\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tableT_Indicator_15m.SFK_KColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public double SFK_D {
                get {
                    try {
                        return ((double)(this[this.tableT_Indicator_15m.SFK_DColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'T_Indicator_15m\' にある列 \'SFK_D\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tableT_Indicator_15m.SFK_DColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public double SHIFT_I_MVA {
                get {
                    try {
                        return ((double)(this[this.tableT_Indicator_15m.SHIFT_I_MVAColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'T_Indicator_15m\' にある列 \'SHIFT_I_MVA\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tableT_Indicator_15m.SHIFT_I_MVAColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public double SHIFT_O_ADX {
                get {
                    try {
                        return ((double)(this[this.tableT_Indicator_15m.SHIFT_O_ADXColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'T_Indicator_15m\' にある列 \'SHIFT_O_ADX\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tableT_Indicator_15m.SHIFT_O_ADXColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public double SHOWTIMETOEND_SHOWTIMETOEND {
                get {
                    try {
                        return ((double)(this[this.tableT_Indicator_15m.SHOWTIMETOEND_SHOWTIMETOENDColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'T_Indicator_15m\' にある列 \'SHOWTIMETOEND_SHOWTIMETOEND\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tableT_Indicator_15m.SHOWTIMETOEND_SHOWTIMETOENDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public double SMMA_SMMA {
                get {
                    try {
                        return ((double)(this[this.tableT_Indicator_15m.SMMA_SMMAColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'T_Indicator_15m\' にある列 \'SMMA_SMMA\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tableT_Indicator_15m.SMMA_SMMAColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public double SSD_K {
                get {
                    try {
                        return ((double)(this[this.tableT_Indicator_15m.SSD_KColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'T_Indicator_15m\' にある列 \'SSD_K\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tableT_Indicator_15m.SSD_KColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public double SSD_D {
                get {
                    try {
                        return ((double)(this[this.tableT_Indicator_15m.SSD_DColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'T_Indicator_15m\' にある列 \'SSD_D\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tableT_Indicator_15m.SSD_DColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public double STOCHASTIC_K {
                get {
                    try {
                        return ((double)(this[this.tableT_Indicator_15m.STOCHASTIC_KColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'T_Indicator_15m\' にある列 \'STOCHASTIC_K\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tableT_Indicator_15m.STOCHASTIC_KColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public double STOCHASTIC_D {
                get {
                    try {
                        return ((double)(this[this.tableT_Indicator_15m.STOCHASTIC_DColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'T_Indicator_15m\' にある列 \'STOCHASTIC_D\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tableT_Indicator_15m.STOCHASTIC_DColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public double TMA_TMA {
                get {
                    try {
                        return ((double)(this[this.tableT_Indicator_15m.TMA_TMAColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'T_Indicator_15m\' にある列 \'TMA_TMA\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tableT_Indicator_15m.TMA_TMAColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public double TMACD_TMACD {
                get {
                    try {
                        return ((double)(this[this.tableT_Indicator_15m.TMACD_TMACDColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'T_Indicator_15m\' にある列 \'TMACD_TMACD\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tableT_Indicator_15m.TMACD_TMACDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public double TSI_TSI {
                get {
                    try {
                        return ((double)(this[this.tableT_Indicator_15m.TSI_TSIColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'T_Indicator_15m\' にある列 \'TSI_TSI\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tableT_Indicator_15m.TSI_TSIColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public double VIDYA_V {
                get {
                    try {
                        return ((double)(this[this.tableT_Indicator_15m.VIDYA_VColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'T_Indicator_15m\' にある列 \'VIDYA_V\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tableT_Indicator_15m.VIDYA_VColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public double WMA_WMA {
                get {
                    try {
                        return ((double)(this[this.tableT_Indicator_15m.WMA_WMAColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'T_Indicator_15m\' にある列 \'WMA_WMA\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tableT_Indicator_15m.WMA_WMAColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public double ZIGZAG_Up {
                get {
                    try {
                        return ((double)(this[this.tableT_Indicator_15m.ZIGZAG_UpColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'T_Indicator_15m\' にある列 \'ZIGZAG_Up\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tableT_Indicator_15m.ZIGZAG_UpColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsAC_ACNull() {
                return this.IsNull(this.tableT_Indicator_15m.AC_ACColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetAC_ACNull() {
                this[this.tableT_Indicator_15m.AC_ACColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsAD_ADNull() {
                return this.IsNull(this.tableT_Indicator_15m.AD_ADColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetAD_ADNull() {
                this[this.tableT_Indicator_15m.AD_ADColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsADX_ADXNull() {
                return this.IsNull(this.tableT_Indicator_15m.ADX_ADXColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetADX_ADXNull() {
                this[this.tableT_Indicator_15m.ADX_ADXColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsALLIGATOR_JawNull() {
                return this.IsNull(this.tableT_Indicator_15m.ALLIGATOR_JawColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetALLIGATOR_JawNull() {
                this[this.tableT_Indicator_15m.ALLIGATOR_JawColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsALLIGATOR_TeethNull() {
                return this.IsNull(this.tableT_Indicator_15m.ALLIGATOR_TeethColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetALLIGATOR_TeethNull() {
                this[this.tableT_Indicator_15m.ALLIGATOR_TeethColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsALLIGATOR_LipsNull() {
                return this.IsNull(this.tableT_Indicator_15m.ALLIGATOR_LipsColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetALLIGATOR_LipsNull() {
                this[this.tableT_Indicator_15m.ALLIGATOR_LipsColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsAO_AONull() {
                return this.IsNull(this.tableT_Indicator_15m.AO_AOColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetAO_AONull() {
                this[this.tableT_Indicator_15m.AO_AOColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsAROON_UPNull() {
                return this.IsNull(this.tableT_Indicator_15m.AROON_UPColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetAROON_UPNull() {
                this[this.tableT_Indicator_15m.AROON_UPColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsAROON_DOWNNull() {
                return this.IsNull(this.tableT_Indicator_15m.AROON_DOWNColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetAROON_DOWNNull() {
                this[this.tableT_Indicator_15m.AROON_DOWNColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsARSI_ARSINull() {
                return this.IsNull(this.tableT_Indicator_15m.ARSI_ARSIColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetARSI_ARSINull() {
                this[this.tableT_Indicator_15m.ARSI_ARSIColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsASI_ASINull() {
                return this.IsNull(this.tableT_Indicator_15m.ASI_ASIColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetASI_ASINull() {
                this[this.tableT_Indicator_15m.ASI_ASIColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsATR_ATRNull() {
                return this.IsNull(this.tableT_Indicator_15m.ATR_ATRColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetATR_ATRNull() {
                this[this.tableT_Indicator_15m.ATR_ATRColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsBB_TLNull() {
                return this.IsNull(this.tableT_Indicator_15m.BB_TLColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetBB_TLNull() {
                this[this.tableT_Indicator_15m.BB_TLColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsBB_BLNull() {
                return this.IsNull(this.tableT_Indicator_15m.BB_BLColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetBB_BLNull() {
                this[this.tableT_Indicator_15m.BB_BLColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsBB_ALNull() {
                return this.IsNull(this.tableT_Indicator_15m.BB_ALColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetBB_ALNull() {
                this[this.tableT_Indicator_15m.BB_ALColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsCCI_CCINull() {
                return this.IsNull(this.tableT_Indicator_15m.CCI_CCIColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetCCI_CCINull() {
                this[this.tableT_Indicator_15m.CCI_CCIColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsCHO_CHONull() {
                return this.IsNull(this.tableT_Indicator_15m.CHO_CHOColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetCHO_CHONull() {
                this[this.tableT_Indicator_15m.CHO_CHOColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsCMF_CMFNull() {
                return this.IsNull(this.tableT_Indicator_15m.CMF_CMFColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetCMF_CMFNull() {
                this[this.tableT_Indicator_15m.CMF_CMFColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsCMO_CMONull() {
                return this.IsNull(this.tableT_Indicator_15m.CMO_CMOColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetCMO_CMONull() {
                this[this.tableT_Indicator_15m.CMO_CMOColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool Is買い_DMI_DI_plusNull() {
                return this.IsNull(this.tableT_Indicator_15m.買い_DMI_DI_plusColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void Set買い_DMI_DI_plusNull() {
                this[this.tableT_Indicator_15m.買い_DMI_DI_plusColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool Is買い_DMI_DI_minusNull() {
                return this.IsNull(this.tableT_Indicator_15m.買い_DMI_DI_minusColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void Set買い_DMI_DI_minusNull() {
                this[this.tableT_Indicator_15m.買い_DMI_DI_minusColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool Is売り_DMI_DI_plusNull() {
                return this.IsNull(this.tableT_Indicator_15m.売り_DMI_DI_plusColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void Set売り_DMI_DI_plusNull() {
                this[this.tableT_Indicator_15m.売り_DMI_DI_plusColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool Is売り_DMI_DI_minusNull() {
                return this.IsNull(this.tableT_Indicator_15m.売り_DMI_DI_minusColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void Set売り_DMI_DI_minusNull() {
                this[this.tableT_Indicator_15m.売り_DMI_DI_minusColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsEMA_EMANull() {
                return this.IsNull(this.tableT_Indicator_15m.EMA_EMAColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetEMA_EMANull() {
                this[this.tableT_Indicator_15m.EMA_EMAColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsEW_EWNull() {
                return this.IsNull(this.tableT_Indicator_15m.EW_EWColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetEW_EWNull() {
                this[this.tableT_Indicator_15m.EW_EWColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsEWN_EWNNull() {
                return this.IsNull(this.tableT_Indicator_15m.EWN_EWNColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetEWN_EWNNull() {
                this[this.tableT_Indicator_15m.EWN_EWNColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsEWO_EWONull() {
                return this.IsNull(this.tableT_Indicator_15m.EWO_EWOColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetEWO_EWONull() {
                this[this.tableT_Indicator_15m.EWO_EWOColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsFRACTAL_FRACTALNull() {
                return this.IsNull(this.tableT_Indicator_15m.FRACTAL_FRACTALColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetFRACTAL_FRACTALNull() {
                this[this.tableT_Indicator_15m.FRACTAL_FRACTALColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsGATOR_UPNull() {
                return this.IsNull(this.tableT_Indicator_15m.GATOR_UPColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetGATOR_UPNull() {
                this[this.tableT_Indicator_15m.GATOR_UPColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsGATOR_DNNull() {
                return this.IsNull(this.tableT_Indicator_15m.GATOR_DNColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetGATOR_DNNull() {
                this[this.tableT_Indicator_15m.GATOR_DNColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsHA_始値Null() {
                return this.IsNull(this.tableT_Indicator_15m.HA_始値Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetHA_始値Null() {
                this[this.tableT_Indicator_15m.HA_始値Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsHA_終値Null() {
                return this.IsNull(this.tableT_Indicator_15m.HA_終値Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetHA_終値Null() {
                this[this.tableT_Indicator_15m.HA_終値Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsHA_高値Null() {
                return this.IsNull(this.tableT_Indicator_15m.HA_高値Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetHA_高値Null() {
                this[this.tableT_Indicator_15m.HA_高値Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsHA_安値Null() {
                return this.IsNull(this.tableT_Indicator_15m.HA_安値Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetHA_安値Null() {
                this[this.tableT_Indicator_15m.HA_安値Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsICH_TLNull() {
                return this.IsNull(this.tableT_Indicator_15m.ICH_TLColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetICH_TLNull() {
                this[this.tableT_Indicator_15m.ICH_TLColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsICH_KLNull() {
                return this.IsNull(this.tableT_Indicator_15m.ICH_KLColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetICH_KLNull() {
                this[this.tableT_Indicator_15m.ICH_KLColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsICH_CSNull() {
                return this.IsNull(this.tableT_Indicator_15m.ICH_CSColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetICH_CSNull() {
                this[this.tableT_Indicator_15m.ICH_CSColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsICH_SANull() {
                return this.IsNull(this.tableT_Indicator_15m.ICH_SAColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetICH_SANull() {
                this[this.tableT_Indicator_15m.ICH_SAColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsICH_SBNull() {
                return this.IsNull(this.tableT_Indicator_15m.ICH_SBColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetICH_SBNull() {
                this[this.tableT_Indicator_15m.ICH_SBColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsKAMA_KAMANull() {
                return this.IsNull(this.tableT_Indicator_15m.KAMA_KAMAColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetKAMA_KAMANull() {
                this[this.tableT_Indicator_15m.KAMA_KAMAColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsKRI_KRINull() {
                return this.IsNull(this.tableT_Indicator_15m.KRI_KRIColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetKRI_KRINull() {
                this[this.tableT_Indicator_15m.KRI_KRIColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsLWMA_LWMANull() {
                return this.IsNull(this.tableT_Indicator_15m.LWMA_LWMAColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetLWMA_LWMANull() {
                this[this.tableT_Indicator_15m.LWMA_LWMAColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsMACD_MACDNull() {
                return this.IsNull(this.tableT_Indicator_15m.MACD_MACDColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetMACD_MACDNull() {
                this[this.tableT_Indicator_15m.MACD_MACDColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsMACD_SIGNALNull() {
                return this.IsNull(this.tableT_Indicator_15m.MACD_SIGNALColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetMACD_SIGNALNull() {
                this[this.tableT_Indicator_15m.MACD_SIGNALColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsMACD_HISTOGRAMNull() {
                return this.IsNull(this.tableT_Indicator_15m.MACD_HISTOGRAMColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetMACD_HISTOGRAMNull() {
                this[this.tableT_Indicator_15m.MACD_HISTOGRAMColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsMAE_ME1Null() {
                return this.IsNull(this.tableT_Indicator_15m.MAE_ME1Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetMAE_ME1Null() {
                this[this.tableT_Indicator_15m.MAE_ME1Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsMAE_ME2Null() {
                return this.IsNull(this.tableT_Indicator_15m.MAE_ME2Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetMAE_ME2Null() {
                this[this.tableT_Indicator_15m.MAE_ME2Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsMD_MDNull() {
                return this.IsNull(this.tableT_Indicator_15m.MD_MDColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetMD_MDNull() {
                this[this.tableT_Indicator_15m.MD_MDColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsMVA_MVANull() {
                return this.IsNull(this.tableT_Indicator_15m.MVA_MVAColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetMVA_MVANull() {
                this[this.tableT_Indicator_15m.MVA_MVAColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsOSC_OSCNull() {
                return this.IsNull(this.tableT_Indicator_15m.OSC_OSCColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetOSC_OSCNull() {
                this[this.tableT_Indicator_15m.OSC_OSCColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsPIVOT_PIVOTNull() {
                return this.IsNull(this.tableT_Indicator_15m.PIVOT_PIVOTColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetPIVOT_PIVOTNull() {
                this[this.tableT_Indicator_15m.PIVOT_PIVOTColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsPPMA_PPMANull() {
                return this.IsNull(this.tableT_Indicator_15m.PPMA_PPMAColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetPPMA_PPMANull() {
                this[this.tableT_Indicator_15m.PPMA_PPMAColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsREGRESSION_REGRESSIONNull() {
                return this.IsNull(this.tableT_Indicator_15m.REGRESSION_REGRESSIONColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetREGRESSION_REGRESSIONNull() {
                this[this.tableT_Indicator_15m.REGRESSION_REGRESSIONColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsRLW_PercentRNull() {
                return this.IsNull(this.tableT_Indicator_15m.RLW_PercentRColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetRLW_PercentRNull() {
                this[this.tableT_Indicator_15m.RLW_PercentRColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsROC_ROCNull() {
                return this.IsNull(this.tableT_Indicator_15m.ROC_ROCColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetROC_ROCNull() {
                this[this.tableT_Indicator_15m.ROC_ROCColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsRSI_RSINull() {
                return this.IsNull(this.tableT_Indicator_15m.RSI_RSIColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetRSI_RSINull() {
                this[this.tableT_Indicator_15m.RSI_RSIColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsSAR_UPNull() {
                return this.IsNull(this.tableT_Indicator_15m.SAR_UPColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetSAR_UPNull() {
                this[this.tableT_Indicator_15m.SAR_UPColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsSAR_DNNull() {
                return this.IsNull(this.tableT_Indicator_15m.SAR_DNColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetSAR_DNNull() {
                this[this.tableT_Indicator_15m.SAR_DNColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsSFK_KNull() {
                return this.IsNull(this.tableT_Indicator_15m.SFK_KColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetSFK_KNull() {
                this[this.tableT_Indicator_15m.SFK_KColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsSFK_DNull() {
                return this.IsNull(this.tableT_Indicator_15m.SFK_DColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetSFK_DNull() {
                this[this.tableT_Indicator_15m.SFK_DColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsSHIFT_I_MVANull() {
                return this.IsNull(this.tableT_Indicator_15m.SHIFT_I_MVAColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetSHIFT_I_MVANull() {
                this[this.tableT_Indicator_15m.SHIFT_I_MVAColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsSHIFT_O_ADXNull() {
                return this.IsNull(this.tableT_Indicator_15m.SHIFT_O_ADXColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetSHIFT_O_ADXNull() {
                this[this.tableT_Indicator_15m.SHIFT_O_ADXColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsSHOWTIMETOEND_SHOWTIMETOENDNull() {
                return this.IsNull(this.tableT_Indicator_15m.SHOWTIMETOEND_SHOWTIMETOENDColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetSHOWTIMETOEND_SHOWTIMETOENDNull() {
                this[this.tableT_Indicator_15m.SHOWTIMETOEND_SHOWTIMETOENDColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsSMMA_SMMANull() {
                return this.IsNull(this.tableT_Indicator_15m.SMMA_SMMAColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetSMMA_SMMANull() {
                this[this.tableT_Indicator_15m.SMMA_SMMAColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsSSD_KNull() {
                return this.IsNull(this.tableT_Indicator_15m.SSD_KColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetSSD_KNull() {
                this[this.tableT_Indicator_15m.SSD_KColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsSSD_DNull() {
                return this.IsNull(this.tableT_Indicator_15m.SSD_DColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetSSD_DNull() {
                this[this.tableT_Indicator_15m.SSD_DColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsSTOCHASTIC_KNull() {
                return this.IsNull(this.tableT_Indicator_15m.STOCHASTIC_KColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetSTOCHASTIC_KNull() {
                this[this.tableT_Indicator_15m.STOCHASTIC_KColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsSTOCHASTIC_DNull() {
                return this.IsNull(this.tableT_Indicator_15m.STOCHASTIC_DColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetSTOCHASTIC_DNull() {
                this[this.tableT_Indicator_15m.STOCHASTIC_DColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsTMA_TMANull() {
                return this.IsNull(this.tableT_Indicator_15m.TMA_TMAColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetTMA_TMANull() {
                this[this.tableT_Indicator_15m.TMA_TMAColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsTMACD_TMACDNull() {
                return this.IsNull(this.tableT_Indicator_15m.TMACD_TMACDColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetTMACD_TMACDNull() {
                this[this.tableT_Indicator_15m.TMACD_TMACDColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsTSI_TSINull() {
                return this.IsNull(this.tableT_Indicator_15m.TSI_TSIColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetTSI_TSINull() {
                this[this.tableT_Indicator_15m.TSI_TSIColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsVIDYA_VNull() {
                return this.IsNull(this.tableT_Indicator_15m.VIDYA_VColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetVIDYA_VNull() {
                this[this.tableT_Indicator_15m.VIDYA_VColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsWMA_WMANull() {
                return this.IsNull(this.tableT_Indicator_15m.WMA_WMAColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetWMA_WMANull() {
                this[this.tableT_Indicator_15m.WMA_WMAColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsZIGZAG_UpNull() {
                return this.IsNull(this.tableT_Indicator_15m.ZIGZAG_UpColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetZIGZAG_UpNull() {
                this[this.tableT_Indicator_15m.ZIGZAG_UpColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        public partial class T_RateHistory_15mRow : global::System.Data.DataRow {
            
            private T_RateHistory_15mDataTable tableT_RateHistory_15m;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal T_RateHistory_15mRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableT_RateHistory_15m = ((T_RateHistory_15mDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public byte 通貨ペアNo {
                get {
                    return ((byte)(this[this.tableT_RateHistory_15m.通貨ペアNoColumn]));
                }
                set {
                    this[this.tableT_RateHistory_15m.通貨ペアNoColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public System.DateTime 日時 {
                get {
                    return ((global::System.DateTime)(this[this.tableT_RateHistory_15m.日時Column]));
                }
                set {
                    this[this.tableT_RateHistory_15m.日時Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public double 買い_始値 {
                get {
                    return ((double)(this[this.tableT_RateHistory_15m.買い_始値Column]));
                }
                set {
                    this[this.tableT_RateHistory_15m.買い_始値Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public double 買い_高値 {
                get {
                    return ((double)(this[this.tableT_RateHistory_15m.買い_高値Column]));
                }
                set {
                    this[this.tableT_RateHistory_15m.買い_高値Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public double 買い_安値 {
                get {
                    return ((double)(this[this.tableT_RateHistory_15m.買い_安値Column]));
                }
                set {
                    this[this.tableT_RateHistory_15m.買い_安値Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public double 買い_終値 {
                get {
                    return ((double)(this[this.tableT_RateHistory_15m.買い_終値Column]));
                }
                set {
                    this[this.tableT_RateHistory_15m.買い_終値Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public double 売り_始値 {
                get {
                    return ((double)(this[this.tableT_RateHistory_15m.売り_始値Column]));
                }
                set {
                    this[this.tableT_RateHistory_15m.売り_始値Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public double 売り_高値 {
                get {
                    return ((double)(this[this.tableT_RateHistory_15m.売り_高値Column]));
                }
                set {
                    this[this.tableT_RateHistory_15m.売り_高値Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public double 売り_安値 {
                get {
                    return ((double)(this[this.tableT_RateHistory_15m.売り_安値Column]));
                }
                set {
                    this[this.tableT_RateHistory_15m.売り_安値Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public double 売り_終値 {
                get {
                    return ((double)(this[this.tableT_RateHistory_15m.売り_終値Column]));
                }
                set {
                    this[this.tableT_RateHistory_15m.売り_終値Column] = value;
                }
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        public partial class T_Order判定HistoryRow : global::System.Data.DataRow {
            
            private T_Order判定HistoryDataTable tableT_Order判定History;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal T_Order判定HistoryRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableT_Order判定History = ((T_Order判定HistoryDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public byte 通貨ペアNo {
                get {
                    return ((byte)(this[this.tableT_Order判定History.通貨ペアNoColumn]));
                }
                set {
                    this[this.tableT_Order判定History.通貨ペアNoColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public System.DateTime 日時 {
                get {
                    return ((global::System.DateTime)(this[this.tableT_Order判定History.日時Column]));
                }
                set {
                    this[this.tableT_Order判定History.日時Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public byte 処理位置 {
                get {
                    return ((byte)(this[this.tableT_Order判定History.処理位置Column]));
                }
                set {
                    this[this.tableT_Order判定History.処理位置Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public double 買いRate {
                get {
                    try {
                        return ((double)(this[this.tableT_Order判定History.買いRateColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'T_Order判定History\' にある列 \'買いRate\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tableT_Order判定History.買いRateColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public double 売りRate {
                get {
                    try {
                        return ((double)(this[this.tableT_Order判定History.売りRateColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'T_Order判定History\' にある列 \'売りRate\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tableT_Order判定History.売りRateColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public double OrderEntryRate {
                get {
                    try {
                        return ((double)(this[this.tableT_Order判定History.OrderEntryRateColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'T_Order判定History\' にある列 \'OrderEntryRate\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tableT_Order判定History.OrderEntryRateColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public double Limit {
                get {
                    try {
                        return ((double)(this[this.tableT_Order判定History.LimitColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'T_Order判定History\' にある列 \'Limit\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tableT_Order判定History.LimitColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public double 危険Rate {
                get {
                    try {
                        return ((double)(this[this.tableT_Order判定History.危険RateColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'T_Order判定History\' にある列 \'危険Rate\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tableT_Order判定History.危険RateColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string 処理位置_補足 {
                get {
                    try {
                        return ((string)(this[this.tableT_Order判定History.処理位置_補足Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'T_Order判定History\' にある列 \'処理位置_補足\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tableT_Order判定History.処理位置_補足Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string 取引状況 {
                get {
                    try {
                        return ((string)(this[this.tableT_Order判定History.取引状況Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'T_Order判定History\' にある列 \'取引状況\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tableT_Order判定History.取引状況Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string 注文設定_モード {
                get {
                    try {
                        return ((string)(this[this.tableT_Order判定History.注文設定_モードColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'T_Order判定History\' にある列 \'注文設定_モード\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tableT_Order判定History.注文設定_モードColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string 買売モード_15m {
                get {
                    try {
                        return ((string)(this[this.tableT_Order判定History.買売モード_15mColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'T_Order判定History\' にある列 \'買売モード_15m\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tableT_Order判定History.買売モード_15mColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string 買売モード_Daily {
                get {
                    try {
                        return ((string)(this[this.tableT_Order判定History.買売モード_DailyColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'T_Order判定History\' にある列 \'買売モード_Daily\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tableT_Order判定History.買売モード_DailyColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string 成行をスキップ {
                get {
                    try {
                        return ((string)(this[this.tableT_Order判定History.成行をスキップColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'T_Order判定History\' にある列 \'成行をスキップ\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tableT_Order判定History.成行をスキップColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string ポジション有り {
                get {
                    try {
                        return ((string)(this[this.tableT_Order判定History.ポジション有りColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'T_Order判定History\' にある列 \'ポジション有り\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tableT_Order判定History.ポジション有りColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string ボーナスステージ判定 {
                get {
                    try {
                        return ((string)(this[this.tableT_Order判定History.ボーナスステージ判定Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'T_Order判定History\' にある列 \'ボーナスステージ判定\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tableT_Order判定History.ボーナスステージ判定Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string ADX上昇判定_15m {
                get {
                    try {
                        return ((string)(this[this.tableT_Order判定History.ADX上昇判定_15mColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'T_Order判定History\' にある列 \'ADX上昇判定_15m\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tableT_Order判定History.ADX上昇判定_15mColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string ASI買い気配 {
                get {
                    try {
                        return ((string)(this[this.tableT_Order判定History.ASI買い気配Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'T_Order判定History\' にある列 \'ASI買い気配\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tableT_Order判定History.ASI買い気配Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string DMIplusDI上昇判定 {
                get {
                    try {
                        return ((string)(this[this.tableT_Order判定History.DMIplusDI上昇判定Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'T_Order判定History\' にある列 \'DMIplusDI上昇判定\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tableT_Order判定History.DMIplusDI上昇判定Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool Is買いRateNull() {
                return this.IsNull(this.tableT_Order判定History.買いRateColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void Set買いRateNull() {
                this[this.tableT_Order判定History.買いRateColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool Is売りRateNull() {
                return this.IsNull(this.tableT_Order判定History.売りRateColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void Set売りRateNull() {
                this[this.tableT_Order判定History.売りRateColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsOrderEntryRateNull() {
                return this.IsNull(this.tableT_Order判定History.OrderEntryRateColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetOrderEntryRateNull() {
                this[this.tableT_Order判定History.OrderEntryRateColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsLimitNull() {
                return this.IsNull(this.tableT_Order判定History.LimitColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetLimitNull() {
                this[this.tableT_Order判定History.LimitColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool Is危険RateNull() {
                return this.IsNull(this.tableT_Order判定History.危険RateColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void Set危険RateNull() {
                this[this.tableT_Order判定History.危険RateColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool Is処理位置_補足Null() {
                return this.IsNull(this.tableT_Order判定History.処理位置_補足Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void Set処理位置_補足Null() {
                this[this.tableT_Order判定History.処理位置_補足Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool Is取引状況Null() {
                return this.IsNull(this.tableT_Order判定History.取引状況Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void Set取引状況Null() {
                this[this.tableT_Order判定History.取引状況Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool Is注文設定_モードNull() {
                return this.IsNull(this.tableT_Order判定History.注文設定_モードColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void Set注文設定_モードNull() {
                this[this.tableT_Order判定History.注文設定_モードColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool Is買売モード_15mNull() {
                return this.IsNull(this.tableT_Order判定History.買売モード_15mColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void Set買売モード_15mNull() {
                this[this.tableT_Order判定History.買売モード_15mColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool Is買売モード_DailyNull() {
                return this.IsNull(this.tableT_Order判定History.買売モード_DailyColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void Set買売モード_DailyNull() {
                this[this.tableT_Order判定History.買売モード_DailyColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool Is成行をスキップNull() {
                return this.IsNull(this.tableT_Order判定History.成行をスキップColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void Set成行をスキップNull() {
                this[this.tableT_Order判定History.成行をスキップColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool Isポジション有りNull() {
                return this.IsNull(this.tableT_Order判定History.ポジション有りColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void Setポジション有りNull() {
                this[this.tableT_Order判定History.ポジション有りColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool Isボーナスステージ判定Null() {
                return this.IsNull(this.tableT_Order判定History.ボーナスステージ判定Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void Setボーナスステージ判定Null() {
                this[this.tableT_Order判定History.ボーナスステージ判定Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsADX上昇判定_15mNull() {
                return this.IsNull(this.tableT_Order判定History.ADX上昇判定_15mColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetADX上昇判定_15mNull() {
                this[this.tableT_Order判定History.ADX上昇判定_15mColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsASI買い気配Null() {
                return this.IsNull(this.tableT_Order判定History.ASI買い気配Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetASI買い気配Null() {
                this[this.tableT_Order判定History.ASI買い気配Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsDMIplusDI上昇判定Null() {
                return this.IsNull(this.tableT_Order判定History.DMIplusDI上昇判定Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetDMIplusDI上昇判定Null() {
                this[this.tableT_Order判定History.DMIplusDI上昇判定Column] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public class T_Indicator_15mRowChangeEvent : global::System.EventArgs {
            
            private T_Indicator_15mRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public T_Indicator_15mRowChangeEvent(T_Indicator_15mRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public T_Indicator_15mRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public class T_RateHistory_15mRowChangeEvent : global::System.EventArgs {
            
            private T_RateHistory_15mRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public T_RateHistory_15mRowChangeEvent(T_RateHistory_15mRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public T_RateHistory_15mRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public class T_Order判定HistoryRowChangeEvent : global::System.EventArgs {
            
            private T_Order判定HistoryRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public T_Order判定HistoryRowChangeEvent(T_Order判定HistoryRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public T_Order判定HistoryRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
    }
}
namespace AutoFx_Form.DFX_smltTableAdapters {
    
    
    /// <summary>
    ///Represents the connection and commands used to retrieve and save data.
    ///</summary>
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.ComponentModel.DataObjectAttribute(true)]
    [global::System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner" +
        ", Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
    public partial class T_Indicator_15mTableAdapter : global::System.ComponentModel.Component {
        
        private global::System.Data.SqlClient.SqlDataAdapter _adapter;
        
        private global::System.Data.SqlClient.SqlConnection _connection;
        
        private global::System.Data.SqlClient.SqlTransaction _transaction;
        
        private global::System.Data.SqlClient.SqlCommand[] _commandCollection;
        
        private bool _clearBeforeFill;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public T_Indicator_15mTableAdapter() {
            this.ClearBeforeFill = true;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected internal global::System.Data.SqlClient.SqlDataAdapter Adapter {
            get {
                if ((this._adapter == null)) {
                    this.InitAdapter();
                }
                return this._adapter;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        internal global::System.Data.SqlClient.SqlConnection Connection {
            get {
                if ((this._connection == null)) {
                    this.InitConnection();
                }
                return this._connection;
            }
            set {
                this._connection = value;
                if ((this.Adapter.InsertCommand != null)) {
                    this.Adapter.InsertCommand.Connection = value;
                }
                if ((this.Adapter.DeleteCommand != null)) {
                    this.Adapter.DeleteCommand.Connection = value;
                }
                if ((this.Adapter.UpdateCommand != null)) {
                    this.Adapter.UpdateCommand.Connection = value;
                }
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    if ((this.CommandCollection[i] != null)) {
                        ((global::System.Data.SqlClient.SqlCommand)(this.CommandCollection[i])).Connection = value;
                    }
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        internal global::System.Data.SqlClient.SqlTransaction Transaction {
            get {
                return this._transaction;
            }
            set {
                this._transaction = value;
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    this.CommandCollection[i].Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.DeleteCommand != null))) {
                    this.Adapter.DeleteCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.InsertCommand != null))) {
                    this.Adapter.InsertCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.UpdateCommand != null))) {
                    this.Adapter.UpdateCommand.Transaction = this._transaction;
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected global::System.Data.SqlClient.SqlCommand[] CommandCollection {
            get {
                if ((this._commandCollection == null)) {
                    this.InitCommandCollection();
                }
                return this._commandCollection;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public bool ClearBeforeFill {
            get {
                return this._clearBeforeFill;
            }
            set {
                this._clearBeforeFill = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void InitAdapter() {
            this._adapter = new global::System.Data.SqlClient.SqlDataAdapter();
            global::System.Data.Common.DataTableMapping tableMapping = new global::System.Data.Common.DataTableMapping();
            tableMapping.SourceTable = "Table";
            tableMapping.DataSetTable = "T_Indicator_15m";
            tableMapping.ColumnMappings.Add("通貨ペアNo", "通貨ペアNo");
            tableMapping.ColumnMappings.Add("日時", "日時");
            tableMapping.ColumnMappings.Add("AC_AC", "AC_AC");
            tableMapping.ColumnMappings.Add("AD_AD", "AD_AD");
            tableMapping.ColumnMappings.Add("ADX_ADX", "ADX_ADX");
            tableMapping.ColumnMappings.Add("ALLIGATOR_Jaw", "ALLIGATOR_Jaw");
            tableMapping.ColumnMappings.Add("ALLIGATOR_Teeth", "ALLIGATOR_Teeth");
            tableMapping.ColumnMappings.Add("ALLIGATOR_Lips", "ALLIGATOR_Lips");
            tableMapping.ColumnMappings.Add("AO_AO", "AO_AO");
            tableMapping.ColumnMappings.Add("AROON_UP", "AROON_UP");
            tableMapping.ColumnMappings.Add("AROON_DOWN", "AROON_DOWN");
            tableMapping.ColumnMappings.Add("ARSI_ARSI", "ARSI_ARSI");
            tableMapping.ColumnMappings.Add("ASI_ASI", "ASI_ASI");
            tableMapping.ColumnMappings.Add("ATR_ATR", "ATR_ATR");
            tableMapping.ColumnMappings.Add("BB_TL", "BB_TL");
            tableMapping.ColumnMappings.Add("BB_BL", "BB_BL");
            tableMapping.ColumnMappings.Add("BB_AL", "BB_AL");
            tableMapping.ColumnMappings.Add("CCI_CCI", "CCI_CCI");
            tableMapping.ColumnMappings.Add("CHO_CHO", "CHO_CHO");
            tableMapping.ColumnMappings.Add("CMF_CMF", "CMF_CMF");
            tableMapping.ColumnMappings.Add("CMO_CMO", "CMO_CMO");
            tableMapping.ColumnMappings.Add("買い_DMI_DI_plus", "買い_DMI_DI_plus");
            tableMapping.ColumnMappings.Add("買い_DMI_DI_minus", "買い_DMI_DI_minus");
            tableMapping.ColumnMappings.Add("売り_DMI_DI_plus", "売り_DMI_DI_plus");
            tableMapping.ColumnMappings.Add("売り_DMI_DI_minus", "売り_DMI_DI_minus");
            tableMapping.ColumnMappings.Add("EMA_EMA", "EMA_EMA");
            tableMapping.ColumnMappings.Add("EW_EW", "EW_EW");
            tableMapping.ColumnMappings.Add("EWN_EWN", "EWN_EWN");
            tableMapping.ColumnMappings.Add("EWO_EWO", "EWO_EWO");
            tableMapping.ColumnMappings.Add("FRACTAL_FRACTAL", "FRACTAL_FRACTAL");
            tableMapping.ColumnMappings.Add("GATOR_UP", "GATOR_UP");
            tableMapping.ColumnMappings.Add("GATOR_DN", "GATOR_DN");
            tableMapping.ColumnMappings.Add("HA_始値", "HA_始値");
            tableMapping.ColumnMappings.Add("HA_終値", "HA_終値");
            tableMapping.ColumnMappings.Add("HA_高値", "HA_高値");
            tableMapping.ColumnMappings.Add("HA_安値", "HA_安値");
            tableMapping.ColumnMappings.Add("ICH_TL", "ICH_TL");
            tableMapping.ColumnMappings.Add("ICH_KL", "ICH_KL");
            tableMapping.ColumnMappings.Add("ICH_CS", "ICH_CS");
            tableMapping.ColumnMappings.Add("ICH_SA", "ICH_SA");
            tableMapping.ColumnMappings.Add("ICH_SB", "ICH_SB");
            tableMapping.ColumnMappings.Add("KAMA_KAMA", "KAMA_KAMA");
            tableMapping.ColumnMappings.Add("KRI_KRI", "KRI_KRI");
            tableMapping.ColumnMappings.Add("LWMA_LWMA", "LWMA_LWMA");
            tableMapping.ColumnMappings.Add("MACD_MACD", "MACD_MACD");
            tableMapping.ColumnMappings.Add("MACD_SIGNAL", "MACD_SIGNAL");
            tableMapping.ColumnMappings.Add("MACD_HISTOGRAM", "MACD_HISTOGRAM");
            tableMapping.ColumnMappings.Add("MAE_ME1", "MAE_ME1");
            tableMapping.ColumnMappings.Add("MAE_ME2", "MAE_ME2");
            tableMapping.ColumnMappings.Add("MD_MD", "MD_MD");
            tableMapping.ColumnMappings.Add("MVA_MVA", "MVA_MVA");
            tableMapping.ColumnMappings.Add("OSC_OSC", "OSC_OSC");
            tableMapping.ColumnMappings.Add("PIVOT_PIVOT", "PIVOT_PIVOT");
            tableMapping.ColumnMappings.Add("PPMA_PPMA", "PPMA_PPMA");
            tableMapping.ColumnMappings.Add("REGRESSION_REGRESSION", "REGRESSION_REGRESSION");
            tableMapping.ColumnMappings.Add("RLW_PercentR", "RLW_PercentR");
            tableMapping.ColumnMappings.Add("ROC_ROC", "ROC_ROC");
            tableMapping.ColumnMappings.Add("RSI_RSI", "RSI_RSI");
            tableMapping.ColumnMappings.Add("SAR_UP", "SAR_UP");
            tableMapping.ColumnMappings.Add("SAR_DN", "SAR_DN");
            tableMapping.ColumnMappings.Add("SFK_K", "SFK_K");
            tableMapping.ColumnMappings.Add("SFK_D", "SFK_D");
            tableMapping.ColumnMappings.Add("SHIFT_I_MVA", "SHIFT_I_MVA");
            tableMapping.ColumnMappings.Add("SHIFT_O_ADX", "SHIFT_O_ADX");
            tableMapping.ColumnMappings.Add("SHOWTIMETOEND_SHOWTIMETOEND", "SHOWTIMETOEND_SHOWTIMETOEND");
            tableMapping.ColumnMappings.Add("SMMA_SMMA", "SMMA_SMMA");
            tableMapping.ColumnMappings.Add("SSD_K", "SSD_K");
            tableMapping.ColumnMappings.Add("SSD_D", "SSD_D");
            tableMapping.ColumnMappings.Add("STOCHASTIC_K", "STOCHASTIC_K");
            tableMapping.ColumnMappings.Add("STOCHASTIC_D", "STOCHASTIC_D");
            tableMapping.ColumnMappings.Add("TMA_TMA", "TMA_TMA");
            tableMapping.ColumnMappings.Add("TMACD_TMACD", "TMACD_TMACD");
            tableMapping.ColumnMappings.Add("TSI_TSI", "TSI_TSI");
            tableMapping.ColumnMappings.Add("VIDYA_V", "VIDYA_V");
            tableMapping.ColumnMappings.Add("WMA_WMA", "WMA_WMA");
            tableMapping.ColumnMappings.Add("ZIGZAG_Up", "ZIGZAG_Up");
            this._adapter.TableMappings.Add(tableMapping);
            this._adapter.DeleteCommand = new global::System.Data.SqlClient.SqlCommand();
            this._adapter.DeleteCommand.Connection = this.Connection;
            this._adapter.DeleteCommand.CommandText = "DELETE FROM [smlt].[T_Indicator_15m] WHERE (([通貨ペアNo] = @Original_通貨ペアNo) AND ([日" +
                "時] = @Original_日時) AND ((@IsNull_AC_AC = 1 AND [AC_AC] IS NULL) OR ([AC_AC] = @O" +
                "riginal_AC_AC)) AND ((@IsNull_AD_AD = 1 AND [AD_AD] IS NULL) OR ([AD_AD] = @Orig" +
                "inal_AD_AD)) AND ((@IsNull_ADX_ADX = 1 AND [ADX_ADX] IS NULL) OR ([ADX_ADX] = @O" +
                "riginal_ADX_ADX)) AND ((@IsNull_ALLIGATOR_Jaw = 1 AND [ALLIGATOR_Jaw] IS NULL) O" +
                "R ([ALLIGATOR_Jaw] = @Original_ALLIGATOR_Jaw)) AND ((@IsNull_ALLIGATOR_Teeth = 1" +
                " AND [ALLIGATOR_Teeth] IS NULL) OR ([ALLIGATOR_Teeth] = @Original_ALLIGATOR_Teet" +
                "h)) AND ((@IsNull_ALLIGATOR_Lips = 1 AND [ALLIGATOR_Lips] IS NULL) OR ([ALLIGATO" +
                "R_Lips] = @Original_ALLIGATOR_Lips)) AND ((@IsNull_AO_AO = 1 AND [AO_AO] IS NULL" +
                ") OR ([AO_AO] = @Original_AO_AO)) AND ((@IsNull_AROON_UP = 1 AND [AROON_UP] IS N" +
                "ULL) OR ([AROON_UP] = @Original_AROON_UP)) AND ((@IsNull_AROON_DOWN = 1 AND [ARO" +
                "ON_DOWN] IS NULL) OR ([AROON_DOWN] = @Original_AROON_DOWN)) AND ((@IsNull_ARSI_A" +
                "RSI = 1 AND [ARSI_ARSI] IS NULL) OR ([ARSI_ARSI] = @Original_ARSI_ARSI)) AND ((@" +
                "IsNull_ASI_ASI = 1 AND [ASI_ASI] IS NULL) OR ([ASI_ASI] = @Original_ASI_ASI)) AN" +
                "D ((@IsNull_ATR_ATR = 1 AND [ATR_ATR] IS NULL) OR ([ATR_ATR] = @Original_ATR_ATR" +
                ")) AND ((@IsNull_BB_TL = 1 AND [BB_TL] IS NULL) OR ([BB_TL] = @Original_BB_TL)) " +
                "AND ((@IsNull_BB_BL = 1 AND [BB_BL] IS NULL) OR ([BB_BL] = @Original_BB_BL)) AND" +
                " ((@IsNull_BB_AL = 1 AND [BB_AL] IS NULL) OR ([BB_AL] = @Original_BB_AL)) AND ((" +
                "@IsNull_CCI_CCI = 1 AND [CCI_CCI] IS NULL) OR ([CCI_CCI] = @Original_CCI_CCI)) A" +
                "ND ((@IsNull_CHO_CHO = 1 AND [CHO_CHO] IS NULL) OR ([CHO_CHO] = @Original_CHO_CH" +
                "O)) AND ((@IsNull_CMF_CMF = 1 AND [CMF_CMF] IS NULL) OR ([CMF_CMF] = @Original_C" +
                "MF_CMF)) AND ((@IsNull_CMO_CMO = 1 AND [CMO_CMO] IS NULL) OR ([CMO_CMO] = @Origi" +
                "nal_CMO_CMO)) AND ((@IsNull_買い_DMI_DI_plus = 1 AND [買い_DMI_DI_plus] IS NULL) OR " +
                "([買い_DMI_DI_plus] = @Original_買い_DMI_DI_plus)) AND ((@IsNull_買い_DMI_DI_minus = 1" +
                " AND [買い_DMI_DI_minus] IS NULL) OR ([買い_DMI_DI_minus] = @Original_買い_DMI_DI_minu" +
                "s)) AND ((@IsNull_売り_DMI_DI_plus = 1 AND [売り_DMI_DI_plus] IS NULL) OR ([売り_DMI_D" +
                "I_plus] = @Original_売り_DMI_DI_plus)) AND ((@IsNull_売り_DMI_DI_minus = 1 AND [売り_D" +
                "MI_DI_minus] IS NULL) OR ([売り_DMI_DI_minus] = @Original_売り_DMI_DI_minus)) AND ((" +
                "@IsNull_EMA_EMA = 1 AND [EMA_EMA] IS NULL) OR ([EMA_EMA] = @Original_EMA_EMA)) A" +
                "ND ((@IsNull_EW_EW = 1 AND [EW_EW] IS NULL) OR ([EW_EW] = @Original_EW_EW)) AND " +
                "((@IsNull_EWN_EWN = 1 AND [EWN_EWN] IS NULL) OR ([EWN_EWN] = @Original_EWN_EWN))" +
                " AND ((@IsNull_EWO_EWO = 1 AND [EWO_EWO] IS NULL) OR ([EWO_EWO] = @Original_EWO_" +
                "EWO)) AND ((@IsNull_FRACTAL_FRACTAL = 1 AND [FRACTAL_FRACTAL] IS NULL) OR ([FRAC" +
                "TAL_FRACTAL] = @Original_FRACTAL_FRACTAL)) AND ((@IsNull_GATOR_UP = 1 AND [GATOR" +
                "_UP] IS NULL) OR ([GATOR_UP] = @Original_GATOR_UP)) AND ((@IsNull_GATOR_DN = 1 A" +
                "ND [GATOR_DN] IS NULL) OR ([GATOR_DN] = @Original_GATOR_DN)) AND ((@IsNull_HA_始値" +
                " = 1 AND [HA_始値] IS NULL) OR ([HA_始値] = @Original_HA_始値)) AND ((@IsNull_HA_終値 = " +
                "1 AND [HA_終値] IS NULL) OR ([HA_終値] = @Original_HA_終値)) AND ((@IsNull_HA_高値 = 1 A" +
                "ND [HA_高値] IS NULL) OR ([HA_高値] = @Original_HA_高値)) AND ((@IsNull_HA_安値 = 1 AND " +
                "[HA_安値] IS NULL) OR ([HA_安値] = @Original_HA_安値)) AND ((@IsNull_ICH_TL = 1 AND [I" +
                "CH_TL] IS NULL) OR ([ICH_TL] = @Original_ICH_TL)) AND ((@IsNull_ICH_KL = 1 AND [" +
                "ICH_KL] IS NULL) OR ([ICH_KL] = @Original_ICH_KL)) AND ((@IsNull_ICH_CS = 1 AND " +
                "[ICH_CS] IS NULL) OR ([ICH_CS] = @Original_ICH_CS)) AND ((@IsNull_ICH_SA = 1 AND" +
                " [ICH_SA] IS NULL) OR ([ICH_SA] = @Original_ICH_SA)) AND ((@IsNull_ICH_SB = 1 AN" +
                "D [ICH_SB] IS NULL) OR ([ICH_SB] = @Original_ICH_SB)) AND ((@IsNull_KAMA_KAMA = " +
                "1 AND [KAMA_KAMA] IS NULL) OR ([KAMA_KAMA] = @Original_KAMA_KAMA)) AND ((@IsNull" +
                "_KRI_KRI = 1 AND [KRI_KRI] IS NULL) OR ([KRI_KRI] = @Original_KRI_KRI)) AND ((@I" +
                "sNull_LWMA_LWMA = 1 AND [LWMA_LWMA] IS NULL) OR ([LWMA_LWMA] = @Original_LWMA_LW" +
                "MA)) AND ((@IsNull_MACD_MACD = 1 AND [MACD_MACD] IS NULL) OR ([MACD_MACD] = @Ori" +
                "ginal_MACD_MACD)) AND ((@IsNull_MACD_SIGNAL = 1 AND [MACD_SIGNAL] IS NULL) OR ([" +
                "MACD_SIGNAL] = @Original_MACD_SIGNAL)) AND ((@IsNull_MACD_HISTOGRAM = 1 AND [MAC" +
                "D_HISTOGRAM] IS NULL) OR ([MACD_HISTOGRAM] = @Original_MACD_HISTOGRAM)) AND ((@I" +
                "sNull_MAE_ME1 = 1 AND [MAE_ME1] IS NULL) OR ([MAE_ME1] = @Original_MAE_ME1)) AND" +
                " ((@IsNull_MAE_ME2 = 1 AND [MAE_ME2] IS NULL) OR ([MAE_ME2] = @Original_MAE_ME2)" +
                ") AND ((@IsNull_MD_MD = 1 AND [MD_MD] IS NULL) OR ([MD_MD] = @Original_MD_MD)) A" +
                "ND ((@IsNull_MVA_MVA = 1 AND [MVA_MVA] IS NULL) OR ([MVA_MVA] = @Original_MVA_MV" +
                "A)) AND ((@IsNull_OSC_OSC = 1 AND [OSC_OSC] IS NULL) OR ([OSC_OSC] = @Original_O" +
                "SC_OSC)) AND ((@IsNull_PIVOT_PIVOT = 1 AND [PIVOT_PIVOT] IS NULL) OR ([PIVOT_PIV" +
                "OT] = @Original_PIVOT_PIVOT)) AND ((@IsNull_PPMA_PPMA = 1 AND [PPMA_PPMA] IS NUL" +
                "L) OR ([PPMA_PPMA] = @Original_PPMA_PPMA)) AND ((@IsNull_REGRESSION_REGRESSION =" +
                " 1 AND [REGRESSION_REGRESSION] IS NULL) OR ([REGRESSION_REGRESSION] = @Original_" +
                "REGRESSION_REGRESSION)) AND ((@IsNull_RLW_PercentR = 1 AND [RLW_PercentR] IS NUL" +
                "L) OR ([RLW_PercentR] = @Original_RLW_PercentR)) AND ((@IsNull_ROC_ROC = 1 AND [" +
                "ROC_ROC] IS NULL) OR ([ROC_ROC] = @Original_ROC_ROC)) AND ((@IsNull_RSI_RSI = 1 " +
                "AND [RSI_RSI] IS NULL) OR ([RSI_RSI] = @Original_RSI_RSI)) AND ((@IsNull_SAR_UP " +
                "= 1 AND [SAR_UP] IS NULL) OR ([SAR_UP] = @Original_SAR_UP)) AND ((@IsNull_SAR_DN" +
                " = 1 AND [SAR_DN] IS NULL) OR ([SAR_DN] = @Original_SAR_DN)) AND ((@IsNull_SFK_K" +
                " = 1 AND [SFK_K] IS NULL) OR ([SFK_K] = @Original_SFK_K)) AND ((@IsNull_SFK_D = " +
                "1 AND [SFK_D] IS NULL) OR ([SFK_D] = @Original_SFK_D)) AND ((@IsNull_SHIFT_I_MVA" +
                " = 1 AND [SHIFT_I_MVA] IS NULL) OR ([SHIFT_I_MVA] = @Original_SHIFT_I_MVA)) AND " +
                "((@IsNull_SHIFT_O_ADX = 1 AND [SHIFT_O_ADX] IS NULL) OR ([SHIFT_O_ADX] = @Origin" +
                "al_SHIFT_O_ADX)) AND ((@IsNull_SHOWTIMETOEND_SHOWTIMETOEND = 1 AND [SHOWTIMETOEN" +
                "D_SHOWTIMETOEND] IS NULL) OR ([SHOWTIMETOEND_SHOWTIMETOEND] = @Original_SHOWTIME" +
                "TOEND_SHOWTIMETOEND)) AND ((@IsNull_SMMA_SMMA = 1 AND [SMMA_SMMA] IS NULL) OR ([" +
                "SMMA_SMMA] = @Original_SMMA_SMMA)) AND ((@IsNull_SSD_K = 1 AND [SSD_K] IS NULL) " +
                "OR ([SSD_K] = @Original_SSD_K)) AND ((@IsNull_SSD_D = 1 AND [SSD_D] IS NULL) OR " +
                "([SSD_D] = @Original_SSD_D)) AND ((@IsNull_STOCHASTIC_K = 1 AND [STOCHASTIC_K] I" +
                "S NULL) OR ([STOCHASTIC_K] = @Original_STOCHASTIC_K)) AND ((@IsNull_STOCHASTIC_D" +
                " = 1 AND [STOCHASTIC_D] IS NULL) OR ([STOCHASTIC_D] = @Original_STOCHASTIC_D)) A" +
                "ND ((@IsNull_TMA_TMA = 1 AND [TMA_TMA] IS NULL) OR ([TMA_TMA] = @Original_TMA_TM" +
                "A)) AND ((@IsNull_TMACD_TMACD = 1 AND [TMACD_TMACD] IS NULL) OR ([TMACD_TMACD] =" +
                " @Original_TMACD_TMACD)) AND ((@IsNull_TSI_TSI = 1 AND [TSI_TSI] IS NULL) OR ([T" +
                "SI_TSI] = @Original_TSI_TSI)) AND ((@IsNull_VIDYA_V = 1 AND [VIDYA_V] IS NULL) O" +
                "R ([VIDYA_V] = @Original_VIDYA_V)) AND ((@IsNull_WMA_WMA = 1 AND [WMA_WMA] IS NU" +
                "LL) OR ([WMA_WMA] = @Original_WMA_WMA)) AND ((@IsNull_ZIGZAG_Up = 1 AND [ZIGZAG_" +
                "Up] IS NULL) OR ([ZIGZAG_Up] = @Original_ZIGZAG_Up)))";
            this._adapter.DeleteCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_通貨ペアNo", global::System.Data.SqlDbType.TinyInt, 0, global::System.Data.ParameterDirection.Input, 0, 0, "通貨ペアNo", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_日時", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "日時", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_AC_AC", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "AC_AC", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_AC_AC", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "AC_AC", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_AD_AD", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "AD_AD", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_AD_AD", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "AD_AD", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_ADX_ADX", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ADX_ADX", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_ADX_ADX", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ADX_ADX", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_ALLIGATOR_Jaw", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ALLIGATOR_Jaw", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_ALLIGATOR_Jaw", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ALLIGATOR_Jaw", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_ALLIGATOR_Teeth", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ALLIGATOR_Teeth", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_ALLIGATOR_Teeth", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ALLIGATOR_Teeth", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_ALLIGATOR_Lips", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ALLIGATOR_Lips", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_ALLIGATOR_Lips", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ALLIGATOR_Lips", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_AO_AO", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "AO_AO", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_AO_AO", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "AO_AO", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_AROON_UP", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "AROON_UP", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_AROON_UP", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "AROON_UP", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_AROON_DOWN", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "AROON_DOWN", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_AROON_DOWN", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "AROON_DOWN", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_ARSI_ARSI", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ARSI_ARSI", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_ARSI_ARSI", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ARSI_ARSI", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_ASI_ASI", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ASI_ASI", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_ASI_ASI", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ASI_ASI", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_ATR_ATR", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ATR_ATR", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_ATR_ATR", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ATR_ATR", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_BB_TL", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "BB_TL", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_BB_TL", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "BB_TL", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_BB_BL", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "BB_BL", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_BB_BL", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "BB_BL", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_BB_AL", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "BB_AL", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_BB_AL", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "BB_AL", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_CCI_CCI", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "CCI_CCI", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_CCI_CCI", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "CCI_CCI", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_CHO_CHO", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "CHO_CHO", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_CHO_CHO", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "CHO_CHO", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_CMF_CMF", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "CMF_CMF", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_CMF_CMF", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "CMF_CMF", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_CMO_CMO", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "CMO_CMO", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_CMO_CMO", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "CMO_CMO", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_買い_DMI_DI_plus", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "買い_DMI_DI_plus", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_買い_DMI_DI_plus", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "買い_DMI_DI_plus", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_買い_DMI_DI_minus", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "買い_DMI_DI_minus", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_買い_DMI_DI_minus", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "買い_DMI_DI_minus", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_売り_DMI_DI_plus", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "売り_DMI_DI_plus", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_売り_DMI_DI_plus", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "売り_DMI_DI_plus", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_売り_DMI_DI_minus", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "売り_DMI_DI_minus", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_売り_DMI_DI_minus", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "売り_DMI_DI_minus", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_EMA_EMA", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "EMA_EMA", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_EMA_EMA", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "EMA_EMA", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_EW_EW", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "EW_EW", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_EW_EW", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "EW_EW", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_EWN_EWN", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "EWN_EWN", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_EWN_EWN", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "EWN_EWN", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_EWO_EWO", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "EWO_EWO", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_EWO_EWO", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "EWO_EWO", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_FRACTAL_FRACTAL", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "FRACTAL_FRACTAL", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_FRACTAL_FRACTAL", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "FRACTAL_FRACTAL", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_GATOR_UP", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "GATOR_UP", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_GATOR_UP", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "GATOR_UP", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_GATOR_DN", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "GATOR_DN", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_GATOR_DN", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "GATOR_DN", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_HA_始値", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "HA_始値", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_HA_始値", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "HA_始値", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_HA_終値", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "HA_終値", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_HA_終値", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "HA_終値", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_HA_高値", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "HA_高値", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_HA_高値", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "HA_高値", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_HA_安値", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "HA_安値", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_HA_安値", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "HA_安値", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_ICH_TL", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ICH_TL", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_ICH_TL", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ICH_TL", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_ICH_KL", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ICH_KL", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_ICH_KL", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ICH_KL", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_ICH_CS", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ICH_CS", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_ICH_CS", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ICH_CS", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_ICH_SA", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ICH_SA", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_ICH_SA", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ICH_SA", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_ICH_SB", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ICH_SB", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_ICH_SB", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ICH_SB", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_KAMA_KAMA", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "KAMA_KAMA", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_KAMA_KAMA", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "KAMA_KAMA", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_KRI_KRI", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "KRI_KRI", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_KRI_KRI", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "KRI_KRI", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_LWMA_LWMA", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "LWMA_LWMA", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_LWMA_LWMA", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "LWMA_LWMA", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_MACD_MACD", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "MACD_MACD", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_MACD_MACD", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "MACD_MACD", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_MACD_SIGNAL", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "MACD_SIGNAL", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_MACD_SIGNAL", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "MACD_SIGNAL", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_MACD_HISTOGRAM", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "MACD_HISTOGRAM", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_MACD_HISTOGRAM", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "MACD_HISTOGRAM", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_MAE_ME1", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "MAE_ME1", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_MAE_ME1", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "MAE_ME1", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_MAE_ME2", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "MAE_ME2", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_MAE_ME2", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "MAE_ME2", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_MD_MD", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "MD_MD", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_MD_MD", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "MD_MD", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_MVA_MVA", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "MVA_MVA", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_MVA_MVA", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "MVA_MVA", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_OSC_OSC", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "OSC_OSC", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_OSC_OSC", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "OSC_OSC", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_PIVOT_PIVOT", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "PIVOT_PIVOT", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_PIVOT_PIVOT", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "PIVOT_PIVOT", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_PPMA_PPMA", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "PPMA_PPMA", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_PPMA_PPMA", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "PPMA_PPMA", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_REGRESSION_REGRESSION", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "REGRESSION_REGRESSION", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_REGRESSION_REGRESSION", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "REGRESSION_REGRESSION", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_RLW_PercentR", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "RLW_PercentR", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_RLW_PercentR", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "RLW_PercentR", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_ROC_ROC", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ROC_ROC", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_ROC_ROC", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ROC_ROC", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_RSI_RSI", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "RSI_RSI", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_RSI_RSI", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "RSI_RSI", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_SAR_UP", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SAR_UP", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_SAR_UP", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SAR_UP", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_SAR_DN", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SAR_DN", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_SAR_DN", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SAR_DN", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_SFK_K", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SFK_K", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_SFK_K", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SFK_K", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_SFK_D", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SFK_D", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_SFK_D", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SFK_D", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_SHIFT_I_MVA", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SHIFT_I_MVA", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_SHIFT_I_MVA", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SHIFT_I_MVA", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_SHIFT_O_ADX", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SHIFT_O_ADX", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_SHIFT_O_ADX", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SHIFT_O_ADX", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_SHOWTIMETOEND_SHOWTIMETOEND", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SHOWTIMETOEND_SHOWTIMETOEND", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_SHOWTIMETOEND_SHOWTIMETOEND", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SHOWTIMETOEND_SHOWTIMETOEND", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_SMMA_SMMA", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SMMA_SMMA", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_SMMA_SMMA", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SMMA_SMMA", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_SSD_K", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SSD_K", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_SSD_K", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SSD_K", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_SSD_D", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SSD_D", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_SSD_D", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SSD_D", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_STOCHASTIC_K", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "STOCHASTIC_K", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_STOCHASTIC_K", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "STOCHASTIC_K", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_STOCHASTIC_D", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "STOCHASTIC_D", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_STOCHASTIC_D", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "STOCHASTIC_D", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_TMA_TMA", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "TMA_TMA", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_TMA_TMA", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "TMA_TMA", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_TMACD_TMACD", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "TMACD_TMACD", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_TMACD_TMACD", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "TMACD_TMACD", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_TSI_TSI", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "TSI_TSI", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_TSI_TSI", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "TSI_TSI", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_VIDYA_V", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "VIDYA_V", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_VIDYA_V", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "VIDYA_V", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_WMA_WMA", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "WMA_WMA", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_WMA_WMA", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "WMA_WMA", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_ZIGZAG_Up", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ZIGZAG_Up", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_ZIGZAG_Up", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ZIGZAG_Up", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.InsertCommand = new global::System.Data.SqlClient.SqlCommand();
            this._adapter.InsertCommand.Connection = this.Connection;
            this._adapter.InsertCommand.CommandText = "INSERT INTO [smlt].[T_Indicator_15m] ([通貨ペアNo], [日時], [AC_AC], [AD_AD], [ADX_ADX]" +
                ", [ALLIGATOR_Jaw], [ALLIGATOR_Teeth], [ALLIGATOR_Lips], [AO_AO], [AROON_UP], [AR" +
                "OON_DOWN], [ARSI_ARSI], [ASI_ASI], [ATR_ATR], [BB_TL], [BB_BL], [BB_AL], [CCI_CC" +
                "I], [CHO_CHO], [CMF_CMF], [CMO_CMO], [買い_DMI_DI_plus], [買い_DMI_DI_minus], [売り_DM" +
                "I_DI_plus], [売り_DMI_DI_minus], [EMA_EMA], [EW_EW], [EWN_EWN], [EWO_EWO], [FRACTA" +
                "L_FRACTAL], [GATOR_UP], [GATOR_DN], [HA_始値], [HA_終値], [HA_高値], [HA_安値], [ICH_TL]" +
                ", [ICH_KL], [ICH_CS], [ICH_SA], [ICH_SB], [KAMA_KAMA], [KRI_KRI], [LWMA_LWMA], [" +
                "MACD_MACD], [MACD_SIGNAL], [MACD_HISTOGRAM], [MAE_ME1], [MAE_ME2], [MD_MD], [MVA" +
                "_MVA], [OSC_OSC], [PIVOT_PIVOT], [PPMA_PPMA], [REGRESSION_REGRESSION], [RLW_Perc" +
                "entR], [ROC_ROC], [RSI_RSI], [SAR_UP], [SAR_DN], [SFK_K], [SFK_D], [SHIFT_I_MVA]" +
                ", [SHIFT_O_ADX], [SHOWTIMETOEND_SHOWTIMETOEND], [SMMA_SMMA], [SSD_K], [SSD_D], [" +
                "STOCHASTIC_K], [STOCHASTIC_D], [TMA_TMA], [TMACD_TMACD], [TSI_TSI], [VIDYA_V], [" +
                "WMA_WMA], [ZIGZAG_Up]) VALUES (@通貨ペアNo, @日時, @AC_AC, @AD_AD, @ADX_ADX, @ALLIGATO" +
                "R_Jaw, @ALLIGATOR_Teeth, @ALLIGATOR_Lips, @AO_AO, @AROON_UP, @AROON_DOWN, @ARSI_" +
                "ARSI, @ASI_ASI, @ATR_ATR, @BB_TL, @BB_BL, @BB_AL, @CCI_CCI, @CHO_CHO, @CMF_CMF, " +
                "@CMO_CMO, @買い_DMI_DI_plus, @買い_DMI_DI_minus, @売り_DMI_DI_plus, @売り_DMI_DI_minus, " +
                "@EMA_EMA, @EW_EW, @EWN_EWN, @EWO_EWO, @FRACTAL_FRACTAL, @GATOR_UP, @GATOR_DN, @H" +
                "A_始値, @HA_終値, @HA_高値, @HA_安値, @ICH_TL, @ICH_KL, @ICH_CS, @ICH_SA, @ICH_SB, @KAMA" +
                "_KAMA, @KRI_KRI, @LWMA_LWMA, @MACD_MACD, @MACD_SIGNAL, @MACD_HISTOGRAM, @MAE_ME1" +
                ", @MAE_ME2, @MD_MD, @MVA_MVA, @OSC_OSC, @PIVOT_PIVOT, @PPMA_PPMA, @REGRESSION_RE" +
                "GRESSION, @RLW_PercentR, @ROC_ROC, @RSI_RSI, @SAR_UP, @SAR_DN, @SFK_K, @SFK_D, @" +
                "SHIFT_I_MVA, @SHIFT_O_ADX, @SHOWTIMETOEND_SHOWTIMETOEND, @SMMA_SMMA, @SSD_K, @SS" +
                "D_D, @STOCHASTIC_K, @STOCHASTIC_D, @TMA_TMA, @TMACD_TMACD, @TSI_TSI, @VIDYA_V, @" +
                "WMA_WMA, @ZIGZAG_Up);\r\nSELECT 通貨ペアNo, 日時, AC_AC, AD_AD, ADX_ADX, ALLIGATOR_Jaw, " +
                "ALLIGATOR_Teeth, ALLIGATOR_Lips, AO_AO, AROON_UP, AROON_DOWN, ARSI_ARSI, ASI_ASI" +
                ", ATR_ATR, BB_TL, BB_BL, BB_AL, CCI_CCI, CHO_CHO, CMF_CMF, CMO_CMO, 買い_DMI_DI_pl" +
                "us, 買い_DMI_DI_minus, 売り_DMI_DI_plus, 売り_DMI_DI_minus, EMA_EMA, EW_EW, EWN_EWN, E" +
                "WO_EWO, FRACTAL_FRACTAL, GATOR_UP, GATOR_DN, HA_始値, HA_終値, HA_高値, HA_安値, ICH_TL," +
                " ICH_KL, ICH_CS, ICH_SA, ICH_SB, KAMA_KAMA, KRI_KRI, LWMA_LWMA, MACD_MACD, MACD_" +
                "SIGNAL, MACD_HISTOGRAM, MAE_ME1, MAE_ME2, MD_MD, MVA_MVA, OSC_OSC, PIVOT_PIVOT, " +
                "PPMA_PPMA, REGRESSION_REGRESSION, RLW_PercentR, ROC_ROC, RSI_RSI, SAR_UP, SAR_DN" +
                ", SFK_K, SFK_D, SHIFT_I_MVA, SHIFT_O_ADX, SHOWTIMETOEND_SHOWTIMETOEND, SMMA_SMMA" +
                ", SSD_K, SSD_D, STOCHASTIC_K, STOCHASTIC_D, TMA_TMA, TMACD_TMACD, TSI_TSI, VIDYA" +
                "_V, WMA_WMA, ZIGZAG_Up FROM smlt.T_Indicator_15m WHERE (日時 = @日時) AND (通貨ペアNo = " +
                "@通貨ペアNo)";
            this._adapter.InsertCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@通貨ペアNo", global::System.Data.SqlDbType.TinyInt, 0, global::System.Data.ParameterDirection.Input, 0, 0, "通貨ペアNo", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@日時", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "日時", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@AC_AC", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "AC_AC", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@AD_AD", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "AD_AD", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ADX_ADX", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ADX_ADX", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ALLIGATOR_Jaw", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ALLIGATOR_Jaw", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ALLIGATOR_Teeth", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ALLIGATOR_Teeth", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ALLIGATOR_Lips", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ALLIGATOR_Lips", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@AO_AO", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "AO_AO", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@AROON_UP", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "AROON_UP", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@AROON_DOWN", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "AROON_DOWN", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ARSI_ARSI", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ARSI_ARSI", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ASI_ASI", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ASI_ASI", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ATR_ATR", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ATR_ATR", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@BB_TL", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "BB_TL", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@BB_BL", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "BB_BL", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@BB_AL", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "BB_AL", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@CCI_CCI", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "CCI_CCI", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@CHO_CHO", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "CHO_CHO", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@CMF_CMF", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "CMF_CMF", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@CMO_CMO", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "CMO_CMO", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@買い_DMI_DI_plus", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "買い_DMI_DI_plus", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@買い_DMI_DI_minus", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "買い_DMI_DI_minus", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@売り_DMI_DI_plus", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "売り_DMI_DI_plus", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@売り_DMI_DI_minus", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "売り_DMI_DI_minus", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@EMA_EMA", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "EMA_EMA", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@EW_EW", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "EW_EW", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@EWN_EWN", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "EWN_EWN", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@EWO_EWO", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "EWO_EWO", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@FRACTAL_FRACTAL", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "FRACTAL_FRACTAL", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@GATOR_UP", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "GATOR_UP", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@GATOR_DN", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "GATOR_DN", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@HA_始値", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "HA_始値", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@HA_終値", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "HA_終値", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@HA_高値", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "HA_高値", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@HA_安値", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "HA_安値", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ICH_TL", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ICH_TL", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ICH_KL", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ICH_KL", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ICH_CS", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ICH_CS", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ICH_SA", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ICH_SA", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ICH_SB", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ICH_SB", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@KAMA_KAMA", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "KAMA_KAMA", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@KRI_KRI", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "KRI_KRI", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@LWMA_LWMA", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "LWMA_LWMA", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@MACD_MACD", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "MACD_MACD", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@MACD_SIGNAL", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "MACD_SIGNAL", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@MACD_HISTOGRAM", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "MACD_HISTOGRAM", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@MAE_ME1", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "MAE_ME1", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@MAE_ME2", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "MAE_ME2", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@MD_MD", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "MD_MD", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@MVA_MVA", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "MVA_MVA", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@OSC_OSC", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "OSC_OSC", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@PIVOT_PIVOT", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "PIVOT_PIVOT", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@PPMA_PPMA", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "PPMA_PPMA", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@REGRESSION_REGRESSION", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "REGRESSION_REGRESSION", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@RLW_PercentR", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "RLW_PercentR", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ROC_ROC", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ROC_ROC", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@RSI_RSI", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "RSI_RSI", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@SAR_UP", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SAR_UP", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@SAR_DN", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SAR_DN", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@SFK_K", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SFK_K", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@SFK_D", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SFK_D", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@SHIFT_I_MVA", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SHIFT_I_MVA", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@SHIFT_O_ADX", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SHIFT_O_ADX", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@SHOWTIMETOEND_SHOWTIMETOEND", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SHOWTIMETOEND_SHOWTIMETOEND", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@SMMA_SMMA", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SMMA_SMMA", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@SSD_K", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SSD_K", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@SSD_D", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SSD_D", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@STOCHASTIC_K", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "STOCHASTIC_K", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@STOCHASTIC_D", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "STOCHASTIC_D", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@TMA_TMA", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "TMA_TMA", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@TMACD_TMACD", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "TMACD_TMACD", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@TSI_TSI", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "TSI_TSI", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@VIDYA_V", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "VIDYA_V", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@WMA_WMA", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "WMA_WMA", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ZIGZAG_Up", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ZIGZAG_Up", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand = new global::System.Data.SqlClient.SqlCommand();
            this._adapter.UpdateCommand.Connection = this.Connection;
            this._adapter.UpdateCommand.CommandText = "UPDATE [smlt].[T_Indicator_15m] SET [通貨ペアNo] = @通貨ペアNo, [日時] = @日時, [AC_AC] = @AC" +
                "_AC, [AD_AD] = @AD_AD, [ADX_ADX] = @ADX_ADX, [ALLIGATOR_Jaw] = @ALLIGATOR_Jaw, [" +
                "ALLIGATOR_Teeth] = @ALLIGATOR_Teeth, [ALLIGATOR_Lips] = @ALLIGATOR_Lips, [AO_AO]" +
                " = @AO_AO, [AROON_UP] = @AROON_UP, [AROON_DOWN] = @AROON_DOWN, [ARSI_ARSI] = @AR" +
                "SI_ARSI, [ASI_ASI] = @ASI_ASI, [ATR_ATR] = @ATR_ATR, [BB_TL] = @BB_TL, [BB_BL] =" +
                " @BB_BL, [BB_AL] = @BB_AL, [CCI_CCI] = @CCI_CCI, [CHO_CHO] = @CHO_CHO, [CMF_CMF]" +
                " = @CMF_CMF, [CMO_CMO] = @CMO_CMO, [買い_DMI_DI_plus] = @買い_DMI_DI_plus, [買い_DMI_D" +
                "I_minus] = @買い_DMI_DI_minus, [売り_DMI_DI_plus] = @売り_DMI_DI_plus, [売り_DMI_DI_minu" +
                "s] = @売り_DMI_DI_minus, [EMA_EMA] = @EMA_EMA, [EW_EW] = @EW_EW, [EWN_EWN] = @EWN_" +
                "EWN, [EWO_EWO] = @EWO_EWO, [FRACTAL_FRACTAL] = @FRACTAL_FRACTAL, [GATOR_UP] = @G" +
                "ATOR_UP, [GATOR_DN] = @GATOR_DN, [HA_始値] = @HA_始値, [HA_終値] = @HA_終値, [HA_高値] = @" +
                "HA_高値, [HA_安値] = @HA_安値, [ICH_TL] = @ICH_TL, [ICH_KL] = @ICH_KL, [ICH_CS] = @ICH" +
                "_CS, [ICH_SA] = @ICH_SA, [ICH_SB] = @ICH_SB, [KAMA_KAMA] = @KAMA_KAMA, [KRI_KRI]" +
                " = @KRI_KRI, [LWMA_LWMA] = @LWMA_LWMA, [MACD_MACD] = @MACD_MACD, [MACD_SIGNAL] =" +
                " @MACD_SIGNAL, [MACD_HISTOGRAM] = @MACD_HISTOGRAM, [MAE_ME1] = @MAE_ME1, [MAE_ME" +
                "2] = @MAE_ME2, [MD_MD] = @MD_MD, [MVA_MVA] = @MVA_MVA, [OSC_OSC] = @OSC_OSC, [PI" +
                "VOT_PIVOT] = @PIVOT_PIVOT, [PPMA_PPMA] = @PPMA_PPMA, [REGRESSION_REGRESSION] = @" +
                "REGRESSION_REGRESSION, [RLW_PercentR] = @RLW_PercentR, [ROC_ROC] = @ROC_ROC, [RS" +
                "I_RSI] = @RSI_RSI, [SAR_UP] = @SAR_UP, [SAR_DN] = @SAR_DN, [SFK_K] = @SFK_K, [SF" +
                "K_D] = @SFK_D, [SHIFT_I_MVA] = @SHIFT_I_MVA, [SHIFT_O_ADX] = @SHIFT_O_ADX, [SHOW" +
                "TIMETOEND_SHOWTIMETOEND] = @SHOWTIMETOEND_SHOWTIMETOEND, [SMMA_SMMA] = @SMMA_SMM" +
                "A, [SSD_K] = @SSD_K, [SSD_D] = @SSD_D, [STOCHASTIC_K] = @STOCHASTIC_K, [STOCHAST" +
                "IC_D] = @STOCHASTIC_D, [TMA_TMA] = @TMA_TMA, [TMACD_TMACD] = @TMACD_TMACD, [TSI_" +
                "TSI] = @TSI_TSI, [VIDYA_V] = @VIDYA_V, [WMA_WMA] = @WMA_WMA, [ZIGZAG_Up] = @ZIGZ" +
                "AG_Up WHERE (([通貨ペアNo] = @Original_通貨ペアNo) AND ([日時] = @Original_日時) AND ((@IsNu" +
                "ll_AC_AC = 1 AND [AC_AC] IS NULL) OR ([AC_AC] = @Original_AC_AC)) AND ((@IsNull_" +
                "AD_AD = 1 AND [AD_AD] IS NULL) OR ([AD_AD] = @Original_AD_AD)) AND ((@IsNull_ADX" +
                "_ADX = 1 AND [ADX_ADX] IS NULL) OR ([ADX_ADX] = @Original_ADX_ADX)) AND ((@IsNul" +
                "l_ALLIGATOR_Jaw = 1 AND [ALLIGATOR_Jaw] IS NULL) OR ([ALLIGATOR_Jaw] = @Original" +
                "_ALLIGATOR_Jaw)) AND ((@IsNull_ALLIGATOR_Teeth = 1 AND [ALLIGATOR_Teeth] IS NULL" +
                ") OR ([ALLIGATOR_Teeth] = @Original_ALLIGATOR_Teeth)) AND ((@IsNull_ALLIGATOR_Li" +
                "ps = 1 AND [ALLIGATOR_Lips] IS NULL) OR ([ALLIGATOR_Lips] = @Original_ALLIGATOR_" +
                "Lips)) AND ((@IsNull_AO_AO = 1 AND [AO_AO] IS NULL) OR ([AO_AO] = @Original_AO_A" +
                "O)) AND ((@IsNull_AROON_UP = 1 AND [AROON_UP] IS NULL) OR ([AROON_UP] = @Origina" +
                "l_AROON_UP)) AND ((@IsNull_AROON_DOWN = 1 AND [AROON_DOWN] IS NULL) OR ([AROON_D" +
                "OWN] = @Original_AROON_DOWN)) AND ((@IsNull_ARSI_ARSI = 1 AND [ARSI_ARSI] IS NUL" +
                "L) OR ([ARSI_ARSI] = @Original_ARSI_ARSI)) AND ((@IsNull_ASI_ASI = 1 AND [ASI_AS" +
                "I] IS NULL) OR ([ASI_ASI] = @Original_ASI_ASI)) AND ((@IsNull_ATR_ATR = 1 AND [A" +
                "TR_ATR] IS NULL) OR ([ATR_ATR] = @Original_ATR_ATR)) AND ((@IsNull_BB_TL = 1 AND" +
                " [BB_TL] IS NULL) OR ([BB_TL] = @Original_BB_TL)) AND ((@IsNull_BB_BL = 1 AND [B" +
                "B_BL] IS NULL) OR ([BB_BL] = @Original_BB_BL)) AND ((@IsNull_BB_AL = 1 AND [BB_A" +
                "L] IS NULL) OR ([BB_AL] = @Original_BB_AL)) AND ((@IsNull_CCI_CCI = 1 AND [CCI_C" +
                "CI] IS NULL) OR ([CCI_CCI] = @Original_CCI_CCI)) AND ((@IsNull_CHO_CHO = 1 AND [" +
                "CHO_CHO] IS NULL) OR ([CHO_CHO] = @Original_CHO_CHO)) AND ((@IsNull_CMF_CMF = 1 " +
                "AND [CMF_CMF] IS NULL) OR ([CMF_CMF] = @Original_CMF_CMF)) AND ((@IsNull_CMO_CMO" +
                " = 1 AND [CMO_CMO] IS NULL) OR ([CMO_CMO] = @Original_CMO_CMO)) AND ((@IsNull_買い" +
                "_DMI_DI_plus = 1 AND [買い_DMI_DI_plus] IS NULL) OR ([買い_DMI_DI_plus] = @Original_" +
                "買い_DMI_DI_plus)) AND ((@IsNull_買い_DMI_DI_minus = 1 AND [買い_DMI_DI_minus] IS NULL" +
                ") OR ([買い_DMI_DI_minus] = @Original_買い_DMI_DI_minus)) AND ((@IsNull_売り_DMI_DI_pl" +
                "us = 1 AND [売り_DMI_DI_plus] IS NULL) OR ([売り_DMI_DI_plus] = @Original_売り_DMI_DI_" +
                "plus)) AND ((@IsNull_売り_DMI_DI_minus = 1 AND [売り_DMI_DI_minus] IS NULL) OR ([売り_" +
                "DMI_DI_minus] = @Original_売り_DMI_DI_minus)) AND ((@IsNull_EMA_EMA = 1 AND [EMA_E" +
                "MA] IS NULL) OR ([EMA_EMA] = @Original_EMA_EMA)) AND ((@IsNull_EW_EW = 1 AND [EW" +
                "_EW] IS NULL) OR ([EW_EW] = @Original_EW_EW)) AND ((@IsNull_EWN_EWN = 1 AND [EWN" +
                "_EWN] IS NULL) OR ([EWN_EWN] = @Original_EWN_EWN)) AND ((@IsNull_EWO_EWO = 1 AND" +
                " [EWO_EWO] IS NULL) OR ([EWO_EWO] = @Original_EWO_EWO)) AND ((@IsNull_FRACTAL_FR" +
                "ACTAL = 1 AND [FRACTAL_FRACTAL] IS NULL) OR ([FRACTAL_FRACTAL] = @Original_FRACT" +
                "AL_FRACTAL)) AND ((@IsNull_GATOR_UP = 1 AND [GATOR_UP] IS NULL) OR ([GATOR_UP] =" +
                " @Original_GATOR_UP)) AND ((@IsNull_GATOR_DN = 1 AND [GATOR_DN] IS NULL) OR ([GA" +
                "TOR_DN] = @Original_GATOR_DN)) AND ((@IsNull_HA_始値 = 1 AND [HA_始値] IS NULL) OR (" +
                "[HA_始値] = @Original_HA_始値)) AND ((@IsNull_HA_終値 = 1 AND [HA_終値] IS NULL) OR ([HA" +
                "_終値] = @Original_HA_終値)) AND ((@IsNull_HA_高値 = 1 AND [HA_高値] IS NULL) OR ([HA_高値" +
                "] = @Original_HA_高値)) AND ((@IsNull_HA_安値 = 1 AND [HA_安値] IS NULL) OR ([HA_安値] =" +
                " @Original_HA_安値)) AND ((@IsNull_ICH_TL = 1 AND [ICH_TL] IS NULL) OR ([ICH_TL] =" +
                " @Original_ICH_TL)) AND ((@IsNull_ICH_KL = 1 AND [ICH_KL] IS NULL) OR ([ICH_KL] " +
                "= @Original_ICH_KL)) AND ((@IsNull_ICH_CS = 1 AND [ICH_CS] IS NULL) OR ([ICH_CS]" +
                " = @Original_ICH_CS)) AND ((@IsNull_ICH_SA = 1 AND [ICH_SA] IS NULL) OR ([ICH_SA" +
                "] = @Original_ICH_SA)) AND ((@IsNull_ICH_SB = 1 AND [ICH_SB] IS NULL) OR ([ICH_S" +
                "B] = @Original_ICH_SB)) AND ((@IsNull_KAMA_KAMA = 1 AND [KAMA_KAMA] IS NULL) OR " +
                "([KAMA_KAMA] = @Original_KAMA_KAMA)) AND ((@IsNull_KRI_KRI = 1 AND [KRI_KRI] IS " +
                "NULL) OR ([KRI_KRI] = @Original_KRI_KRI)) AND ((@IsNull_LWMA_LWMA = 1 AND [LWMA_" +
                "LWMA] IS NULL) OR ([LWMA_LWMA] = @Original_LWMA_LWMA)) AND ((@IsNull_MACD_MACD =" +
                " 1 AND [MACD_MACD] IS NULL) OR ([MACD_MACD] = @Original_MACD_MACD)) AND ((@IsNul" +
                "l_MACD_SIGNAL = 1 AND [MACD_SIGNAL] IS NULL) OR ([MACD_SIGNAL] = @Original_MACD_" +
                "SIGNAL)) AND ((@IsNull_MACD_HISTOGRAM = 1 AND [MACD_HISTOGRAM] IS NULL) OR ([MAC" +
                "D_HISTOGRAM] = @Original_MACD_HISTOGRAM)) AND ((@IsNull_MAE_ME1 = 1 AND [MAE_ME1" +
                "] IS NULL) OR ([MAE_ME1] = @Original_MAE_ME1)) AND ((@IsNull_MAE_ME2 = 1 AND [MA" +
                "E_ME2] IS NULL) OR ([MAE_ME2] = @Original_MAE_ME2)) AND ((@IsNull_MD_MD = 1 AND " +
                "[MD_MD] IS NULL) OR ([MD_MD] = @Original_MD_MD)) AND ((@IsNull_MVA_MVA = 1 AND [" +
                "MVA_MVA] IS NULL) OR ([MVA_MVA] = @Original_MVA_MVA)) AND ((@IsNull_OSC_OSC = 1 " +
                "AND [OSC_OSC] IS NULL) OR ([OSC_OSC] = @Original_OSC_OSC)) AND ((@IsNull_PIVOT_P" +
                "IVOT = 1 AND [PIVOT_PIVOT] IS NULL) OR ([PIVOT_PIVOT] = @Original_PIVOT_PIVOT)) " +
                "AND ((@IsNull_PPMA_PPMA = 1 AND [PPMA_PPMA] IS NULL) OR ([PPMA_PPMA] = @Original" +
                "_PPMA_PPMA)) AND ((@IsNull_REGRESSION_REGRESSION = 1 AND [REGRESSION_REGRESSION]" +
                " IS NULL) OR ([REGRESSION_REGRESSION] = @Original_REGRESSION_REGRESSION)) AND ((" +
                "@IsNull_RLW_PercentR = 1 AND [RLW_PercentR] IS NULL) OR ([RLW_PercentR] = @Origi" +
                "nal_RLW_PercentR)) AND ((@IsNull_ROC_ROC = 1 AND [ROC_ROC] IS NULL) OR ([ROC_ROC" +
                "] = @Original_ROC_ROC)) AND ((@IsNull_RSI_RSI = 1 AND [RSI_RSI] IS NULL) OR ([RS" +
                "I_RSI] = @Original_RSI_RSI)) AND ((@IsNull_SAR_UP = 1 AND [SAR_UP] IS NULL) OR (" +
                "[SAR_UP] = @Original_SAR_UP)) AND ((@IsNull_SAR_DN = 1 AND [SAR_DN] IS NULL) OR " +
                "([SAR_DN] = @Original_SAR_DN)) AND ((@IsNull_SFK_K = 1 AND [SFK_K] IS NULL) OR (" +
                "[SFK_K] = @Original_SFK_K)) AND ((@IsNull_SFK_D = 1 AND [SFK_D] IS NULL) OR ([SF" +
                "K_D] = @Original_SFK_D)) AND ((@IsNull_SHIFT_I_MVA = 1 AND [SHIFT_I_MVA] IS NULL" +
                ") OR ([SHIFT_I_MVA] = @Original_SHIFT_I_MVA)) AND ((@IsNull_SHIFT_O_ADX = 1 AND " +
                "[SHIFT_O_ADX] IS NULL) OR ([SHIFT_O_ADX] = @Original_SHIFT_O_ADX)) AND ((@IsNull" +
                "_SHOWTIMETOEND_SHOWTIMETOEND = 1 AND [SHOWTIMETOEND_SHOWTIMETOEND] IS NULL) OR (" +
                "[SHOWTIMETOEND_SHOWTIMETOEND] = @Original_SHOWTIMETOEND_SHOWTIMETOEND)) AND ((@I" +
                "sNull_SMMA_SMMA = 1 AND [SMMA_SMMA] IS NULL) OR ([SMMA_SMMA] = @Original_SMMA_SM" +
                "MA)) AND ((@IsNull_SSD_K = 1 AND [SSD_K] IS NULL) OR ([SSD_K] = @Original_SSD_K)" +
                ") AND ((@IsNull_SSD_D = 1 AND [SSD_D] IS NULL) OR ([SSD_D] = @Original_SSD_D)) A" +
                "ND ((@IsNull_STOCHASTIC_K = 1 AND [STOCHASTIC_K] IS NULL) OR ([STOCHASTIC_K] = @" +
                "Original_STOCHASTIC_K)) AND ((@IsNull_STOCHASTIC_D = 1 AND [STOCHASTIC_D] IS NUL" +
                "L) OR ([STOCHASTIC_D] = @Original_STOCHASTIC_D)) AND ((@IsNull_TMA_TMA = 1 AND [" +
                "TMA_TMA] IS NULL) OR ([TMA_TMA] = @Original_TMA_TMA)) AND ((@IsNull_TMACD_TMACD " +
                "= 1 AND [TMACD_TMACD] IS NULL) OR ([TMACD_TMACD] = @Original_TMACD_TMACD)) AND (" +
                "(@IsNull_TSI_TSI = 1 AND [TSI_TSI] IS NULL) OR ([TSI_TSI] = @Original_TSI_TSI)) " +
                "AND ((@IsNull_VIDYA_V = 1 AND [VIDYA_V] IS NULL) OR ([VIDYA_V] = @Original_VIDYA" +
                "_V)) AND ((@IsNull_WMA_WMA = 1 AND [WMA_WMA] IS NULL) OR ([WMA_WMA] = @Original_" +
                "WMA_WMA)) AND ((@IsNull_ZIGZAG_Up = 1 AND [ZIGZAG_Up] IS NULL) OR ([ZIGZAG_Up] =" +
                " @Original_ZIGZAG_Up)));\r\nSELECT 通貨ペアNo, 日時, AC_AC, AD_AD, ADX_ADX, ALLIGATOR_Ja" +
                "w, ALLIGATOR_Teeth, ALLIGATOR_Lips, AO_AO, AROON_UP, AROON_DOWN, ARSI_ARSI, ASI_" +
                "ASI, ATR_ATR, BB_TL, BB_BL, BB_AL, CCI_CCI, CHO_CHO, CMF_CMF, CMO_CMO, 買い_DMI_DI" +
                "_plus, 買い_DMI_DI_minus, 売り_DMI_DI_plus, 売り_DMI_DI_minus, EMA_EMA, EW_EW, EWN_EWN" +
                ", EWO_EWO, FRACTAL_FRACTAL, GATOR_UP, GATOR_DN, HA_始値, HA_終値, HA_高値, HA_安値, ICH_" +
                "TL, ICH_KL, ICH_CS, ICH_SA, ICH_SB, KAMA_KAMA, KRI_KRI, LWMA_LWMA, MACD_MACD, MA" +
                "CD_SIGNAL, MACD_HISTOGRAM, MAE_ME1, MAE_ME2, MD_MD, MVA_MVA, OSC_OSC, PIVOT_PIVO" +
                "T, PPMA_PPMA, REGRESSION_REGRESSION, RLW_PercentR, ROC_ROC, RSI_RSI, SAR_UP, SAR" +
                "_DN, SFK_K, SFK_D, SHIFT_I_MVA, SHIFT_O_ADX, SHOWTIMETOEND_SHOWTIMETOEND, SMMA_S" +
                "MMA, SSD_K, SSD_D, STOCHASTIC_K, STOCHASTIC_D, TMA_TMA, TMACD_TMACD, TSI_TSI, VI" +
                "DYA_V, WMA_WMA, ZIGZAG_Up FROM smlt.T_Indicator_15m WHERE (日時 = @日時) AND (通貨ペアNo" +
                " = @通貨ペアNo)";
            this._adapter.UpdateCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@通貨ペアNo", global::System.Data.SqlDbType.TinyInt, 0, global::System.Data.ParameterDirection.Input, 0, 0, "通貨ペアNo", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@日時", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "日時", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@AC_AC", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "AC_AC", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@AD_AD", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "AD_AD", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ADX_ADX", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ADX_ADX", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ALLIGATOR_Jaw", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ALLIGATOR_Jaw", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ALLIGATOR_Teeth", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ALLIGATOR_Teeth", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ALLIGATOR_Lips", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ALLIGATOR_Lips", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@AO_AO", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "AO_AO", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@AROON_UP", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "AROON_UP", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@AROON_DOWN", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "AROON_DOWN", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ARSI_ARSI", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ARSI_ARSI", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ASI_ASI", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ASI_ASI", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ATR_ATR", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ATR_ATR", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@BB_TL", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "BB_TL", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@BB_BL", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "BB_BL", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@BB_AL", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "BB_AL", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@CCI_CCI", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "CCI_CCI", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@CHO_CHO", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "CHO_CHO", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@CMF_CMF", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "CMF_CMF", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@CMO_CMO", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "CMO_CMO", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@買い_DMI_DI_plus", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "買い_DMI_DI_plus", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@買い_DMI_DI_minus", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "買い_DMI_DI_minus", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@売り_DMI_DI_plus", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "売り_DMI_DI_plus", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@売り_DMI_DI_minus", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "売り_DMI_DI_minus", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@EMA_EMA", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "EMA_EMA", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@EW_EW", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "EW_EW", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@EWN_EWN", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "EWN_EWN", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@EWO_EWO", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "EWO_EWO", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@FRACTAL_FRACTAL", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "FRACTAL_FRACTAL", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@GATOR_UP", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "GATOR_UP", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@GATOR_DN", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "GATOR_DN", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@HA_始値", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "HA_始値", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@HA_終値", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "HA_終値", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@HA_高値", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "HA_高値", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@HA_安値", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "HA_安値", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ICH_TL", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ICH_TL", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ICH_KL", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ICH_KL", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ICH_CS", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ICH_CS", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ICH_SA", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ICH_SA", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ICH_SB", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ICH_SB", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@KAMA_KAMA", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "KAMA_KAMA", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@KRI_KRI", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "KRI_KRI", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@LWMA_LWMA", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "LWMA_LWMA", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@MACD_MACD", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "MACD_MACD", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@MACD_SIGNAL", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "MACD_SIGNAL", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@MACD_HISTOGRAM", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "MACD_HISTOGRAM", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@MAE_ME1", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "MAE_ME1", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@MAE_ME2", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "MAE_ME2", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@MD_MD", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "MD_MD", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@MVA_MVA", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "MVA_MVA", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@OSC_OSC", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "OSC_OSC", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@PIVOT_PIVOT", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "PIVOT_PIVOT", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@PPMA_PPMA", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "PPMA_PPMA", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@REGRESSION_REGRESSION", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "REGRESSION_REGRESSION", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@RLW_PercentR", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "RLW_PercentR", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ROC_ROC", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ROC_ROC", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@RSI_RSI", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "RSI_RSI", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@SAR_UP", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SAR_UP", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@SAR_DN", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SAR_DN", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@SFK_K", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SFK_K", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@SFK_D", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SFK_D", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@SHIFT_I_MVA", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SHIFT_I_MVA", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@SHIFT_O_ADX", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SHIFT_O_ADX", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@SHOWTIMETOEND_SHOWTIMETOEND", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SHOWTIMETOEND_SHOWTIMETOEND", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@SMMA_SMMA", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SMMA_SMMA", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@SSD_K", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SSD_K", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@SSD_D", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SSD_D", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@STOCHASTIC_K", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "STOCHASTIC_K", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@STOCHASTIC_D", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "STOCHASTIC_D", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@TMA_TMA", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "TMA_TMA", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@TMACD_TMACD", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "TMACD_TMACD", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@TSI_TSI", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "TSI_TSI", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@VIDYA_V", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "VIDYA_V", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@WMA_WMA", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "WMA_WMA", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ZIGZAG_Up", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ZIGZAG_Up", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_通貨ペアNo", global::System.Data.SqlDbType.TinyInt, 0, global::System.Data.ParameterDirection.Input, 0, 0, "通貨ペアNo", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_日時", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "日時", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_AC_AC", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "AC_AC", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_AC_AC", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "AC_AC", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_AD_AD", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "AD_AD", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_AD_AD", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "AD_AD", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_ADX_ADX", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ADX_ADX", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_ADX_ADX", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ADX_ADX", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_ALLIGATOR_Jaw", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ALLIGATOR_Jaw", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_ALLIGATOR_Jaw", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ALLIGATOR_Jaw", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_ALLIGATOR_Teeth", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ALLIGATOR_Teeth", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_ALLIGATOR_Teeth", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ALLIGATOR_Teeth", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_ALLIGATOR_Lips", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ALLIGATOR_Lips", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_ALLIGATOR_Lips", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ALLIGATOR_Lips", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_AO_AO", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "AO_AO", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_AO_AO", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "AO_AO", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_AROON_UP", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "AROON_UP", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_AROON_UP", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "AROON_UP", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_AROON_DOWN", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "AROON_DOWN", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_AROON_DOWN", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "AROON_DOWN", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_ARSI_ARSI", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ARSI_ARSI", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_ARSI_ARSI", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ARSI_ARSI", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_ASI_ASI", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ASI_ASI", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_ASI_ASI", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ASI_ASI", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_ATR_ATR", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ATR_ATR", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_ATR_ATR", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ATR_ATR", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_BB_TL", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "BB_TL", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_BB_TL", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "BB_TL", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_BB_BL", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "BB_BL", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_BB_BL", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "BB_BL", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_BB_AL", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "BB_AL", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_BB_AL", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "BB_AL", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_CCI_CCI", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "CCI_CCI", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_CCI_CCI", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "CCI_CCI", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_CHO_CHO", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "CHO_CHO", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_CHO_CHO", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "CHO_CHO", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_CMF_CMF", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "CMF_CMF", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_CMF_CMF", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "CMF_CMF", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_CMO_CMO", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "CMO_CMO", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_CMO_CMO", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "CMO_CMO", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_買い_DMI_DI_plus", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "買い_DMI_DI_plus", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_買い_DMI_DI_plus", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "買い_DMI_DI_plus", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_買い_DMI_DI_minus", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "買い_DMI_DI_minus", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_買い_DMI_DI_minus", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "買い_DMI_DI_minus", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_売り_DMI_DI_plus", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "売り_DMI_DI_plus", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_売り_DMI_DI_plus", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "売り_DMI_DI_plus", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_売り_DMI_DI_minus", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "売り_DMI_DI_minus", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_売り_DMI_DI_minus", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "売り_DMI_DI_minus", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_EMA_EMA", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "EMA_EMA", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_EMA_EMA", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "EMA_EMA", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_EW_EW", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "EW_EW", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_EW_EW", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "EW_EW", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_EWN_EWN", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "EWN_EWN", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_EWN_EWN", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "EWN_EWN", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_EWO_EWO", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "EWO_EWO", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_EWO_EWO", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "EWO_EWO", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_FRACTAL_FRACTAL", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "FRACTAL_FRACTAL", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_FRACTAL_FRACTAL", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "FRACTAL_FRACTAL", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_GATOR_UP", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "GATOR_UP", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_GATOR_UP", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "GATOR_UP", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_GATOR_DN", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "GATOR_DN", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_GATOR_DN", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "GATOR_DN", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_HA_始値", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "HA_始値", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_HA_始値", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "HA_始値", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_HA_終値", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "HA_終値", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_HA_終値", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "HA_終値", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_HA_高値", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "HA_高値", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_HA_高値", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "HA_高値", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_HA_安値", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "HA_安値", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_HA_安値", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "HA_安値", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_ICH_TL", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ICH_TL", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_ICH_TL", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ICH_TL", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_ICH_KL", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ICH_KL", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_ICH_KL", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ICH_KL", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_ICH_CS", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ICH_CS", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_ICH_CS", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ICH_CS", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_ICH_SA", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ICH_SA", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_ICH_SA", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ICH_SA", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_ICH_SB", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ICH_SB", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_ICH_SB", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ICH_SB", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_KAMA_KAMA", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "KAMA_KAMA", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_KAMA_KAMA", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "KAMA_KAMA", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_KRI_KRI", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "KRI_KRI", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_KRI_KRI", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "KRI_KRI", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_LWMA_LWMA", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "LWMA_LWMA", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_LWMA_LWMA", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "LWMA_LWMA", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_MACD_MACD", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "MACD_MACD", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_MACD_MACD", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "MACD_MACD", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_MACD_SIGNAL", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "MACD_SIGNAL", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_MACD_SIGNAL", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "MACD_SIGNAL", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_MACD_HISTOGRAM", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "MACD_HISTOGRAM", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_MACD_HISTOGRAM", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "MACD_HISTOGRAM", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_MAE_ME1", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "MAE_ME1", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_MAE_ME1", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "MAE_ME1", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_MAE_ME2", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "MAE_ME2", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_MAE_ME2", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "MAE_ME2", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_MD_MD", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "MD_MD", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_MD_MD", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "MD_MD", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_MVA_MVA", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "MVA_MVA", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_MVA_MVA", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "MVA_MVA", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_OSC_OSC", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "OSC_OSC", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_OSC_OSC", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "OSC_OSC", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_PIVOT_PIVOT", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "PIVOT_PIVOT", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_PIVOT_PIVOT", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "PIVOT_PIVOT", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_PPMA_PPMA", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "PPMA_PPMA", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_PPMA_PPMA", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "PPMA_PPMA", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_REGRESSION_REGRESSION", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "REGRESSION_REGRESSION", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_REGRESSION_REGRESSION", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "REGRESSION_REGRESSION", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_RLW_PercentR", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "RLW_PercentR", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_RLW_PercentR", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "RLW_PercentR", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_ROC_ROC", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ROC_ROC", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_ROC_ROC", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ROC_ROC", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_RSI_RSI", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "RSI_RSI", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_RSI_RSI", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "RSI_RSI", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_SAR_UP", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SAR_UP", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_SAR_UP", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SAR_UP", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_SAR_DN", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SAR_DN", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_SAR_DN", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SAR_DN", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_SFK_K", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SFK_K", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_SFK_K", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SFK_K", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_SFK_D", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SFK_D", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_SFK_D", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SFK_D", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_SHIFT_I_MVA", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SHIFT_I_MVA", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_SHIFT_I_MVA", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SHIFT_I_MVA", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_SHIFT_O_ADX", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SHIFT_O_ADX", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_SHIFT_O_ADX", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SHIFT_O_ADX", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_SHOWTIMETOEND_SHOWTIMETOEND", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SHOWTIMETOEND_SHOWTIMETOEND", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_SHOWTIMETOEND_SHOWTIMETOEND", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SHOWTIMETOEND_SHOWTIMETOEND", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_SMMA_SMMA", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SMMA_SMMA", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_SMMA_SMMA", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SMMA_SMMA", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_SSD_K", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SSD_K", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_SSD_K", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SSD_K", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_SSD_D", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SSD_D", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_SSD_D", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SSD_D", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_STOCHASTIC_K", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "STOCHASTIC_K", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_STOCHASTIC_K", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "STOCHASTIC_K", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_STOCHASTIC_D", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "STOCHASTIC_D", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_STOCHASTIC_D", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "STOCHASTIC_D", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_TMA_TMA", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "TMA_TMA", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_TMA_TMA", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "TMA_TMA", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_TMACD_TMACD", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "TMACD_TMACD", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_TMACD_TMACD", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "TMACD_TMACD", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_TSI_TSI", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "TSI_TSI", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_TSI_TSI", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "TSI_TSI", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_VIDYA_V", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "VIDYA_V", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_VIDYA_V", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "VIDYA_V", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_WMA_WMA", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "WMA_WMA", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_WMA_WMA", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "WMA_WMA", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_ZIGZAG_Up", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ZIGZAG_Up", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_ZIGZAG_Up", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ZIGZAG_Up", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void InitConnection() {
            this._connection = new global::System.Data.SqlClient.SqlConnection();
            this._connection.ConnectionString = global::AutoFx_Form.Properties.Settings.Default.FXConnectionString;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void InitCommandCollection() {
            this._commandCollection = new global::System.Data.SqlClient.SqlCommand[2];
            this._commandCollection[0] = new global::System.Data.SqlClient.SqlCommand();
            this._commandCollection[0].Connection = this.Connection;
            this._commandCollection[0].CommandText = "SELECT            smlt.T_Indicator_15m.*\r\nFROM              smlt.T_Indicator_15m";
            this._commandCollection[0].CommandType = global::System.Data.CommandType.Text;
            this._commandCollection[1] = new global::System.Data.SqlClient.SqlCommand();
            this._commandCollection[1].Connection = this.Connection;
            this._commandCollection[1].CommandText = "DELETE FROM [smlt].[T_Indicator_15m] ";
            this._commandCollection[1].CommandType = global::System.Data.CommandType.Text;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Fill, true)]
        public virtual int Fill(DFX_smlt.T_Indicator_15mDataTable dataTable) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, true)]
        public virtual DFX_smlt.T_Indicator_15mDataTable GetData() {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            DFX_smlt.T_Indicator_15mDataTable dataTable = new DFX_smlt.T_Indicator_15mDataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(DFX_smlt.T_Indicator_15mDataTable dataTable) {
            return this.Adapter.Update(dataTable);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(DFX_smlt dataSet) {
            return this.Adapter.Update(dataSet, "T_Indicator_15m");
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow dataRow) {
            return this.Adapter.Update(new global::System.Data.DataRow[] {
                        dataRow});
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow[] dataRows) {
            return this.Adapter.Update(dataRows);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Delete, true)]
        public virtual int Delete(
                    byte Original_通貨ペアNo, 
                    System.DateTime Original_日時, 
                    global::System.Nullable<double> Original_AC_AC, 
                    global::System.Nullable<double> Original_AD_AD, 
                    global::System.Nullable<double> Original_ADX_ADX, 
                    global::System.Nullable<double> Original_ALLIGATOR_Jaw, 
                    global::System.Nullable<double> Original_ALLIGATOR_Teeth, 
                    global::System.Nullable<double> Original_ALLIGATOR_Lips, 
                    global::System.Nullable<double> Original_AO_AO, 
                    global::System.Nullable<double> Original_AROON_UP, 
                    global::System.Nullable<double> Original_AROON_DOWN, 
                    global::System.Nullable<double> Original_ARSI_ARSI, 
                    global::System.Nullable<double> Original_ASI_ASI, 
                    global::System.Nullable<double> Original_ATR_ATR, 
                    global::System.Nullable<double> Original_BB_TL, 
                    global::System.Nullable<double> Original_BB_BL, 
                    global::System.Nullable<double> Original_BB_AL, 
                    global::System.Nullable<double> Original_CCI_CCI, 
                    global::System.Nullable<double> Original_CHO_CHO, 
                    global::System.Nullable<double> Original_CMF_CMF, 
                    global::System.Nullable<double> Original_CMO_CMO, 
                    global::System.Nullable<double> Original_買い_DMI_DI_plus, 
                    global::System.Nullable<double> Original_買い_DMI_DI_minus, 
                    global::System.Nullable<double> Original_売り_DMI_DI_plus, 
                    global::System.Nullable<double> Original_売り_DMI_DI_minus, 
                    global::System.Nullable<double> Original_EMA_EMA, 
                    global::System.Nullable<double> Original_EW_EW, 
                    global::System.Nullable<double> Original_EWN_EWN, 
                    global::System.Nullable<double> Original_EWO_EWO, 
                    global::System.Nullable<double> Original_FRACTAL_FRACTAL, 
                    global::System.Nullable<double> Original_GATOR_UP, 
                    global::System.Nullable<double> Original_GATOR_DN, 
                    global::System.Nullable<double> Original_HA_始値, 
                    global::System.Nullable<double> Original_HA_終値, 
                    global::System.Nullable<double> Original_HA_高値, 
                    global::System.Nullable<double> Original_HA_安値, 
                    global::System.Nullable<double> Original_ICH_TL, 
                    global::System.Nullable<double> Original_ICH_KL, 
                    global::System.Nullable<double> Original_ICH_CS, 
                    global::System.Nullable<double> Original_ICH_SA, 
                    global::System.Nullable<double> Original_ICH_SB, 
                    global::System.Nullable<double> Original_KAMA_KAMA, 
                    global::System.Nullable<double> Original_KRI_KRI, 
                    global::System.Nullable<double> Original_LWMA_LWMA, 
                    global::System.Nullable<double> Original_MACD_MACD, 
                    global::System.Nullable<double> Original_MACD_SIGNAL, 
                    global::System.Nullable<double> Original_MACD_HISTOGRAM, 
                    global::System.Nullable<double> Original_MAE_ME1, 
                    global::System.Nullable<double> Original_MAE_ME2, 
                    global::System.Nullable<double> Original_MD_MD, 
                    global::System.Nullable<double> Original_MVA_MVA, 
                    global::System.Nullable<double> Original_OSC_OSC, 
                    global::System.Nullable<double> Original_PIVOT_PIVOT, 
                    global::System.Nullable<double> Original_PPMA_PPMA, 
                    global::System.Nullable<double> Original_REGRESSION_REGRESSION, 
                    global::System.Nullable<double> Original_RLW_PercentR, 
                    global::System.Nullable<double> Original_ROC_ROC, 
                    global::System.Nullable<double> Original_RSI_RSI, 
                    global::System.Nullable<double> Original_SAR_UP, 
                    global::System.Nullable<double> Original_SAR_DN, 
                    global::System.Nullable<double> Original_SFK_K, 
                    global::System.Nullable<double> Original_SFK_D, 
                    global::System.Nullable<double> Original_SHIFT_I_MVA, 
                    global::System.Nullable<double> Original_SHIFT_O_ADX, 
                    global::System.Nullable<double> Original_SHOWTIMETOEND_SHOWTIMETOEND, 
                    global::System.Nullable<double> Original_SMMA_SMMA, 
                    global::System.Nullable<double> Original_SSD_K, 
                    global::System.Nullable<double> Original_SSD_D, 
                    global::System.Nullable<double> Original_STOCHASTIC_K, 
                    global::System.Nullable<double> Original_STOCHASTIC_D, 
                    global::System.Nullable<double> Original_TMA_TMA, 
                    global::System.Nullable<double> Original_TMACD_TMACD, 
                    global::System.Nullable<double> Original_TSI_TSI, 
                    global::System.Nullable<double> Original_VIDYA_V, 
                    global::System.Nullable<double> Original_WMA_WMA, 
                    global::System.Nullable<double> Original_ZIGZAG_Up) {
            this.Adapter.DeleteCommand.Parameters[0].Value = ((byte)(Original_通貨ペアNo));
            this.Adapter.DeleteCommand.Parameters[1].Value = ((System.DateTime)(Original_日時));
            if ((Original_AC_AC.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[2].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[3].Value = ((double)(Original_AC_AC.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[2].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[3].Value = global::System.DBNull.Value;
            }
            if ((Original_AD_AD.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[4].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[5].Value = ((double)(Original_AD_AD.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[4].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[5].Value = global::System.DBNull.Value;
            }
            if ((Original_ADX_ADX.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[6].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[7].Value = ((double)(Original_ADX_ADX.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[6].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[7].Value = global::System.DBNull.Value;
            }
            if ((Original_ALLIGATOR_Jaw.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[8].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[9].Value = ((double)(Original_ALLIGATOR_Jaw.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[8].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[9].Value = global::System.DBNull.Value;
            }
            if ((Original_ALLIGATOR_Teeth.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[10].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[11].Value = ((double)(Original_ALLIGATOR_Teeth.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[10].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[11].Value = global::System.DBNull.Value;
            }
            if ((Original_ALLIGATOR_Lips.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[12].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[13].Value = ((double)(Original_ALLIGATOR_Lips.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[12].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[13].Value = global::System.DBNull.Value;
            }
            if ((Original_AO_AO.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[14].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[15].Value = ((double)(Original_AO_AO.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[14].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[15].Value = global::System.DBNull.Value;
            }
            if ((Original_AROON_UP.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[16].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[17].Value = ((double)(Original_AROON_UP.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[16].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[17].Value = global::System.DBNull.Value;
            }
            if ((Original_AROON_DOWN.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[18].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[19].Value = ((double)(Original_AROON_DOWN.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[18].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[19].Value = global::System.DBNull.Value;
            }
            if ((Original_ARSI_ARSI.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[20].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[21].Value = ((double)(Original_ARSI_ARSI.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[20].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[21].Value = global::System.DBNull.Value;
            }
            if ((Original_ASI_ASI.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[22].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[23].Value = ((double)(Original_ASI_ASI.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[22].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[23].Value = global::System.DBNull.Value;
            }
            if ((Original_ATR_ATR.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[24].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[25].Value = ((double)(Original_ATR_ATR.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[24].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[25].Value = global::System.DBNull.Value;
            }
            if ((Original_BB_TL.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[26].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[27].Value = ((double)(Original_BB_TL.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[26].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[27].Value = global::System.DBNull.Value;
            }
            if ((Original_BB_BL.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[28].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[29].Value = ((double)(Original_BB_BL.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[28].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[29].Value = global::System.DBNull.Value;
            }
            if ((Original_BB_AL.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[30].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[31].Value = ((double)(Original_BB_AL.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[30].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[31].Value = global::System.DBNull.Value;
            }
            if ((Original_CCI_CCI.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[32].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[33].Value = ((double)(Original_CCI_CCI.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[32].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[33].Value = global::System.DBNull.Value;
            }
            if ((Original_CHO_CHO.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[34].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[35].Value = ((double)(Original_CHO_CHO.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[34].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[35].Value = global::System.DBNull.Value;
            }
            if ((Original_CMF_CMF.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[36].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[37].Value = ((double)(Original_CMF_CMF.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[36].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[37].Value = global::System.DBNull.Value;
            }
            if ((Original_CMO_CMO.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[38].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[39].Value = ((double)(Original_CMO_CMO.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[38].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[39].Value = global::System.DBNull.Value;
            }
            if ((Original_買い_DMI_DI_plus.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[40].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[41].Value = ((double)(Original_買い_DMI_DI_plus.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[40].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[41].Value = global::System.DBNull.Value;
            }
            if ((Original_買い_DMI_DI_minus.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[42].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[43].Value = ((double)(Original_買い_DMI_DI_minus.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[42].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[43].Value = global::System.DBNull.Value;
            }
            if ((Original_売り_DMI_DI_plus.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[44].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[45].Value = ((double)(Original_売り_DMI_DI_plus.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[44].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[45].Value = global::System.DBNull.Value;
            }
            if ((Original_売り_DMI_DI_minus.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[46].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[47].Value = ((double)(Original_売り_DMI_DI_minus.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[46].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[47].Value = global::System.DBNull.Value;
            }
            if ((Original_EMA_EMA.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[48].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[49].Value = ((double)(Original_EMA_EMA.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[48].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[49].Value = global::System.DBNull.Value;
            }
            if ((Original_EW_EW.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[50].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[51].Value = ((double)(Original_EW_EW.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[50].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[51].Value = global::System.DBNull.Value;
            }
            if ((Original_EWN_EWN.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[52].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[53].Value = ((double)(Original_EWN_EWN.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[52].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[53].Value = global::System.DBNull.Value;
            }
            if ((Original_EWO_EWO.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[54].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[55].Value = ((double)(Original_EWO_EWO.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[54].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[55].Value = global::System.DBNull.Value;
            }
            if ((Original_FRACTAL_FRACTAL.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[56].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[57].Value = ((double)(Original_FRACTAL_FRACTAL.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[56].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[57].Value = global::System.DBNull.Value;
            }
            if ((Original_GATOR_UP.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[58].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[59].Value = ((double)(Original_GATOR_UP.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[58].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[59].Value = global::System.DBNull.Value;
            }
            if ((Original_GATOR_DN.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[60].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[61].Value = ((double)(Original_GATOR_DN.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[60].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[61].Value = global::System.DBNull.Value;
            }
            if ((Original_HA_始値.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[62].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[63].Value = ((double)(Original_HA_始値.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[62].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[63].Value = global::System.DBNull.Value;
            }
            if ((Original_HA_終値.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[64].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[65].Value = ((double)(Original_HA_終値.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[64].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[65].Value = global::System.DBNull.Value;
            }
            if ((Original_HA_高値.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[66].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[67].Value = ((double)(Original_HA_高値.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[66].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[67].Value = global::System.DBNull.Value;
            }
            if ((Original_HA_安値.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[68].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[69].Value = ((double)(Original_HA_安値.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[68].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[69].Value = global::System.DBNull.Value;
            }
            if ((Original_ICH_TL.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[70].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[71].Value = ((double)(Original_ICH_TL.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[70].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[71].Value = global::System.DBNull.Value;
            }
            if ((Original_ICH_KL.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[72].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[73].Value = ((double)(Original_ICH_KL.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[72].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[73].Value = global::System.DBNull.Value;
            }
            if ((Original_ICH_CS.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[74].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[75].Value = ((double)(Original_ICH_CS.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[74].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[75].Value = global::System.DBNull.Value;
            }
            if ((Original_ICH_SA.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[76].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[77].Value = ((double)(Original_ICH_SA.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[76].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[77].Value = global::System.DBNull.Value;
            }
            if ((Original_ICH_SB.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[78].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[79].Value = ((double)(Original_ICH_SB.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[78].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[79].Value = global::System.DBNull.Value;
            }
            if ((Original_KAMA_KAMA.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[80].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[81].Value = ((double)(Original_KAMA_KAMA.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[80].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[81].Value = global::System.DBNull.Value;
            }
            if ((Original_KRI_KRI.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[82].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[83].Value = ((double)(Original_KRI_KRI.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[82].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[83].Value = global::System.DBNull.Value;
            }
            if ((Original_LWMA_LWMA.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[84].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[85].Value = ((double)(Original_LWMA_LWMA.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[84].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[85].Value = global::System.DBNull.Value;
            }
            if ((Original_MACD_MACD.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[86].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[87].Value = ((double)(Original_MACD_MACD.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[86].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[87].Value = global::System.DBNull.Value;
            }
            if ((Original_MACD_SIGNAL.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[88].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[89].Value = ((double)(Original_MACD_SIGNAL.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[88].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[89].Value = global::System.DBNull.Value;
            }
            if ((Original_MACD_HISTOGRAM.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[90].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[91].Value = ((double)(Original_MACD_HISTOGRAM.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[90].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[91].Value = global::System.DBNull.Value;
            }
            if ((Original_MAE_ME1.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[92].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[93].Value = ((double)(Original_MAE_ME1.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[92].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[93].Value = global::System.DBNull.Value;
            }
            if ((Original_MAE_ME2.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[94].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[95].Value = ((double)(Original_MAE_ME2.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[94].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[95].Value = global::System.DBNull.Value;
            }
            if ((Original_MD_MD.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[96].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[97].Value = ((double)(Original_MD_MD.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[96].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[97].Value = global::System.DBNull.Value;
            }
            if ((Original_MVA_MVA.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[98].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[99].Value = ((double)(Original_MVA_MVA.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[98].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[99].Value = global::System.DBNull.Value;
            }
            if ((Original_OSC_OSC.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[100].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[101].Value = ((double)(Original_OSC_OSC.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[100].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[101].Value = global::System.DBNull.Value;
            }
            if ((Original_PIVOT_PIVOT.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[102].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[103].Value = ((double)(Original_PIVOT_PIVOT.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[102].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[103].Value = global::System.DBNull.Value;
            }
            if ((Original_PPMA_PPMA.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[104].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[105].Value = ((double)(Original_PPMA_PPMA.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[104].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[105].Value = global::System.DBNull.Value;
            }
            if ((Original_REGRESSION_REGRESSION.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[106].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[107].Value = ((double)(Original_REGRESSION_REGRESSION.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[106].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[107].Value = global::System.DBNull.Value;
            }
            if ((Original_RLW_PercentR.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[108].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[109].Value = ((double)(Original_RLW_PercentR.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[108].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[109].Value = global::System.DBNull.Value;
            }
            if ((Original_ROC_ROC.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[110].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[111].Value = ((double)(Original_ROC_ROC.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[110].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[111].Value = global::System.DBNull.Value;
            }
            if ((Original_RSI_RSI.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[112].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[113].Value = ((double)(Original_RSI_RSI.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[112].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[113].Value = global::System.DBNull.Value;
            }
            if ((Original_SAR_UP.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[114].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[115].Value = ((double)(Original_SAR_UP.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[114].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[115].Value = global::System.DBNull.Value;
            }
            if ((Original_SAR_DN.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[116].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[117].Value = ((double)(Original_SAR_DN.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[116].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[117].Value = global::System.DBNull.Value;
            }
            if ((Original_SFK_K.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[118].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[119].Value = ((double)(Original_SFK_K.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[118].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[119].Value = global::System.DBNull.Value;
            }
            if ((Original_SFK_D.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[120].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[121].Value = ((double)(Original_SFK_D.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[120].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[121].Value = global::System.DBNull.Value;
            }
            if ((Original_SHIFT_I_MVA.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[122].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[123].Value = ((double)(Original_SHIFT_I_MVA.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[122].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[123].Value = global::System.DBNull.Value;
            }
            if ((Original_SHIFT_O_ADX.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[124].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[125].Value = ((double)(Original_SHIFT_O_ADX.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[124].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[125].Value = global::System.DBNull.Value;
            }
            if ((Original_SHOWTIMETOEND_SHOWTIMETOEND.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[126].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[127].Value = ((double)(Original_SHOWTIMETOEND_SHOWTIMETOEND.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[126].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[127].Value = global::System.DBNull.Value;
            }
            if ((Original_SMMA_SMMA.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[128].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[129].Value = ((double)(Original_SMMA_SMMA.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[128].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[129].Value = global::System.DBNull.Value;
            }
            if ((Original_SSD_K.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[130].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[131].Value = ((double)(Original_SSD_K.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[130].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[131].Value = global::System.DBNull.Value;
            }
            if ((Original_SSD_D.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[132].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[133].Value = ((double)(Original_SSD_D.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[132].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[133].Value = global::System.DBNull.Value;
            }
            if ((Original_STOCHASTIC_K.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[134].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[135].Value = ((double)(Original_STOCHASTIC_K.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[134].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[135].Value = global::System.DBNull.Value;
            }
            if ((Original_STOCHASTIC_D.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[136].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[137].Value = ((double)(Original_STOCHASTIC_D.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[136].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[137].Value = global::System.DBNull.Value;
            }
            if ((Original_TMA_TMA.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[138].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[139].Value = ((double)(Original_TMA_TMA.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[138].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[139].Value = global::System.DBNull.Value;
            }
            if ((Original_TMACD_TMACD.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[140].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[141].Value = ((double)(Original_TMACD_TMACD.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[140].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[141].Value = global::System.DBNull.Value;
            }
            if ((Original_TSI_TSI.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[142].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[143].Value = ((double)(Original_TSI_TSI.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[142].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[143].Value = global::System.DBNull.Value;
            }
            if ((Original_VIDYA_V.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[144].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[145].Value = ((double)(Original_VIDYA_V.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[144].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[145].Value = global::System.DBNull.Value;
            }
            if ((Original_WMA_WMA.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[146].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[147].Value = ((double)(Original_WMA_WMA.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[146].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[147].Value = global::System.DBNull.Value;
            }
            if ((Original_ZIGZAG_Up.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[148].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[149].Value = ((double)(Original_ZIGZAG_Up.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[148].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[149].Value = global::System.DBNull.Value;
            }
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.DeleteCommand.Connection.State;
            if (((this.Adapter.DeleteCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.DeleteCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.DeleteCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.DeleteCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Insert, true)]
        public virtual int Insert(
                    byte 通貨ペアNo, 
                    System.DateTime 日時, 
                    global::System.Nullable<double> AC_AC, 
                    global::System.Nullable<double> AD_AD, 
                    global::System.Nullable<double> ADX_ADX, 
                    global::System.Nullable<double> ALLIGATOR_Jaw, 
                    global::System.Nullable<double> ALLIGATOR_Teeth, 
                    global::System.Nullable<double> ALLIGATOR_Lips, 
                    global::System.Nullable<double> AO_AO, 
                    global::System.Nullable<double> AROON_UP, 
                    global::System.Nullable<double> AROON_DOWN, 
                    global::System.Nullable<double> ARSI_ARSI, 
                    global::System.Nullable<double> ASI_ASI, 
                    global::System.Nullable<double> ATR_ATR, 
                    global::System.Nullable<double> BB_TL, 
                    global::System.Nullable<double> BB_BL, 
                    global::System.Nullable<double> BB_AL, 
                    global::System.Nullable<double> CCI_CCI, 
                    global::System.Nullable<double> CHO_CHO, 
                    global::System.Nullable<double> CMF_CMF, 
                    global::System.Nullable<double> CMO_CMO, 
                    global::System.Nullable<double> 買い_DMI_DI_plus, 
                    global::System.Nullable<double> 買い_DMI_DI_minus, 
                    global::System.Nullable<double> 売り_DMI_DI_plus, 
                    global::System.Nullable<double> 売り_DMI_DI_minus, 
                    global::System.Nullable<double> EMA_EMA, 
                    global::System.Nullable<double> EW_EW, 
                    global::System.Nullable<double> EWN_EWN, 
                    global::System.Nullable<double> EWO_EWO, 
                    global::System.Nullable<double> FRACTAL_FRACTAL, 
                    global::System.Nullable<double> GATOR_UP, 
                    global::System.Nullable<double> GATOR_DN, 
                    global::System.Nullable<double> HA_始値, 
                    global::System.Nullable<double> HA_終値, 
                    global::System.Nullable<double> HA_高値, 
                    global::System.Nullable<double> HA_安値, 
                    global::System.Nullable<double> ICH_TL, 
                    global::System.Nullable<double> ICH_KL, 
                    global::System.Nullable<double> ICH_CS, 
                    global::System.Nullable<double> ICH_SA, 
                    global::System.Nullable<double> ICH_SB, 
                    global::System.Nullable<double> KAMA_KAMA, 
                    global::System.Nullable<double> KRI_KRI, 
                    global::System.Nullable<double> LWMA_LWMA, 
                    global::System.Nullable<double> MACD_MACD, 
                    global::System.Nullable<double> MACD_SIGNAL, 
                    global::System.Nullable<double> MACD_HISTOGRAM, 
                    global::System.Nullable<double> MAE_ME1, 
                    global::System.Nullable<double> MAE_ME2, 
                    global::System.Nullable<double> MD_MD, 
                    global::System.Nullable<double> MVA_MVA, 
                    global::System.Nullable<double> OSC_OSC, 
                    global::System.Nullable<double> PIVOT_PIVOT, 
                    global::System.Nullable<double> PPMA_PPMA, 
                    global::System.Nullable<double> REGRESSION_REGRESSION, 
                    global::System.Nullable<double> RLW_PercentR, 
                    global::System.Nullable<double> ROC_ROC, 
                    global::System.Nullable<double> RSI_RSI, 
                    global::System.Nullable<double> SAR_UP, 
                    global::System.Nullable<double> SAR_DN, 
                    global::System.Nullable<double> SFK_K, 
                    global::System.Nullable<double> SFK_D, 
                    global::System.Nullable<double> SHIFT_I_MVA, 
                    global::System.Nullable<double> SHIFT_O_ADX, 
                    global::System.Nullable<double> SHOWTIMETOEND_SHOWTIMETOEND, 
                    global::System.Nullable<double> SMMA_SMMA, 
                    global::System.Nullable<double> SSD_K, 
                    global::System.Nullable<double> SSD_D, 
                    global::System.Nullable<double> STOCHASTIC_K, 
                    global::System.Nullable<double> STOCHASTIC_D, 
                    global::System.Nullable<double> TMA_TMA, 
                    global::System.Nullable<double> TMACD_TMACD, 
                    global::System.Nullable<double> TSI_TSI, 
                    global::System.Nullable<double> VIDYA_V, 
                    global::System.Nullable<double> WMA_WMA, 
                    global::System.Nullable<double> ZIGZAG_Up) {
            this.Adapter.InsertCommand.Parameters[0].Value = ((byte)(通貨ペアNo));
            this.Adapter.InsertCommand.Parameters[1].Value = ((System.DateTime)(日時));
            if ((AC_AC.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[2].Value = ((double)(AC_AC.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[2].Value = global::System.DBNull.Value;
            }
            if ((AD_AD.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[3].Value = ((double)(AD_AD.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[3].Value = global::System.DBNull.Value;
            }
            if ((ADX_ADX.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[4].Value = ((double)(ADX_ADX.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[4].Value = global::System.DBNull.Value;
            }
            if ((ALLIGATOR_Jaw.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[5].Value = ((double)(ALLIGATOR_Jaw.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[5].Value = global::System.DBNull.Value;
            }
            if ((ALLIGATOR_Teeth.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[6].Value = ((double)(ALLIGATOR_Teeth.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[6].Value = global::System.DBNull.Value;
            }
            if ((ALLIGATOR_Lips.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[7].Value = ((double)(ALLIGATOR_Lips.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[7].Value = global::System.DBNull.Value;
            }
            if ((AO_AO.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[8].Value = ((double)(AO_AO.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[8].Value = global::System.DBNull.Value;
            }
            if ((AROON_UP.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[9].Value = ((double)(AROON_UP.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[9].Value = global::System.DBNull.Value;
            }
            if ((AROON_DOWN.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[10].Value = ((double)(AROON_DOWN.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[10].Value = global::System.DBNull.Value;
            }
            if ((ARSI_ARSI.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[11].Value = ((double)(ARSI_ARSI.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[11].Value = global::System.DBNull.Value;
            }
            if ((ASI_ASI.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[12].Value = ((double)(ASI_ASI.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[12].Value = global::System.DBNull.Value;
            }
            if ((ATR_ATR.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[13].Value = ((double)(ATR_ATR.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[13].Value = global::System.DBNull.Value;
            }
            if ((BB_TL.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[14].Value = ((double)(BB_TL.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[14].Value = global::System.DBNull.Value;
            }
            if ((BB_BL.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[15].Value = ((double)(BB_BL.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[15].Value = global::System.DBNull.Value;
            }
            if ((BB_AL.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[16].Value = ((double)(BB_AL.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[16].Value = global::System.DBNull.Value;
            }
            if ((CCI_CCI.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[17].Value = ((double)(CCI_CCI.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[17].Value = global::System.DBNull.Value;
            }
            if ((CHO_CHO.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[18].Value = ((double)(CHO_CHO.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[18].Value = global::System.DBNull.Value;
            }
            if ((CMF_CMF.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[19].Value = ((double)(CMF_CMF.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[19].Value = global::System.DBNull.Value;
            }
            if ((CMO_CMO.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[20].Value = ((double)(CMO_CMO.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[20].Value = global::System.DBNull.Value;
            }
            if ((買い_DMI_DI_plus.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[21].Value = ((double)(買い_DMI_DI_plus.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[21].Value = global::System.DBNull.Value;
            }
            if ((買い_DMI_DI_minus.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[22].Value = ((double)(買い_DMI_DI_minus.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[22].Value = global::System.DBNull.Value;
            }
            if ((売り_DMI_DI_plus.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[23].Value = ((double)(売り_DMI_DI_plus.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[23].Value = global::System.DBNull.Value;
            }
            if ((売り_DMI_DI_minus.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[24].Value = ((double)(売り_DMI_DI_minus.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[24].Value = global::System.DBNull.Value;
            }
            if ((EMA_EMA.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[25].Value = ((double)(EMA_EMA.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[25].Value = global::System.DBNull.Value;
            }
            if ((EW_EW.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[26].Value = ((double)(EW_EW.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[26].Value = global::System.DBNull.Value;
            }
            if ((EWN_EWN.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[27].Value = ((double)(EWN_EWN.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[27].Value = global::System.DBNull.Value;
            }
            if ((EWO_EWO.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[28].Value = ((double)(EWO_EWO.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[28].Value = global::System.DBNull.Value;
            }
            if ((FRACTAL_FRACTAL.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[29].Value = ((double)(FRACTAL_FRACTAL.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[29].Value = global::System.DBNull.Value;
            }
            if ((GATOR_UP.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[30].Value = ((double)(GATOR_UP.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[30].Value = global::System.DBNull.Value;
            }
            if ((GATOR_DN.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[31].Value = ((double)(GATOR_DN.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[31].Value = global::System.DBNull.Value;
            }
            if ((HA_始値.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[32].Value = ((double)(HA_始値.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[32].Value = global::System.DBNull.Value;
            }
            if ((HA_終値.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[33].Value = ((double)(HA_終値.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[33].Value = global::System.DBNull.Value;
            }
            if ((HA_高値.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[34].Value = ((double)(HA_高値.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[34].Value = global::System.DBNull.Value;
            }
            if ((HA_安値.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[35].Value = ((double)(HA_安値.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[35].Value = global::System.DBNull.Value;
            }
            if ((ICH_TL.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[36].Value = ((double)(ICH_TL.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[36].Value = global::System.DBNull.Value;
            }
            if ((ICH_KL.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[37].Value = ((double)(ICH_KL.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[37].Value = global::System.DBNull.Value;
            }
            if ((ICH_CS.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[38].Value = ((double)(ICH_CS.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[38].Value = global::System.DBNull.Value;
            }
            if ((ICH_SA.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[39].Value = ((double)(ICH_SA.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[39].Value = global::System.DBNull.Value;
            }
            if ((ICH_SB.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[40].Value = ((double)(ICH_SB.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[40].Value = global::System.DBNull.Value;
            }
            if ((KAMA_KAMA.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[41].Value = ((double)(KAMA_KAMA.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[41].Value = global::System.DBNull.Value;
            }
            if ((KRI_KRI.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[42].Value = ((double)(KRI_KRI.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[42].Value = global::System.DBNull.Value;
            }
            if ((LWMA_LWMA.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[43].Value = ((double)(LWMA_LWMA.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[43].Value = global::System.DBNull.Value;
            }
            if ((MACD_MACD.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[44].Value = ((double)(MACD_MACD.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[44].Value = global::System.DBNull.Value;
            }
            if ((MACD_SIGNAL.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[45].Value = ((double)(MACD_SIGNAL.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[45].Value = global::System.DBNull.Value;
            }
            if ((MACD_HISTOGRAM.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[46].Value = ((double)(MACD_HISTOGRAM.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[46].Value = global::System.DBNull.Value;
            }
            if ((MAE_ME1.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[47].Value = ((double)(MAE_ME1.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[47].Value = global::System.DBNull.Value;
            }
            if ((MAE_ME2.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[48].Value = ((double)(MAE_ME2.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[48].Value = global::System.DBNull.Value;
            }
            if ((MD_MD.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[49].Value = ((double)(MD_MD.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[49].Value = global::System.DBNull.Value;
            }
            if ((MVA_MVA.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[50].Value = ((double)(MVA_MVA.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[50].Value = global::System.DBNull.Value;
            }
            if ((OSC_OSC.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[51].Value = ((double)(OSC_OSC.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[51].Value = global::System.DBNull.Value;
            }
            if ((PIVOT_PIVOT.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[52].Value = ((double)(PIVOT_PIVOT.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[52].Value = global::System.DBNull.Value;
            }
            if ((PPMA_PPMA.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[53].Value = ((double)(PPMA_PPMA.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[53].Value = global::System.DBNull.Value;
            }
            if ((REGRESSION_REGRESSION.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[54].Value = ((double)(REGRESSION_REGRESSION.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[54].Value = global::System.DBNull.Value;
            }
            if ((RLW_PercentR.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[55].Value = ((double)(RLW_PercentR.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[55].Value = global::System.DBNull.Value;
            }
            if ((ROC_ROC.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[56].Value = ((double)(ROC_ROC.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[56].Value = global::System.DBNull.Value;
            }
            if ((RSI_RSI.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[57].Value = ((double)(RSI_RSI.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[57].Value = global::System.DBNull.Value;
            }
            if ((SAR_UP.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[58].Value = ((double)(SAR_UP.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[58].Value = global::System.DBNull.Value;
            }
            if ((SAR_DN.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[59].Value = ((double)(SAR_DN.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[59].Value = global::System.DBNull.Value;
            }
            if ((SFK_K.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[60].Value = ((double)(SFK_K.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[60].Value = global::System.DBNull.Value;
            }
            if ((SFK_D.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[61].Value = ((double)(SFK_D.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[61].Value = global::System.DBNull.Value;
            }
            if ((SHIFT_I_MVA.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[62].Value = ((double)(SHIFT_I_MVA.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[62].Value = global::System.DBNull.Value;
            }
            if ((SHIFT_O_ADX.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[63].Value = ((double)(SHIFT_O_ADX.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[63].Value = global::System.DBNull.Value;
            }
            if ((SHOWTIMETOEND_SHOWTIMETOEND.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[64].Value = ((double)(SHOWTIMETOEND_SHOWTIMETOEND.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[64].Value = global::System.DBNull.Value;
            }
            if ((SMMA_SMMA.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[65].Value = ((double)(SMMA_SMMA.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[65].Value = global::System.DBNull.Value;
            }
            if ((SSD_K.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[66].Value = ((double)(SSD_K.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[66].Value = global::System.DBNull.Value;
            }
            if ((SSD_D.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[67].Value = ((double)(SSD_D.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[67].Value = global::System.DBNull.Value;
            }
            if ((STOCHASTIC_K.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[68].Value = ((double)(STOCHASTIC_K.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[68].Value = global::System.DBNull.Value;
            }
            if ((STOCHASTIC_D.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[69].Value = ((double)(STOCHASTIC_D.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[69].Value = global::System.DBNull.Value;
            }
            if ((TMA_TMA.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[70].Value = ((double)(TMA_TMA.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[70].Value = global::System.DBNull.Value;
            }
            if ((TMACD_TMACD.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[71].Value = ((double)(TMACD_TMACD.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[71].Value = global::System.DBNull.Value;
            }
            if ((TSI_TSI.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[72].Value = ((double)(TSI_TSI.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[72].Value = global::System.DBNull.Value;
            }
            if ((VIDYA_V.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[73].Value = ((double)(VIDYA_V.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[73].Value = global::System.DBNull.Value;
            }
            if ((WMA_WMA.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[74].Value = ((double)(WMA_WMA.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[74].Value = global::System.DBNull.Value;
            }
            if ((ZIGZAG_Up.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[75].Value = ((double)(ZIGZAG_Up.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[75].Value = global::System.DBNull.Value;
            }
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.InsertCommand.Connection.State;
            if (((this.Adapter.InsertCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.InsertCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.InsertCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.InsertCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Update, true)]
        public virtual int Update(
                    byte 通貨ペアNo, 
                    System.DateTime 日時, 
                    global::System.Nullable<double> AC_AC, 
                    global::System.Nullable<double> AD_AD, 
                    global::System.Nullable<double> ADX_ADX, 
                    global::System.Nullable<double> ALLIGATOR_Jaw, 
                    global::System.Nullable<double> ALLIGATOR_Teeth, 
                    global::System.Nullable<double> ALLIGATOR_Lips, 
                    global::System.Nullable<double> AO_AO, 
                    global::System.Nullable<double> AROON_UP, 
                    global::System.Nullable<double> AROON_DOWN, 
                    global::System.Nullable<double> ARSI_ARSI, 
                    global::System.Nullable<double> ASI_ASI, 
                    global::System.Nullable<double> ATR_ATR, 
                    global::System.Nullable<double> BB_TL, 
                    global::System.Nullable<double> BB_BL, 
                    global::System.Nullable<double> BB_AL, 
                    global::System.Nullable<double> CCI_CCI, 
                    global::System.Nullable<double> CHO_CHO, 
                    global::System.Nullable<double> CMF_CMF, 
                    global::System.Nullable<double> CMO_CMO, 
                    global::System.Nullable<double> 買い_DMI_DI_plus, 
                    global::System.Nullable<double> 買い_DMI_DI_minus, 
                    global::System.Nullable<double> 売り_DMI_DI_plus, 
                    global::System.Nullable<double> 売り_DMI_DI_minus, 
                    global::System.Nullable<double> EMA_EMA, 
                    global::System.Nullable<double> EW_EW, 
                    global::System.Nullable<double> EWN_EWN, 
                    global::System.Nullable<double> EWO_EWO, 
                    global::System.Nullable<double> FRACTAL_FRACTAL, 
                    global::System.Nullable<double> GATOR_UP, 
                    global::System.Nullable<double> GATOR_DN, 
                    global::System.Nullable<double> HA_始値, 
                    global::System.Nullable<double> HA_終値, 
                    global::System.Nullable<double> HA_高値, 
                    global::System.Nullable<double> HA_安値, 
                    global::System.Nullable<double> ICH_TL, 
                    global::System.Nullable<double> ICH_KL, 
                    global::System.Nullable<double> ICH_CS, 
                    global::System.Nullable<double> ICH_SA, 
                    global::System.Nullable<double> ICH_SB, 
                    global::System.Nullable<double> KAMA_KAMA, 
                    global::System.Nullable<double> KRI_KRI, 
                    global::System.Nullable<double> LWMA_LWMA, 
                    global::System.Nullable<double> MACD_MACD, 
                    global::System.Nullable<double> MACD_SIGNAL, 
                    global::System.Nullable<double> MACD_HISTOGRAM, 
                    global::System.Nullable<double> MAE_ME1, 
                    global::System.Nullable<double> MAE_ME2, 
                    global::System.Nullable<double> MD_MD, 
                    global::System.Nullable<double> MVA_MVA, 
                    global::System.Nullable<double> OSC_OSC, 
                    global::System.Nullable<double> PIVOT_PIVOT, 
                    global::System.Nullable<double> PPMA_PPMA, 
                    global::System.Nullable<double> REGRESSION_REGRESSION, 
                    global::System.Nullable<double> RLW_PercentR, 
                    global::System.Nullable<double> ROC_ROC, 
                    global::System.Nullable<double> RSI_RSI, 
                    global::System.Nullable<double> SAR_UP, 
                    global::System.Nullable<double> SAR_DN, 
                    global::System.Nullable<double> SFK_K, 
                    global::System.Nullable<double> SFK_D, 
                    global::System.Nullable<double> SHIFT_I_MVA, 
                    global::System.Nullable<double> SHIFT_O_ADX, 
                    global::System.Nullable<double> SHOWTIMETOEND_SHOWTIMETOEND, 
                    global::System.Nullable<double> SMMA_SMMA, 
                    global::System.Nullable<double> SSD_K, 
                    global::System.Nullable<double> SSD_D, 
                    global::System.Nullable<double> STOCHASTIC_K, 
                    global::System.Nullable<double> STOCHASTIC_D, 
                    global::System.Nullable<double> TMA_TMA, 
                    global::System.Nullable<double> TMACD_TMACD, 
                    global::System.Nullable<double> TSI_TSI, 
                    global::System.Nullable<double> VIDYA_V, 
                    global::System.Nullable<double> WMA_WMA, 
                    global::System.Nullable<double> ZIGZAG_Up, 
                    byte Original_通貨ペアNo, 
                    System.DateTime Original_日時, 
                    global::System.Nullable<double> Original_AC_AC, 
                    global::System.Nullable<double> Original_AD_AD, 
                    global::System.Nullable<double> Original_ADX_ADX, 
                    global::System.Nullable<double> Original_ALLIGATOR_Jaw, 
                    global::System.Nullable<double> Original_ALLIGATOR_Teeth, 
                    global::System.Nullable<double> Original_ALLIGATOR_Lips, 
                    global::System.Nullable<double> Original_AO_AO, 
                    global::System.Nullable<double> Original_AROON_UP, 
                    global::System.Nullable<double> Original_AROON_DOWN, 
                    global::System.Nullable<double> Original_ARSI_ARSI, 
                    global::System.Nullable<double> Original_ASI_ASI, 
                    global::System.Nullable<double> Original_ATR_ATR, 
                    global::System.Nullable<double> Original_BB_TL, 
                    global::System.Nullable<double> Original_BB_BL, 
                    global::System.Nullable<double> Original_BB_AL, 
                    global::System.Nullable<double> Original_CCI_CCI, 
                    global::System.Nullable<double> Original_CHO_CHO, 
                    global::System.Nullable<double> Original_CMF_CMF, 
                    global::System.Nullable<double> Original_CMO_CMO, 
                    global::System.Nullable<double> Original_買い_DMI_DI_plus, 
                    global::System.Nullable<double> Original_買い_DMI_DI_minus, 
                    global::System.Nullable<double> Original_売り_DMI_DI_plus, 
                    global::System.Nullable<double> Original_売り_DMI_DI_minus, 
                    global::System.Nullable<double> Original_EMA_EMA, 
                    global::System.Nullable<double> Original_EW_EW, 
                    global::System.Nullable<double> Original_EWN_EWN, 
                    global::System.Nullable<double> Original_EWO_EWO, 
                    global::System.Nullable<double> Original_FRACTAL_FRACTAL, 
                    global::System.Nullable<double> Original_GATOR_UP, 
                    global::System.Nullable<double> Original_GATOR_DN, 
                    global::System.Nullable<double> Original_HA_始値, 
                    global::System.Nullable<double> Original_HA_終値, 
                    global::System.Nullable<double> Original_HA_高値, 
                    global::System.Nullable<double> Original_HA_安値, 
                    global::System.Nullable<double> Original_ICH_TL, 
                    global::System.Nullable<double> Original_ICH_KL, 
                    global::System.Nullable<double> Original_ICH_CS, 
                    global::System.Nullable<double> Original_ICH_SA, 
                    global::System.Nullable<double> Original_ICH_SB, 
                    global::System.Nullable<double> Original_KAMA_KAMA, 
                    global::System.Nullable<double> Original_KRI_KRI, 
                    global::System.Nullable<double> Original_LWMA_LWMA, 
                    global::System.Nullable<double> Original_MACD_MACD, 
                    global::System.Nullable<double> Original_MACD_SIGNAL, 
                    global::System.Nullable<double> Original_MACD_HISTOGRAM, 
                    global::System.Nullable<double> Original_MAE_ME1, 
                    global::System.Nullable<double> Original_MAE_ME2, 
                    global::System.Nullable<double> Original_MD_MD, 
                    global::System.Nullable<double> Original_MVA_MVA, 
                    global::System.Nullable<double> Original_OSC_OSC, 
                    global::System.Nullable<double> Original_PIVOT_PIVOT, 
                    global::System.Nullable<double> Original_PPMA_PPMA, 
                    global::System.Nullable<double> Original_REGRESSION_REGRESSION, 
                    global::System.Nullable<double> Original_RLW_PercentR, 
                    global::System.Nullable<double> Original_ROC_ROC, 
                    global::System.Nullable<double> Original_RSI_RSI, 
                    global::System.Nullable<double> Original_SAR_UP, 
                    global::System.Nullable<double> Original_SAR_DN, 
                    global::System.Nullable<double> Original_SFK_K, 
                    global::System.Nullable<double> Original_SFK_D, 
                    global::System.Nullable<double> Original_SHIFT_I_MVA, 
                    global::System.Nullable<double> Original_SHIFT_O_ADX, 
                    global::System.Nullable<double> Original_SHOWTIMETOEND_SHOWTIMETOEND, 
                    global::System.Nullable<double> Original_SMMA_SMMA, 
                    global::System.Nullable<double> Original_SSD_K, 
                    global::System.Nullable<double> Original_SSD_D, 
                    global::System.Nullable<double> Original_STOCHASTIC_K, 
                    global::System.Nullable<double> Original_STOCHASTIC_D, 
                    global::System.Nullable<double> Original_TMA_TMA, 
                    global::System.Nullable<double> Original_TMACD_TMACD, 
                    global::System.Nullable<double> Original_TSI_TSI, 
                    global::System.Nullable<double> Original_VIDYA_V, 
                    global::System.Nullable<double> Original_WMA_WMA, 
                    global::System.Nullable<double> Original_ZIGZAG_Up) {
            this.Adapter.UpdateCommand.Parameters[0].Value = ((byte)(通貨ペアNo));
            this.Adapter.UpdateCommand.Parameters[1].Value = ((System.DateTime)(日時));
            if ((AC_AC.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[2].Value = ((double)(AC_AC.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[2].Value = global::System.DBNull.Value;
            }
            if ((AD_AD.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[3].Value = ((double)(AD_AD.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[3].Value = global::System.DBNull.Value;
            }
            if ((ADX_ADX.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[4].Value = ((double)(ADX_ADX.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[4].Value = global::System.DBNull.Value;
            }
            if ((ALLIGATOR_Jaw.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[5].Value = ((double)(ALLIGATOR_Jaw.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[5].Value = global::System.DBNull.Value;
            }
            if ((ALLIGATOR_Teeth.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[6].Value = ((double)(ALLIGATOR_Teeth.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[6].Value = global::System.DBNull.Value;
            }
            if ((ALLIGATOR_Lips.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[7].Value = ((double)(ALLIGATOR_Lips.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[7].Value = global::System.DBNull.Value;
            }
            if ((AO_AO.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[8].Value = ((double)(AO_AO.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[8].Value = global::System.DBNull.Value;
            }
            if ((AROON_UP.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[9].Value = ((double)(AROON_UP.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[9].Value = global::System.DBNull.Value;
            }
            if ((AROON_DOWN.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[10].Value = ((double)(AROON_DOWN.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[10].Value = global::System.DBNull.Value;
            }
            if ((ARSI_ARSI.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[11].Value = ((double)(ARSI_ARSI.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[11].Value = global::System.DBNull.Value;
            }
            if ((ASI_ASI.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[12].Value = ((double)(ASI_ASI.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[12].Value = global::System.DBNull.Value;
            }
            if ((ATR_ATR.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[13].Value = ((double)(ATR_ATR.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[13].Value = global::System.DBNull.Value;
            }
            if ((BB_TL.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[14].Value = ((double)(BB_TL.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[14].Value = global::System.DBNull.Value;
            }
            if ((BB_BL.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[15].Value = ((double)(BB_BL.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[15].Value = global::System.DBNull.Value;
            }
            if ((BB_AL.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[16].Value = ((double)(BB_AL.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[16].Value = global::System.DBNull.Value;
            }
            if ((CCI_CCI.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[17].Value = ((double)(CCI_CCI.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[17].Value = global::System.DBNull.Value;
            }
            if ((CHO_CHO.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[18].Value = ((double)(CHO_CHO.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[18].Value = global::System.DBNull.Value;
            }
            if ((CMF_CMF.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[19].Value = ((double)(CMF_CMF.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[19].Value = global::System.DBNull.Value;
            }
            if ((CMO_CMO.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[20].Value = ((double)(CMO_CMO.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[20].Value = global::System.DBNull.Value;
            }
            if ((買い_DMI_DI_plus.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[21].Value = ((double)(買い_DMI_DI_plus.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[21].Value = global::System.DBNull.Value;
            }
            if ((買い_DMI_DI_minus.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[22].Value = ((double)(買い_DMI_DI_minus.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[22].Value = global::System.DBNull.Value;
            }
            if ((売り_DMI_DI_plus.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[23].Value = ((double)(売り_DMI_DI_plus.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[23].Value = global::System.DBNull.Value;
            }
            if ((売り_DMI_DI_minus.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[24].Value = ((double)(売り_DMI_DI_minus.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[24].Value = global::System.DBNull.Value;
            }
            if ((EMA_EMA.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[25].Value = ((double)(EMA_EMA.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[25].Value = global::System.DBNull.Value;
            }
            if ((EW_EW.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[26].Value = ((double)(EW_EW.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[26].Value = global::System.DBNull.Value;
            }
            if ((EWN_EWN.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[27].Value = ((double)(EWN_EWN.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[27].Value = global::System.DBNull.Value;
            }
            if ((EWO_EWO.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[28].Value = ((double)(EWO_EWO.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[28].Value = global::System.DBNull.Value;
            }
            if ((FRACTAL_FRACTAL.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[29].Value = ((double)(FRACTAL_FRACTAL.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[29].Value = global::System.DBNull.Value;
            }
            if ((GATOR_UP.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[30].Value = ((double)(GATOR_UP.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[30].Value = global::System.DBNull.Value;
            }
            if ((GATOR_DN.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[31].Value = ((double)(GATOR_DN.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[31].Value = global::System.DBNull.Value;
            }
            if ((HA_始値.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[32].Value = ((double)(HA_始値.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[32].Value = global::System.DBNull.Value;
            }
            if ((HA_終値.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[33].Value = ((double)(HA_終値.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[33].Value = global::System.DBNull.Value;
            }
            if ((HA_高値.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[34].Value = ((double)(HA_高値.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[34].Value = global::System.DBNull.Value;
            }
            if ((HA_安値.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[35].Value = ((double)(HA_安値.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[35].Value = global::System.DBNull.Value;
            }
            if ((ICH_TL.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[36].Value = ((double)(ICH_TL.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[36].Value = global::System.DBNull.Value;
            }
            if ((ICH_KL.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[37].Value = ((double)(ICH_KL.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[37].Value = global::System.DBNull.Value;
            }
            if ((ICH_CS.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[38].Value = ((double)(ICH_CS.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[38].Value = global::System.DBNull.Value;
            }
            if ((ICH_SA.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[39].Value = ((double)(ICH_SA.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[39].Value = global::System.DBNull.Value;
            }
            if ((ICH_SB.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[40].Value = ((double)(ICH_SB.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[40].Value = global::System.DBNull.Value;
            }
            if ((KAMA_KAMA.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[41].Value = ((double)(KAMA_KAMA.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[41].Value = global::System.DBNull.Value;
            }
            if ((KRI_KRI.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[42].Value = ((double)(KRI_KRI.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[42].Value = global::System.DBNull.Value;
            }
            if ((LWMA_LWMA.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[43].Value = ((double)(LWMA_LWMA.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[43].Value = global::System.DBNull.Value;
            }
            if ((MACD_MACD.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[44].Value = ((double)(MACD_MACD.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[44].Value = global::System.DBNull.Value;
            }
            if ((MACD_SIGNAL.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[45].Value = ((double)(MACD_SIGNAL.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[45].Value = global::System.DBNull.Value;
            }
            if ((MACD_HISTOGRAM.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[46].Value = ((double)(MACD_HISTOGRAM.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[46].Value = global::System.DBNull.Value;
            }
            if ((MAE_ME1.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[47].Value = ((double)(MAE_ME1.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[47].Value = global::System.DBNull.Value;
            }
            if ((MAE_ME2.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[48].Value = ((double)(MAE_ME2.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[48].Value = global::System.DBNull.Value;
            }
            if ((MD_MD.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[49].Value = ((double)(MD_MD.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[49].Value = global::System.DBNull.Value;
            }
            if ((MVA_MVA.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[50].Value = ((double)(MVA_MVA.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[50].Value = global::System.DBNull.Value;
            }
            if ((OSC_OSC.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[51].Value = ((double)(OSC_OSC.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[51].Value = global::System.DBNull.Value;
            }
            if ((PIVOT_PIVOT.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[52].Value = ((double)(PIVOT_PIVOT.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[52].Value = global::System.DBNull.Value;
            }
            if ((PPMA_PPMA.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[53].Value = ((double)(PPMA_PPMA.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[53].Value = global::System.DBNull.Value;
            }
            if ((REGRESSION_REGRESSION.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[54].Value = ((double)(REGRESSION_REGRESSION.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[54].Value = global::System.DBNull.Value;
            }
            if ((RLW_PercentR.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[55].Value = ((double)(RLW_PercentR.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[55].Value = global::System.DBNull.Value;
            }
            if ((ROC_ROC.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[56].Value = ((double)(ROC_ROC.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[56].Value = global::System.DBNull.Value;
            }
            if ((RSI_RSI.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[57].Value = ((double)(RSI_RSI.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[57].Value = global::System.DBNull.Value;
            }
            if ((SAR_UP.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[58].Value = ((double)(SAR_UP.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[58].Value = global::System.DBNull.Value;
            }
            if ((SAR_DN.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[59].Value = ((double)(SAR_DN.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[59].Value = global::System.DBNull.Value;
            }
            if ((SFK_K.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[60].Value = ((double)(SFK_K.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[60].Value = global::System.DBNull.Value;
            }
            if ((SFK_D.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[61].Value = ((double)(SFK_D.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[61].Value = global::System.DBNull.Value;
            }
            if ((SHIFT_I_MVA.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[62].Value = ((double)(SHIFT_I_MVA.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[62].Value = global::System.DBNull.Value;
            }
            if ((SHIFT_O_ADX.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[63].Value = ((double)(SHIFT_O_ADX.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[63].Value = global::System.DBNull.Value;
            }
            if ((SHOWTIMETOEND_SHOWTIMETOEND.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[64].Value = ((double)(SHOWTIMETOEND_SHOWTIMETOEND.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[64].Value = global::System.DBNull.Value;
            }
            if ((SMMA_SMMA.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[65].Value = ((double)(SMMA_SMMA.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[65].Value = global::System.DBNull.Value;
            }
            if ((SSD_K.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[66].Value = ((double)(SSD_K.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[66].Value = global::System.DBNull.Value;
            }
            if ((SSD_D.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[67].Value = ((double)(SSD_D.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[67].Value = global::System.DBNull.Value;
            }
            if ((STOCHASTIC_K.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[68].Value = ((double)(STOCHASTIC_K.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[68].Value = global::System.DBNull.Value;
            }
            if ((STOCHASTIC_D.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[69].Value = ((double)(STOCHASTIC_D.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[69].Value = global::System.DBNull.Value;
            }
            if ((TMA_TMA.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[70].Value = ((double)(TMA_TMA.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[70].Value = global::System.DBNull.Value;
            }
            if ((TMACD_TMACD.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[71].Value = ((double)(TMACD_TMACD.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[71].Value = global::System.DBNull.Value;
            }
            if ((TSI_TSI.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[72].Value = ((double)(TSI_TSI.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[72].Value = global::System.DBNull.Value;
            }
            if ((VIDYA_V.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[73].Value = ((double)(VIDYA_V.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[73].Value = global::System.DBNull.Value;
            }
            if ((WMA_WMA.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[74].Value = ((double)(WMA_WMA.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[74].Value = global::System.DBNull.Value;
            }
            if ((ZIGZAG_Up.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[75].Value = ((double)(ZIGZAG_Up.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[75].Value = global::System.DBNull.Value;
            }
            this.Adapter.UpdateCommand.Parameters[76].Value = ((byte)(Original_通貨ペアNo));
            this.Adapter.UpdateCommand.Parameters[77].Value = ((System.DateTime)(Original_日時));
            if ((Original_AC_AC.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[78].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[79].Value = ((double)(Original_AC_AC.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[78].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[79].Value = global::System.DBNull.Value;
            }
            if ((Original_AD_AD.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[80].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[81].Value = ((double)(Original_AD_AD.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[80].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[81].Value = global::System.DBNull.Value;
            }
            if ((Original_ADX_ADX.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[82].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[83].Value = ((double)(Original_ADX_ADX.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[82].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[83].Value = global::System.DBNull.Value;
            }
            if ((Original_ALLIGATOR_Jaw.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[84].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[85].Value = ((double)(Original_ALLIGATOR_Jaw.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[84].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[85].Value = global::System.DBNull.Value;
            }
            if ((Original_ALLIGATOR_Teeth.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[86].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[87].Value = ((double)(Original_ALLIGATOR_Teeth.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[86].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[87].Value = global::System.DBNull.Value;
            }
            if ((Original_ALLIGATOR_Lips.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[88].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[89].Value = ((double)(Original_ALLIGATOR_Lips.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[88].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[89].Value = global::System.DBNull.Value;
            }
            if ((Original_AO_AO.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[90].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[91].Value = ((double)(Original_AO_AO.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[90].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[91].Value = global::System.DBNull.Value;
            }
            if ((Original_AROON_UP.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[92].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[93].Value = ((double)(Original_AROON_UP.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[92].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[93].Value = global::System.DBNull.Value;
            }
            if ((Original_AROON_DOWN.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[94].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[95].Value = ((double)(Original_AROON_DOWN.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[94].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[95].Value = global::System.DBNull.Value;
            }
            if ((Original_ARSI_ARSI.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[96].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[97].Value = ((double)(Original_ARSI_ARSI.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[96].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[97].Value = global::System.DBNull.Value;
            }
            if ((Original_ASI_ASI.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[98].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[99].Value = ((double)(Original_ASI_ASI.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[98].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[99].Value = global::System.DBNull.Value;
            }
            if ((Original_ATR_ATR.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[100].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[101].Value = ((double)(Original_ATR_ATR.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[100].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[101].Value = global::System.DBNull.Value;
            }
            if ((Original_BB_TL.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[102].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[103].Value = ((double)(Original_BB_TL.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[102].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[103].Value = global::System.DBNull.Value;
            }
            if ((Original_BB_BL.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[104].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[105].Value = ((double)(Original_BB_BL.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[104].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[105].Value = global::System.DBNull.Value;
            }
            if ((Original_BB_AL.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[106].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[107].Value = ((double)(Original_BB_AL.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[106].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[107].Value = global::System.DBNull.Value;
            }
            if ((Original_CCI_CCI.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[108].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[109].Value = ((double)(Original_CCI_CCI.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[108].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[109].Value = global::System.DBNull.Value;
            }
            if ((Original_CHO_CHO.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[110].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[111].Value = ((double)(Original_CHO_CHO.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[110].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[111].Value = global::System.DBNull.Value;
            }
            if ((Original_CMF_CMF.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[112].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[113].Value = ((double)(Original_CMF_CMF.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[112].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[113].Value = global::System.DBNull.Value;
            }
            if ((Original_CMO_CMO.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[114].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[115].Value = ((double)(Original_CMO_CMO.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[114].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[115].Value = global::System.DBNull.Value;
            }
            if ((Original_買い_DMI_DI_plus.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[116].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[117].Value = ((double)(Original_買い_DMI_DI_plus.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[116].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[117].Value = global::System.DBNull.Value;
            }
            if ((Original_買い_DMI_DI_minus.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[118].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[119].Value = ((double)(Original_買い_DMI_DI_minus.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[118].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[119].Value = global::System.DBNull.Value;
            }
            if ((Original_売り_DMI_DI_plus.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[120].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[121].Value = ((double)(Original_売り_DMI_DI_plus.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[120].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[121].Value = global::System.DBNull.Value;
            }
            if ((Original_売り_DMI_DI_minus.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[122].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[123].Value = ((double)(Original_売り_DMI_DI_minus.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[122].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[123].Value = global::System.DBNull.Value;
            }
            if ((Original_EMA_EMA.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[124].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[125].Value = ((double)(Original_EMA_EMA.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[124].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[125].Value = global::System.DBNull.Value;
            }
            if ((Original_EW_EW.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[126].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[127].Value = ((double)(Original_EW_EW.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[126].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[127].Value = global::System.DBNull.Value;
            }
            if ((Original_EWN_EWN.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[128].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[129].Value = ((double)(Original_EWN_EWN.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[128].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[129].Value = global::System.DBNull.Value;
            }
            if ((Original_EWO_EWO.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[130].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[131].Value = ((double)(Original_EWO_EWO.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[130].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[131].Value = global::System.DBNull.Value;
            }
            if ((Original_FRACTAL_FRACTAL.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[132].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[133].Value = ((double)(Original_FRACTAL_FRACTAL.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[132].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[133].Value = global::System.DBNull.Value;
            }
            if ((Original_GATOR_UP.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[134].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[135].Value = ((double)(Original_GATOR_UP.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[134].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[135].Value = global::System.DBNull.Value;
            }
            if ((Original_GATOR_DN.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[136].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[137].Value = ((double)(Original_GATOR_DN.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[136].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[137].Value = global::System.DBNull.Value;
            }
            if ((Original_HA_始値.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[138].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[139].Value = ((double)(Original_HA_始値.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[138].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[139].Value = global::System.DBNull.Value;
            }
            if ((Original_HA_終値.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[140].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[141].Value = ((double)(Original_HA_終値.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[140].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[141].Value = global::System.DBNull.Value;
            }
            if ((Original_HA_高値.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[142].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[143].Value = ((double)(Original_HA_高値.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[142].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[143].Value = global::System.DBNull.Value;
            }
            if ((Original_HA_安値.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[144].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[145].Value = ((double)(Original_HA_安値.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[144].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[145].Value = global::System.DBNull.Value;
            }
            if ((Original_ICH_TL.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[146].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[147].Value = ((double)(Original_ICH_TL.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[146].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[147].Value = global::System.DBNull.Value;
            }
            if ((Original_ICH_KL.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[148].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[149].Value = ((double)(Original_ICH_KL.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[148].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[149].Value = global::System.DBNull.Value;
            }
            if ((Original_ICH_CS.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[150].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[151].Value = ((double)(Original_ICH_CS.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[150].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[151].Value = global::System.DBNull.Value;
            }
            if ((Original_ICH_SA.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[152].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[153].Value = ((double)(Original_ICH_SA.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[152].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[153].Value = global::System.DBNull.Value;
            }
            if ((Original_ICH_SB.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[154].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[155].Value = ((double)(Original_ICH_SB.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[154].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[155].Value = global::System.DBNull.Value;
            }
            if ((Original_KAMA_KAMA.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[156].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[157].Value = ((double)(Original_KAMA_KAMA.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[156].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[157].Value = global::System.DBNull.Value;
            }
            if ((Original_KRI_KRI.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[158].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[159].Value = ((double)(Original_KRI_KRI.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[158].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[159].Value = global::System.DBNull.Value;
            }
            if ((Original_LWMA_LWMA.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[160].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[161].Value = ((double)(Original_LWMA_LWMA.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[160].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[161].Value = global::System.DBNull.Value;
            }
            if ((Original_MACD_MACD.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[162].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[163].Value = ((double)(Original_MACD_MACD.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[162].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[163].Value = global::System.DBNull.Value;
            }
            if ((Original_MACD_SIGNAL.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[164].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[165].Value = ((double)(Original_MACD_SIGNAL.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[164].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[165].Value = global::System.DBNull.Value;
            }
            if ((Original_MACD_HISTOGRAM.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[166].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[167].Value = ((double)(Original_MACD_HISTOGRAM.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[166].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[167].Value = global::System.DBNull.Value;
            }
            if ((Original_MAE_ME1.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[168].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[169].Value = ((double)(Original_MAE_ME1.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[168].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[169].Value = global::System.DBNull.Value;
            }
            if ((Original_MAE_ME2.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[170].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[171].Value = ((double)(Original_MAE_ME2.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[170].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[171].Value = global::System.DBNull.Value;
            }
            if ((Original_MD_MD.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[172].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[173].Value = ((double)(Original_MD_MD.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[172].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[173].Value = global::System.DBNull.Value;
            }
            if ((Original_MVA_MVA.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[174].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[175].Value = ((double)(Original_MVA_MVA.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[174].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[175].Value = global::System.DBNull.Value;
            }
            if ((Original_OSC_OSC.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[176].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[177].Value = ((double)(Original_OSC_OSC.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[176].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[177].Value = global::System.DBNull.Value;
            }
            if ((Original_PIVOT_PIVOT.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[178].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[179].Value = ((double)(Original_PIVOT_PIVOT.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[178].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[179].Value = global::System.DBNull.Value;
            }
            if ((Original_PPMA_PPMA.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[180].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[181].Value = ((double)(Original_PPMA_PPMA.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[180].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[181].Value = global::System.DBNull.Value;
            }
            if ((Original_REGRESSION_REGRESSION.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[182].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[183].Value = ((double)(Original_REGRESSION_REGRESSION.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[182].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[183].Value = global::System.DBNull.Value;
            }
            if ((Original_RLW_PercentR.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[184].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[185].Value = ((double)(Original_RLW_PercentR.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[184].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[185].Value = global::System.DBNull.Value;
            }
            if ((Original_ROC_ROC.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[186].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[187].Value = ((double)(Original_ROC_ROC.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[186].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[187].Value = global::System.DBNull.Value;
            }
            if ((Original_RSI_RSI.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[188].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[189].Value = ((double)(Original_RSI_RSI.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[188].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[189].Value = global::System.DBNull.Value;
            }
            if ((Original_SAR_UP.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[190].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[191].Value = ((double)(Original_SAR_UP.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[190].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[191].Value = global::System.DBNull.Value;
            }
            if ((Original_SAR_DN.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[192].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[193].Value = ((double)(Original_SAR_DN.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[192].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[193].Value = global::System.DBNull.Value;
            }
            if ((Original_SFK_K.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[194].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[195].Value = ((double)(Original_SFK_K.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[194].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[195].Value = global::System.DBNull.Value;
            }
            if ((Original_SFK_D.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[196].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[197].Value = ((double)(Original_SFK_D.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[196].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[197].Value = global::System.DBNull.Value;
            }
            if ((Original_SHIFT_I_MVA.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[198].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[199].Value = ((double)(Original_SHIFT_I_MVA.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[198].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[199].Value = global::System.DBNull.Value;
            }
            if ((Original_SHIFT_O_ADX.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[200].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[201].Value = ((double)(Original_SHIFT_O_ADX.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[200].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[201].Value = global::System.DBNull.Value;
            }
            if ((Original_SHOWTIMETOEND_SHOWTIMETOEND.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[202].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[203].Value = ((double)(Original_SHOWTIMETOEND_SHOWTIMETOEND.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[202].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[203].Value = global::System.DBNull.Value;
            }
            if ((Original_SMMA_SMMA.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[204].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[205].Value = ((double)(Original_SMMA_SMMA.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[204].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[205].Value = global::System.DBNull.Value;
            }
            if ((Original_SSD_K.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[206].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[207].Value = ((double)(Original_SSD_K.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[206].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[207].Value = global::System.DBNull.Value;
            }
            if ((Original_SSD_D.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[208].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[209].Value = ((double)(Original_SSD_D.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[208].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[209].Value = global::System.DBNull.Value;
            }
            if ((Original_STOCHASTIC_K.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[210].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[211].Value = ((double)(Original_STOCHASTIC_K.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[210].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[211].Value = global::System.DBNull.Value;
            }
            if ((Original_STOCHASTIC_D.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[212].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[213].Value = ((double)(Original_STOCHASTIC_D.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[212].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[213].Value = global::System.DBNull.Value;
            }
            if ((Original_TMA_TMA.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[214].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[215].Value = ((double)(Original_TMA_TMA.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[214].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[215].Value = global::System.DBNull.Value;
            }
            if ((Original_TMACD_TMACD.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[216].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[217].Value = ((double)(Original_TMACD_TMACD.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[216].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[217].Value = global::System.DBNull.Value;
            }
            if ((Original_TSI_TSI.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[218].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[219].Value = ((double)(Original_TSI_TSI.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[218].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[219].Value = global::System.DBNull.Value;
            }
            if ((Original_VIDYA_V.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[220].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[221].Value = ((double)(Original_VIDYA_V.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[220].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[221].Value = global::System.DBNull.Value;
            }
            if ((Original_WMA_WMA.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[222].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[223].Value = ((double)(Original_WMA_WMA.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[222].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[223].Value = global::System.DBNull.Value;
            }
            if ((Original_ZIGZAG_Up.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[224].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[225].Value = ((double)(Original_ZIGZAG_Up.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[224].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[225].Value = global::System.DBNull.Value;
            }
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.UpdateCommand.Connection.State;
            if (((this.Adapter.UpdateCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.UpdateCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.UpdateCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.UpdateCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Update, true)]
        public virtual int Update(
                    global::System.Nullable<double> AC_AC, 
                    global::System.Nullable<double> AD_AD, 
                    global::System.Nullable<double> ADX_ADX, 
                    global::System.Nullable<double> ALLIGATOR_Jaw, 
                    global::System.Nullable<double> ALLIGATOR_Teeth, 
                    global::System.Nullable<double> ALLIGATOR_Lips, 
                    global::System.Nullable<double> AO_AO, 
                    global::System.Nullable<double> AROON_UP, 
                    global::System.Nullable<double> AROON_DOWN, 
                    global::System.Nullable<double> ARSI_ARSI, 
                    global::System.Nullable<double> ASI_ASI, 
                    global::System.Nullable<double> ATR_ATR, 
                    global::System.Nullable<double> BB_TL, 
                    global::System.Nullable<double> BB_BL, 
                    global::System.Nullable<double> BB_AL, 
                    global::System.Nullable<double> CCI_CCI, 
                    global::System.Nullable<double> CHO_CHO, 
                    global::System.Nullable<double> CMF_CMF, 
                    global::System.Nullable<double> CMO_CMO, 
                    global::System.Nullable<double> 買い_DMI_DI_plus, 
                    global::System.Nullable<double> 買い_DMI_DI_minus, 
                    global::System.Nullable<double> 売り_DMI_DI_plus, 
                    global::System.Nullable<double> 売り_DMI_DI_minus, 
                    global::System.Nullable<double> EMA_EMA, 
                    global::System.Nullable<double> EW_EW, 
                    global::System.Nullable<double> EWN_EWN, 
                    global::System.Nullable<double> EWO_EWO, 
                    global::System.Nullable<double> FRACTAL_FRACTAL, 
                    global::System.Nullable<double> GATOR_UP, 
                    global::System.Nullable<double> GATOR_DN, 
                    global::System.Nullable<double> HA_始値, 
                    global::System.Nullable<double> HA_終値, 
                    global::System.Nullable<double> HA_高値, 
                    global::System.Nullable<double> HA_安値, 
                    global::System.Nullable<double> ICH_TL, 
                    global::System.Nullable<double> ICH_KL, 
                    global::System.Nullable<double> ICH_CS, 
                    global::System.Nullable<double> ICH_SA, 
                    global::System.Nullable<double> ICH_SB, 
                    global::System.Nullable<double> KAMA_KAMA, 
                    global::System.Nullable<double> KRI_KRI, 
                    global::System.Nullable<double> LWMA_LWMA, 
                    global::System.Nullable<double> MACD_MACD, 
                    global::System.Nullable<double> MACD_SIGNAL, 
                    global::System.Nullable<double> MACD_HISTOGRAM, 
                    global::System.Nullable<double> MAE_ME1, 
                    global::System.Nullable<double> MAE_ME2, 
                    global::System.Nullable<double> MD_MD, 
                    global::System.Nullable<double> MVA_MVA, 
                    global::System.Nullable<double> OSC_OSC, 
                    global::System.Nullable<double> PIVOT_PIVOT, 
                    global::System.Nullable<double> PPMA_PPMA, 
                    global::System.Nullable<double> REGRESSION_REGRESSION, 
                    global::System.Nullable<double> RLW_PercentR, 
                    global::System.Nullable<double> ROC_ROC, 
                    global::System.Nullable<double> RSI_RSI, 
                    global::System.Nullable<double> SAR_UP, 
                    global::System.Nullable<double> SAR_DN, 
                    global::System.Nullable<double> SFK_K, 
                    global::System.Nullable<double> SFK_D, 
                    global::System.Nullable<double> SHIFT_I_MVA, 
                    global::System.Nullable<double> SHIFT_O_ADX, 
                    global::System.Nullable<double> SHOWTIMETOEND_SHOWTIMETOEND, 
                    global::System.Nullable<double> SMMA_SMMA, 
                    global::System.Nullable<double> SSD_K, 
                    global::System.Nullable<double> SSD_D, 
                    global::System.Nullable<double> STOCHASTIC_K, 
                    global::System.Nullable<double> STOCHASTIC_D, 
                    global::System.Nullable<double> TMA_TMA, 
                    global::System.Nullable<double> TMACD_TMACD, 
                    global::System.Nullable<double> TSI_TSI, 
                    global::System.Nullable<double> VIDYA_V, 
                    global::System.Nullable<double> WMA_WMA, 
                    global::System.Nullable<double> ZIGZAG_Up, 
                    byte Original_通貨ペアNo, 
                    System.DateTime Original_日時, 
                    global::System.Nullable<double> Original_AC_AC, 
                    global::System.Nullable<double> Original_AD_AD, 
                    global::System.Nullable<double> Original_ADX_ADX, 
                    global::System.Nullable<double> Original_ALLIGATOR_Jaw, 
                    global::System.Nullable<double> Original_ALLIGATOR_Teeth, 
                    global::System.Nullable<double> Original_ALLIGATOR_Lips, 
                    global::System.Nullable<double> Original_AO_AO, 
                    global::System.Nullable<double> Original_AROON_UP, 
                    global::System.Nullable<double> Original_AROON_DOWN, 
                    global::System.Nullable<double> Original_ARSI_ARSI, 
                    global::System.Nullable<double> Original_ASI_ASI, 
                    global::System.Nullable<double> Original_ATR_ATR, 
                    global::System.Nullable<double> Original_BB_TL, 
                    global::System.Nullable<double> Original_BB_BL, 
                    global::System.Nullable<double> Original_BB_AL, 
                    global::System.Nullable<double> Original_CCI_CCI, 
                    global::System.Nullable<double> Original_CHO_CHO, 
                    global::System.Nullable<double> Original_CMF_CMF, 
                    global::System.Nullable<double> Original_CMO_CMO, 
                    global::System.Nullable<double> Original_買い_DMI_DI_plus, 
                    global::System.Nullable<double> Original_買い_DMI_DI_minus, 
                    global::System.Nullable<double> Original_売り_DMI_DI_plus, 
                    global::System.Nullable<double> Original_売り_DMI_DI_minus, 
                    global::System.Nullable<double> Original_EMA_EMA, 
                    global::System.Nullable<double> Original_EW_EW, 
                    global::System.Nullable<double> Original_EWN_EWN, 
                    global::System.Nullable<double> Original_EWO_EWO, 
                    global::System.Nullable<double> Original_FRACTAL_FRACTAL, 
                    global::System.Nullable<double> Original_GATOR_UP, 
                    global::System.Nullable<double> Original_GATOR_DN, 
                    global::System.Nullable<double> Original_HA_始値, 
                    global::System.Nullable<double> Original_HA_終値, 
                    global::System.Nullable<double> Original_HA_高値, 
                    global::System.Nullable<double> Original_HA_安値, 
                    global::System.Nullable<double> Original_ICH_TL, 
                    global::System.Nullable<double> Original_ICH_KL, 
                    global::System.Nullable<double> Original_ICH_CS, 
                    global::System.Nullable<double> Original_ICH_SA, 
                    global::System.Nullable<double> Original_ICH_SB, 
                    global::System.Nullable<double> Original_KAMA_KAMA, 
                    global::System.Nullable<double> Original_KRI_KRI, 
                    global::System.Nullable<double> Original_LWMA_LWMA, 
                    global::System.Nullable<double> Original_MACD_MACD, 
                    global::System.Nullable<double> Original_MACD_SIGNAL, 
                    global::System.Nullable<double> Original_MACD_HISTOGRAM, 
                    global::System.Nullable<double> Original_MAE_ME1, 
                    global::System.Nullable<double> Original_MAE_ME2, 
                    global::System.Nullable<double> Original_MD_MD, 
                    global::System.Nullable<double> Original_MVA_MVA, 
                    global::System.Nullable<double> Original_OSC_OSC, 
                    global::System.Nullable<double> Original_PIVOT_PIVOT, 
                    global::System.Nullable<double> Original_PPMA_PPMA, 
                    global::System.Nullable<double> Original_REGRESSION_REGRESSION, 
                    global::System.Nullable<double> Original_RLW_PercentR, 
                    global::System.Nullable<double> Original_ROC_ROC, 
                    global::System.Nullable<double> Original_RSI_RSI, 
                    global::System.Nullable<double> Original_SAR_UP, 
                    global::System.Nullable<double> Original_SAR_DN, 
                    global::System.Nullable<double> Original_SFK_K, 
                    global::System.Nullable<double> Original_SFK_D, 
                    global::System.Nullable<double> Original_SHIFT_I_MVA, 
                    global::System.Nullable<double> Original_SHIFT_O_ADX, 
                    global::System.Nullable<double> Original_SHOWTIMETOEND_SHOWTIMETOEND, 
                    global::System.Nullable<double> Original_SMMA_SMMA, 
                    global::System.Nullable<double> Original_SSD_K, 
                    global::System.Nullable<double> Original_SSD_D, 
                    global::System.Nullable<double> Original_STOCHASTIC_K, 
                    global::System.Nullable<double> Original_STOCHASTIC_D, 
                    global::System.Nullable<double> Original_TMA_TMA, 
                    global::System.Nullable<double> Original_TMACD_TMACD, 
                    global::System.Nullable<double> Original_TSI_TSI, 
                    global::System.Nullable<double> Original_VIDYA_V, 
                    global::System.Nullable<double> Original_WMA_WMA, 
                    global::System.Nullable<double> Original_ZIGZAG_Up) {
            return this.Update(Original_通貨ペアNo, Original_日時, AC_AC, AD_AD, ADX_ADX, ALLIGATOR_Jaw, ALLIGATOR_Teeth, ALLIGATOR_Lips, AO_AO, AROON_UP, AROON_DOWN, ARSI_ARSI, ASI_ASI, ATR_ATR, BB_TL, BB_BL, BB_AL, CCI_CCI, CHO_CHO, CMF_CMF, CMO_CMO, 買い_DMI_DI_plus, 買い_DMI_DI_minus, 売り_DMI_DI_plus, 売り_DMI_DI_minus, EMA_EMA, EW_EW, EWN_EWN, EWO_EWO, FRACTAL_FRACTAL, GATOR_UP, GATOR_DN, HA_始値, HA_終値, HA_高値, HA_安値, ICH_TL, ICH_KL, ICH_CS, ICH_SA, ICH_SB, KAMA_KAMA, KRI_KRI, LWMA_LWMA, MACD_MACD, MACD_SIGNAL, MACD_HISTOGRAM, MAE_ME1, MAE_ME2, MD_MD, MVA_MVA, OSC_OSC, PIVOT_PIVOT, PPMA_PPMA, REGRESSION_REGRESSION, RLW_PercentR, ROC_ROC, RSI_RSI, SAR_UP, SAR_DN, SFK_K, SFK_D, SHIFT_I_MVA, SHIFT_O_ADX, SHOWTIMETOEND_SHOWTIMETOEND, SMMA_SMMA, SSD_K, SSD_D, STOCHASTIC_K, STOCHASTIC_D, TMA_TMA, TMACD_TMACD, TSI_TSI, VIDYA_V, WMA_WMA, ZIGZAG_Up, Original_通貨ペアNo, Original_日時, Original_AC_AC, Original_AD_AD, Original_ADX_ADX, Original_ALLIGATOR_Jaw, Original_ALLIGATOR_Teeth, Original_ALLIGATOR_Lips, Original_AO_AO, Original_AROON_UP, Original_AROON_DOWN, Original_ARSI_ARSI, Original_ASI_ASI, Original_ATR_ATR, Original_BB_TL, Original_BB_BL, Original_BB_AL, Original_CCI_CCI, Original_CHO_CHO, Original_CMF_CMF, Original_CMO_CMO, Original_買い_DMI_DI_plus, Original_買い_DMI_DI_minus, Original_売り_DMI_DI_plus, Original_売り_DMI_DI_minus, Original_EMA_EMA, Original_EW_EW, Original_EWN_EWN, Original_EWO_EWO, Original_FRACTAL_FRACTAL, Original_GATOR_UP, Original_GATOR_DN, Original_HA_始値, Original_HA_終値, Original_HA_高値, Original_HA_安値, Original_ICH_TL, Original_ICH_KL, Original_ICH_CS, Original_ICH_SA, Original_ICH_SB, Original_KAMA_KAMA, Original_KRI_KRI, Original_LWMA_LWMA, Original_MACD_MACD, Original_MACD_SIGNAL, Original_MACD_HISTOGRAM, Original_MAE_ME1, Original_MAE_ME2, Original_MD_MD, Original_MVA_MVA, Original_OSC_OSC, Original_PIVOT_PIVOT, Original_PPMA_PPMA, Original_REGRESSION_REGRESSION, Original_RLW_PercentR, Original_ROC_ROC, Original_RSI_RSI, Original_SAR_UP, Original_SAR_DN, Original_SFK_K, Original_SFK_D, Original_SHIFT_I_MVA, Original_SHIFT_O_ADX, Original_SHOWTIMETOEND_SHOWTIMETOEND, Original_SMMA_SMMA, Original_SSD_K, Original_SSD_D, Original_STOCHASTIC_K, Original_STOCHASTIC_D, Original_TMA_TMA, Original_TMACD_TMACD, Original_TSI_TSI, Original_VIDYA_V, Original_WMA_WMA, Original_ZIGZAG_Up);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Delete, false)]
        public virtual int DeleteALL() {
            global::System.Data.SqlClient.SqlCommand command = this.CommandCollection[1];
            global::System.Data.ConnectionState previousConnectionState = command.Connection.State;
            if (((command.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                command.Connection.Open();
            }
            int returnValue;
            try {
                returnValue = command.ExecuteNonQuery();
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    command.Connection.Close();
                }
            }
            return returnValue;
        }
    }
    
    /// <summary>
    ///Represents the connection and commands used to retrieve and save data.
    ///</summary>
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.ComponentModel.DataObjectAttribute(true)]
    [global::System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner" +
        ", Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
    public partial class T_RateHistory_15mTableAdapter : global::System.ComponentModel.Component {
        
        private global::System.Data.SqlClient.SqlDataAdapter _adapter;
        
        private global::System.Data.SqlClient.SqlConnection _connection;
        
        private global::System.Data.SqlClient.SqlTransaction _transaction;
        
        private global::System.Data.SqlClient.SqlCommand[] _commandCollection;
        
        private bool _clearBeforeFill;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public T_RateHistory_15mTableAdapter() {
            this.ClearBeforeFill = true;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected internal global::System.Data.SqlClient.SqlDataAdapter Adapter {
            get {
                if ((this._adapter == null)) {
                    this.InitAdapter();
                }
                return this._adapter;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        internal global::System.Data.SqlClient.SqlConnection Connection {
            get {
                if ((this._connection == null)) {
                    this.InitConnection();
                }
                return this._connection;
            }
            set {
                this._connection = value;
                if ((this.Adapter.InsertCommand != null)) {
                    this.Adapter.InsertCommand.Connection = value;
                }
                if ((this.Adapter.DeleteCommand != null)) {
                    this.Adapter.DeleteCommand.Connection = value;
                }
                if ((this.Adapter.UpdateCommand != null)) {
                    this.Adapter.UpdateCommand.Connection = value;
                }
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    if ((this.CommandCollection[i] != null)) {
                        ((global::System.Data.SqlClient.SqlCommand)(this.CommandCollection[i])).Connection = value;
                    }
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        internal global::System.Data.SqlClient.SqlTransaction Transaction {
            get {
                return this._transaction;
            }
            set {
                this._transaction = value;
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    this.CommandCollection[i].Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.DeleteCommand != null))) {
                    this.Adapter.DeleteCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.InsertCommand != null))) {
                    this.Adapter.InsertCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.UpdateCommand != null))) {
                    this.Adapter.UpdateCommand.Transaction = this._transaction;
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected global::System.Data.SqlClient.SqlCommand[] CommandCollection {
            get {
                if ((this._commandCollection == null)) {
                    this.InitCommandCollection();
                }
                return this._commandCollection;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public bool ClearBeforeFill {
            get {
                return this._clearBeforeFill;
            }
            set {
                this._clearBeforeFill = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void InitAdapter() {
            this._adapter = new global::System.Data.SqlClient.SqlDataAdapter();
            global::System.Data.Common.DataTableMapping tableMapping = new global::System.Data.Common.DataTableMapping();
            tableMapping.SourceTable = "Table";
            tableMapping.DataSetTable = "T_RateHistory_15m";
            tableMapping.ColumnMappings.Add("通貨ペアNo", "通貨ペアNo");
            tableMapping.ColumnMappings.Add("日時", "日時");
            tableMapping.ColumnMappings.Add("買い_始値", "買い_始値");
            tableMapping.ColumnMappings.Add("買い_高値", "買い_高値");
            tableMapping.ColumnMappings.Add("買い_安値", "買い_安値");
            tableMapping.ColumnMappings.Add("買い_終値", "買い_終値");
            tableMapping.ColumnMappings.Add("売り_始値", "売り_始値");
            tableMapping.ColumnMappings.Add("売り_高値", "売り_高値");
            tableMapping.ColumnMappings.Add("売り_安値", "売り_安値");
            tableMapping.ColumnMappings.Add("売り_終値", "売り_終値");
            this._adapter.TableMappings.Add(tableMapping);
            this._adapter.DeleteCommand = new global::System.Data.SqlClient.SqlCommand();
            this._adapter.DeleteCommand.Connection = this.Connection;
            this._adapter.DeleteCommand.CommandText = @"DELETE FROM [smlt].[T_RateHistory_15m] WHERE (([通貨ペアNo] = @Original_通貨ペアNo) AND ([日時] = @Original_日時) AND ([買い_始値] = @Original_買い_始値) AND ([買い_高値] = @Original_買い_高値) AND ([買い_安値] = @Original_買い_安値) AND ([買い_終値] = @Original_買い_終値) AND ([売り_始値] = @Original_売り_始値) AND ([売り_高値] = @Original_売り_高値) AND ([売り_安値] = @Original_売り_安値) AND ([売り_終値] = @Original_売り_終値))";
            this._adapter.DeleteCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_通貨ペアNo", global::System.Data.SqlDbType.TinyInt, 0, global::System.Data.ParameterDirection.Input, 0, 0, "通貨ペアNo", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_日時", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "日時", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_買い_始値", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "買い_始値", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_買い_高値", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "買い_高値", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_買い_安値", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "買い_安値", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_買い_終値", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "買い_終値", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_売り_始値", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "売り_始値", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_売り_高値", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "売り_高値", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_売り_安値", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "売り_安値", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_売り_終値", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "売り_終値", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.InsertCommand = new global::System.Data.SqlClient.SqlCommand();
            this._adapter.InsertCommand.Connection = this.Connection;
            this._adapter.InsertCommand.CommandText = @"INSERT INTO [smlt].[T_RateHistory_15m] ([通貨ペアNo], [日時], [買い_始値], [買い_高値], [買い_安値], [買い_終値], [売り_始値], [売り_高値], [売り_安値], [売り_終値]) VALUES (@通貨ペアNo, @日時, @買い_始値, @買い_高値, @買い_安値, @買い_終値, @売り_始値, @売り_高値, @売り_安値, @売り_終値);
SELECT 通貨ペアNo, 日時, 買い_始値, 買い_高値, 買い_安値, 買い_終値, 売り_始値, 売り_高値, 売り_安値, 売り_終値 FROM smlt.T_RateHistory_15m WHERE (日時 = @日時) AND (通貨ペアNo = @通貨ペアNo)";
            this._adapter.InsertCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@通貨ペアNo", global::System.Data.SqlDbType.TinyInt, 0, global::System.Data.ParameterDirection.Input, 0, 0, "通貨ペアNo", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@日時", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "日時", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@買い_始値", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "買い_始値", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@買い_高値", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "買い_高値", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@買い_安値", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "買い_安値", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@買い_終値", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "買い_終値", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@売り_始値", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "売り_始値", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@売り_高値", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "売り_高値", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@売り_安値", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "売り_安値", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@売り_終値", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "売り_終値", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand = new global::System.Data.SqlClient.SqlCommand();
            this._adapter.UpdateCommand.Connection = this.Connection;
            this._adapter.UpdateCommand.CommandText = @"UPDATE [smlt].[T_RateHistory_15m] SET [通貨ペアNo] = @通貨ペアNo, [日時] = @日時, [買い_始値] = @買い_始値, [買い_高値] = @買い_高値, [買い_安値] = @買い_安値, [買い_終値] = @買い_終値, [売り_始値] = @売り_始値, [売り_高値] = @売り_高値, [売り_安値] = @売り_安値, [売り_終値] = @売り_終値 WHERE (([通貨ペアNo] = @Original_通貨ペアNo) AND ([日時] = @Original_日時) AND ([買い_始値] = @Original_買い_始値) AND ([買い_高値] = @Original_買い_高値) AND ([買い_安値] = @Original_買い_安値) AND ([買い_終値] = @Original_買い_終値) AND ([売り_始値] = @Original_売り_始値) AND ([売り_高値] = @Original_売り_高値) AND ([売り_安値] = @Original_売り_安値) AND ([売り_終値] = @Original_売り_終値));
SELECT 通貨ペアNo, 日時, 買い_始値, 買い_高値, 買い_安値, 買い_終値, 売り_始値, 売り_高値, 売り_安値, 売り_終値 FROM smlt.T_RateHistory_15m WHERE (日時 = @日時) AND (通貨ペアNo = @通貨ペアNo)";
            this._adapter.UpdateCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@通貨ペアNo", global::System.Data.SqlDbType.TinyInt, 0, global::System.Data.ParameterDirection.Input, 0, 0, "通貨ペアNo", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@日時", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "日時", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@買い_始値", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "買い_始値", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@買い_高値", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "買い_高値", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@買い_安値", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "買い_安値", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@買い_終値", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "買い_終値", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@売り_始値", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "売り_始値", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@売り_高値", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "売り_高値", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@売り_安値", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "売り_安値", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@売り_終値", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "売り_終値", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_通貨ペアNo", global::System.Data.SqlDbType.TinyInt, 0, global::System.Data.ParameterDirection.Input, 0, 0, "通貨ペアNo", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_日時", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "日時", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_買い_始値", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "買い_始値", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_買い_高値", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "買い_高値", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_買い_安値", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "買い_安値", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_買い_終値", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "買い_終値", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_売り_始値", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "売り_始値", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_売り_高値", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "売り_高値", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_売り_安値", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "売り_安値", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_売り_終値", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "売り_終値", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void InitConnection() {
            this._connection = new global::System.Data.SqlClient.SqlConnection();
            this._connection.ConnectionString = global::AutoFx_Form.Properties.Settings.Default.FXConnectionString;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void InitCommandCollection() {
            this._commandCollection = new global::System.Data.SqlClient.SqlCommand[3];
            this._commandCollection[0] = new global::System.Data.SqlClient.SqlCommand();
            this._commandCollection[0].Connection = this.Connection;
            this._commandCollection[0].CommandText = "SELECT            smlt.T_RateHistory_15m.*\r\nFROM              smlt.T_RateHistory_" +
                "15m";
            this._commandCollection[0].CommandType = global::System.Data.CommandType.Text;
            this._commandCollection[1] = new global::System.Data.SqlClient.SqlCommand();
            this._commandCollection[1].Connection = this.Connection;
            this._commandCollection[1].CommandText = "DELETE FROM [smlt].[T_RateHistory_15m] ";
            this._commandCollection[1].CommandType = global::System.Data.CommandType.Text;
            this._commandCollection[2] = new global::System.Data.SqlClient.SqlCommand();
            this._commandCollection[2].Connection = this.Connection;
            this._commandCollection[2].CommandText = "SELECT\r\n\tsmlt.T_RateHistory_15m.*\r\nFROM\r\n\tsmlt.T_RateHistory_15m\r\nWHERE\r\n\t(通貨ペアNo" +
                " = @通貨ペアNo) and\r\n\t(@StartDate < 日時 and 日時 < @EndDate)\r\nORDER BY\r\n\t日時\r\n\r\n\r\n";
            this._commandCollection[2].CommandType = global::System.Data.CommandType.Text;
            this._commandCollection[2].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@通貨ペアNo", global::System.Data.SqlDbType.TinyInt, 1, global::System.Data.ParameterDirection.Input, 0, 0, "通貨ペアNo", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[2].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@StartDate", global::System.Data.SqlDbType.DateTime, 8, global::System.Data.ParameterDirection.Input, 0, 0, "日時", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[2].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@EndDate", global::System.Data.SqlDbType.DateTime, 8, global::System.Data.ParameterDirection.Input, 0, 0, "日時", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Fill, true)]
        public virtual int Fill(DFX_smlt.T_RateHistory_15mDataTable dataTable) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, true)]
        public virtual DFX_smlt.T_RateHistory_15mDataTable GetData() {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            DFX_smlt.T_RateHistory_15mDataTable dataTable = new DFX_smlt.T_RateHistory_15mDataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Fill, false)]
        public virtual int FillBy通貨ペアNo期間(DFX_smlt.T_RateHistory_15mDataTable dataTable, byte 通貨ペアNo, System.DateTime StartDate, System.DateTime EndDate) {
            this.Adapter.SelectCommand = this.CommandCollection[2];
            this.Adapter.SelectCommand.Parameters[0].Value = ((byte)(通貨ペアNo));
            this.Adapter.SelectCommand.Parameters[1].Value = ((System.DateTime)(StartDate));
            this.Adapter.SelectCommand.Parameters[2].Value = ((System.DateTime)(EndDate));
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, false)]
        public virtual DFX_smlt.T_RateHistory_15mDataTable GetDataBy1(byte 通貨ペアNo, System.DateTime StartDate, System.DateTime EndDate) {
            this.Adapter.SelectCommand = this.CommandCollection[2];
            this.Adapter.SelectCommand.Parameters[0].Value = ((byte)(通貨ペアNo));
            this.Adapter.SelectCommand.Parameters[1].Value = ((System.DateTime)(StartDate));
            this.Adapter.SelectCommand.Parameters[2].Value = ((System.DateTime)(EndDate));
            DFX_smlt.T_RateHistory_15mDataTable dataTable = new DFX_smlt.T_RateHistory_15mDataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(DFX_smlt.T_RateHistory_15mDataTable dataTable) {
            return this.Adapter.Update(dataTable);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(DFX_smlt dataSet) {
            return this.Adapter.Update(dataSet, "T_RateHistory_15m");
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow dataRow) {
            return this.Adapter.Update(new global::System.Data.DataRow[] {
                        dataRow});
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow[] dataRows) {
            return this.Adapter.Update(dataRows);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Delete, true)]
        public virtual int Delete(byte Original_通貨ペアNo, System.DateTime Original_日時, double Original_買い_始値, double Original_買い_高値, double Original_買い_安値, double Original_買い_終値, double Original_売り_始値, double Original_売り_高値, double Original_売り_安値, double Original_売り_終値) {
            this.Adapter.DeleteCommand.Parameters[0].Value = ((byte)(Original_通貨ペアNo));
            this.Adapter.DeleteCommand.Parameters[1].Value = ((System.DateTime)(Original_日時));
            this.Adapter.DeleteCommand.Parameters[2].Value = ((double)(Original_買い_始値));
            this.Adapter.DeleteCommand.Parameters[3].Value = ((double)(Original_買い_高値));
            this.Adapter.DeleteCommand.Parameters[4].Value = ((double)(Original_買い_安値));
            this.Adapter.DeleteCommand.Parameters[5].Value = ((double)(Original_買い_終値));
            this.Adapter.DeleteCommand.Parameters[6].Value = ((double)(Original_売り_始値));
            this.Adapter.DeleteCommand.Parameters[7].Value = ((double)(Original_売り_高値));
            this.Adapter.DeleteCommand.Parameters[8].Value = ((double)(Original_売り_安値));
            this.Adapter.DeleteCommand.Parameters[9].Value = ((double)(Original_売り_終値));
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.DeleteCommand.Connection.State;
            if (((this.Adapter.DeleteCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.DeleteCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.DeleteCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.DeleteCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Insert, true)]
        public virtual int Insert(byte 通貨ペアNo, System.DateTime 日時, double 買い_始値, double 買い_高値, double 買い_安値, double 買い_終値, double 売り_始値, double 売り_高値, double 売り_安値, double 売り_終値) {
            this.Adapter.InsertCommand.Parameters[0].Value = ((byte)(通貨ペアNo));
            this.Adapter.InsertCommand.Parameters[1].Value = ((System.DateTime)(日時));
            this.Adapter.InsertCommand.Parameters[2].Value = ((double)(買い_始値));
            this.Adapter.InsertCommand.Parameters[3].Value = ((double)(買い_高値));
            this.Adapter.InsertCommand.Parameters[4].Value = ((double)(買い_安値));
            this.Adapter.InsertCommand.Parameters[5].Value = ((double)(買い_終値));
            this.Adapter.InsertCommand.Parameters[6].Value = ((double)(売り_始値));
            this.Adapter.InsertCommand.Parameters[7].Value = ((double)(売り_高値));
            this.Adapter.InsertCommand.Parameters[8].Value = ((double)(売り_安値));
            this.Adapter.InsertCommand.Parameters[9].Value = ((double)(売り_終値));
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.InsertCommand.Connection.State;
            if (((this.Adapter.InsertCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.InsertCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.InsertCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.InsertCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Update, true)]
        public virtual int Update(
                    byte 通貨ペアNo, 
                    System.DateTime 日時, 
                    double 買い_始値, 
                    double 買い_高値, 
                    double 買い_安値, 
                    double 買い_終値, 
                    double 売り_始値, 
                    double 売り_高値, 
                    double 売り_安値, 
                    double 売り_終値, 
                    byte Original_通貨ペアNo, 
                    System.DateTime Original_日時, 
                    double Original_買い_始値, 
                    double Original_買い_高値, 
                    double Original_買い_安値, 
                    double Original_買い_終値, 
                    double Original_売り_始値, 
                    double Original_売り_高値, 
                    double Original_売り_安値, 
                    double Original_売り_終値) {
            this.Adapter.UpdateCommand.Parameters[0].Value = ((byte)(通貨ペアNo));
            this.Adapter.UpdateCommand.Parameters[1].Value = ((System.DateTime)(日時));
            this.Adapter.UpdateCommand.Parameters[2].Value = ((double)(買い_始値));
            this.Adapter.UpdateCommand.Parameters[3].Value = ((double)(買い_高値));
            this.Adapter.UpdateCommand.Parameters[4].Value = ((double)(買い_安値));
            this.Adapter.UpdateCommand.Parameters[5].Value = ((double)(買い_終値));
            this.Adapter.UpdateCommand.Parameters[6].Value = ((double)(売り_始値));
            this.Adapter.UpdateCommand.Parameters[7].Value = ((double)(売り_高値));
            this.Adapter.UpdateCommand.Parameters[8].Value = ((double)(売り_安値));
            this.Adapter.UpdateCommand.Parameters[9].Value = ((double)(売り_終値));
            this.Adapter.UpdateCommand.Parameters[10].Value = ((byte)(Original_通貨ペアNo));
            this.Adapter.UpdateCommand.Parameters[11].Value = ((System.DateTime)(Original_日時));
            this.Adapter.UpdateCommand.Parameters[12].Value = ((double)(Original_買い_始値));
            this.Adapter.UpdateCommand.Parameters[13].Value = ((double)(Original_買い_高値));
            this.Adapter.UpdateCommand.Parameters[14].Value = ((double)(Original_買い_安値));
            this.Adapter.UpdateCommand.Parameters[15].Value = ((double)(Original_買い_終値));
            this.Adapter.UpdateCommand.Parameters[16].Value = ((double)(Original_売り_始値));
            this.Adapter.UpdateCommand.Parameters[17].Value = ((double)(Original_売り_高値));
            this.Adapter.UpdateCommand.Parameters[18].Value = ((double)(Original_売り_安値));
            this.Adapter.UpdateCommand.Parameters[19].Value = ((double)(Original_売り_終値));
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.UpdateCommand.Connection.State;
            if (((this.Adapter.UpdateCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.UpdateCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.UpdateCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.UpdateCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Update, true)]
        public virtual int Update(
                    double 買い_始値, 
                    double 買い_高値, 
                    double 買い_安値, 
                    double 買い_終値, 
                    double 売り_始値, 
                    double 売り_高値, 
                    double 売り_安値, 
                    double 売り_終値, 
                    byte Original_通貨ペアNo, 
                    System.DateTime Original_日時, 
                    double Original_買い_始値, 
                    double Original_買い_高値, 
                    double Original_買い_安値, 
                    double Original_買い_終値, 
                    double Original_売り_始値, 
                    double Original_売り_高値, 
                    double Original_売り_安値, 
                    double Original_売り_終値) {
            return this.Update(Original_通貨ペアNo, Original_日時, 買い_始値, 買い_高値, 買い_安値, 買い_終値, 売り_始値, 売り_高値, 売り_安値, 売り_終値, Original_通貨ペアNo, Original_日時, Original_買い_始値, Original_買い_高値, Original_買い_安値, Original_買い_終値, Original_売り_始値, Original_売り_高値, Original_売り_安値, Original_売り_終値);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Delete, false)]
        public virtual int DeleteALL() {
            global::System.Data.SqlClient.SqlCommand command = this.CommandCollection[1];
            global::System.Data.ConnectionState previousConnectionState = command.Connection.State;
            if (((command.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                command.Connection.Open();
            }
            int returnValue;
            try {
                returnValue = command.ExecuteNonQuery();
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    command.Connection.Close();
                }
            }
            return returnValue;
        }
    }
    
    /// <summary>
    ///Represents the connection and commands used to retrieve and save data.
    ///</summary>
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.ComponentModel.DataObjectAttribute(true)]
    [global::System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner" +
        ", Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
    public partial class T_Order判定HistoryTableAdapter : global::System.ComponentModel.Component {
        
        private global::System.Data.SqlClient.SqlDataAdapter _adapter;
        
        private global::System.Data.SqlClient.SqlConnection _connection;
        
        private global::System.Data.SqlClient.SqlTransaction _transaction;
        
        private global::System.Data.SqlClient.SqlCommand[] _commandCollection;
        
        private bool _clearBeforeFill;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public T_Order判定HistoryTableAdapter() {
            this.ClearBeforeFill = true;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected internal global::System.Data.SqlClient.SqlDataAdapter Adapter {
            get {
                if ((this._adapter == null)) {
                    this.InitAdapter();
                }
                return this._adapter;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        internal global::System.Data.SqlClient.SqlConnection Connection {
            get {
                if ((this._connection == null)) {
                    this.InitConnection();
                }
                return this._connection;
            }
            set {
                this._connection = value;
                if ((this.Adapter.InsertCommand != null)) {
                    this.Adapter.InsertCommand.Connection = value;
                }
                if ((this.Adapter.DeleteCommand != null)) {
                    this.Adapter.DeleteCommand.Connection = value;
                }
                if ((this.Adapter.UpdateCommand != null)) {
                    this.Adapter.UpdateCommand.Connection = value;
                }
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    if ((this.CommandCollection[i] != null)) {
                        ((global::System.Data.SqlClient.SqlCommand)(this.CommandCollection[i])).Connection = value;
                    }
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        internal global::System.Data.SqlClient.SqlTransaction Transaction {
            get {
                return this._transaction;
            }
            set {
                this._transaction = value;
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    this.CommandCollection[i].Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.DeleteCommand != null))) {
                    this.Adapter.DeleteCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.InsertCommand != null))) {
                    this.Adapter.InsertCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.UpdateCommand != null))) {
                    this.Adapter.UpdateCommand.Transaction = this._transaction;
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected global::System.Data.SqlClient.SqlCommand[] CommandCollection {
            get {
                if ((this._commandCollection == null)) {
                    this.InitCommandCollection();
                }
                return this._commandCollection;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public bool ClearBeforeFill {
            get {
                return this._clearBeforeFill;
            }
            set {
                this._clearBeforeFill = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void InitAdapter() {
            this._adapter = new global::System.Data.SqlClient.SqlDataAdapter();
            global::System.Data.Common.DataTableMapping tableMapping = new global::System.Data.Common.DataTableMapping();
            tableMapping.SourceTable = "Table";
            tableMapping.DataSetTable = "T_Order判定History";
            tableMapping.ColumnMappings.Add("通貨ペアNo", "通貨ペアNo");
            tableMapping.ColumnMappings.Add("日時", "日時");
            tableMapping.ColumnMappings.Add("処理位置", "処理位置");
            tableMapping.ColumnMappings.Add("買いRate", "買いRate");
            tableMapping.ColumnMappings.Add("売りRate", "売りRate");
            tableMapping.ColumnMappings.Add("OrderEntryRate", "OrderEntryRate");
            tableMapping.ColumnMappings.Add("Limit", "Limit");
            tableMapping.ColumnMappings.Add("危険Rate", "危険Rate");
            tableMapping.ColumnMappings.Add("処理位置_補足", "処理位置_補足");
            tableMapping.ColumnMappings.Add("取引状況", "取引状況");
            tableMapping.ColumnMappings.Add("注文設定_モード", "注文設定_モード");
            tableMapping.ColumnMappings.Add("買売モード_15m", "買売モード_15m");
            tableMapping.ColumnMappings.Add("買売モード_Daily", "買売モード_Daily");
            tableMapping.ColumnMappings.Add("成行をスキップ", "成行をスキップ");
            tableMapping.ColumnMappings.Add("ポジション有り", "ポジション有り");
            tableMapping.ColumnMappings.Add("ボーナスステージ判定", "ボーナスステージ判定");
            tableMapping.ColumnMappings.Add("ADX上昇判定_15m", "ADX上昇判定_15m");
            tableMapping.ColumnMappings.Add("ASI買い気配", "ASI買い気配");
            tableMapping.ColumnMappings.Add("DMIplusDI上昇判定", "DMIplusDI上昇判定");
            this._adapter.TableMappings.Add(tableMapping);
            this._adapter.DeleteCommand = new global::System.Data.SqlClient.SqlCommand();
            this._adapter.DeleteCommand.Connection = this.Connection;
            this._adapter.DeleteCommand.CommandText = "DELETE FROM [smlt].[T_Order判定History] WHERE (([通貨ペアNo] = @Original_通貨ペアNo) AND ([" +
                "日時] = @Original_日時) AND ([処理位置] = @Original_処理位置) AND ((@IsNull_買いRate = 1 AND [" +
                "買いRate] IS NULL) OR ([買いRate] = @Original_買いRate)) AND ((@IsNull_売りRate = 1 AND " +
                "[売りRate] IS NULL) OR ([売りRate] = @Original_売りRate)) AND ((@IsNull_OrderEntryRate" +
                " = 1 AND [OrderEntryRate] IS NULL) OR ([OrderEntryRate] = @Original_OrderEntryRa" +
                "te)) AND ((@IsNull_Limit = 1 AND [Limit] IS NULL) OR ([Limit] = @Original_Limit)" +
                ") AND ((@IsNull_危険Rate = 1 AND [危険Rate] IS NULL) OR ([危険Rate] = @Original_危険Rate" +
                ")) AND ((@IsNull_処理位置_補足 = 1 AND [処理位置_補足] IS NULL) OR ([処理位置_補足] = @Original_処理" +
                "位置_補足)) AND ((@IsNull_取引状況 = 1 AND [取引状況] IS NULL) OR ([取引状況] = @Original_取引状況))" +
                " AND ((@IsNull_注文設定_モード = 1 AND [注文設定_モード] IS NULL) OR ([注文設定_モード] = @Original_注" +
                "文設定_モード)) AND ((@IsNull_買売モード_15m = 1 AND [買売モード_15m] IS NULL) OR ([買売モード_15m] =" +
                " @Original_買売モード_15m)) AND ((@IsNull_買売モード_Daily = 1 AND [買売モード_Daily] IS NULL) " +
                "OR ([買売モード_Daily] = @Original_買売モード_Daily)) AND ((@IsNull_成行をスキップ = 1 AND [成行をスキ" +
                "ップ] IS NULL) OR ([成行をスキップ] = @Original_成行をスキップ)) AND ((@IsNull_ポジション有り = 1 AND [" +
                "ポジション有り] IS NULL) OR ([ポジション有り] = @Original_ポジション有り)) AND ((@IsNull_ボーナスステージ判定 =" +
                " 1 AND [ボーナスステージ判定] IS NULL) OR ([ボーナスステージ判定] = @Original_ボーナスステージ判定)) AND ((@Is" +
                "Null_ADX上昇判定_15m = 1 AND [ADX上昇判定_15m] IS NULL) OR ([ADX上昇判定_15m] = @Original_AD" +
                "X上昇判定_15m)) AND ((@IsNull_ASI買い気配 = 1 AND [ASI買い気配] IS NULL) OR ([ASI買い気配] = @Or" +
                "iginal_ASI買い気配)) AND ((@IsNull_DMIplusDI上昇判定 = 1 AND [DMIplusDI上昇判定] IS NULL) OR" +
                " ([DMIplusDI上昇判定] = @Original_DMIplusDI上昇判定)))";
            this._adapter.DeleteCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_通貨ペアNo", global::System.Data.SqlDbType.TinyInt, 0, global::System.Data.ParameterDirection.Input, 0, 0, "通貨ペアNo", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_日時", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "日時", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_処理位置", global::System.Data.SqlDbType.TinyInt, 0, global::System.Data.ParameterDirection.Input, 0, 0, "処理位置", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_買いRate", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "買いRate", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_買いRate", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "買いRate", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_売りRate", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "売りRate", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_売りRate", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "売りRate", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_OrderEntryRate", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "OrderEntryRate", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_OrderEntryRate", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "OrderEntryRate", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_Limit", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Limit", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Limit", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Limit", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_危険Rate", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "危険Rate", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_危険Rate", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "危険Rate", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_処理位置_補足", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "処理位置_補足", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_処理位置_補足", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "処理位置_補足", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_取引状況", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "取引状況", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_取引状況", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "取引状況", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_注文設定_モード", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "注文設定_モード", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_注文設定_モード", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "注文設定_モード", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_買売モード_15m", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "買売モード_15m", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_買売モード_15m", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "買売モード_15m", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_買売モード_Daily", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "買売モード_Daily", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_買売モード_Daily", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "買売モード_Daily", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_成行をスキップ", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "成行をスキップ", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_成行をスキップ", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "成行をスキップ", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_ポジション有り", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ポジション有り", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_ポジション有り", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ポジション有り", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_ボーナスステージ判定", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ボーナスステージ判定", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_ボーナスステージ判定", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ボーナスステージ判定", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_ADX上昇判定_15m", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ADX上昇判定_15m", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_ADX上昇判定_15m", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ADX上昇判定_15m", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_ASI買い気配", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ASI買い気配", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_ASI買い気配", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ASI買い気配", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_DMIplusDI上昇判定", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "DMIplusDI上昇判定", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_DMIplusDI上昇判定", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "DMIplusDI上昇判定", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.InsertCommand = new global::System.Data.SqlClient.SqlCommand();
            this._adapter.InsertCommand.Connection = this.Connection;
            this._adapter.InsertCommand.CommandText = @"INSERT INTO [smlt].[T_Order判定History] ([通貨ペアNo], [日時], [処理位置], [買いRate], [売りRate], [OrderEntryRate], [Limit], [危険Rate], [処理位置_補足], [取引状況], [注文設定_モード], [買売モード_15m], [買売モード_Daily], [成行をスキップ], [ポジション有り], [ボーナスステージ判定], [ADX上昇判定_15m], [ASI買い気配], [DMIplusDI上昇判定]) VALUES (@通貨ペアNo, @日時, @処理位置, @買いRate, @売りRate, @OrderEntryRate, @Limit, @危険Rate, @処理位置_補足, @取引状況, @注文設定_モード, @買売モード_15m, @買売モード_Daily, @成行をスキップ, @ポジション有り, @ボーナスステージ判定, @ADX上昇判定_15m, @ASI買い気配, @DMIplusDI上昇判定);
SELECT 通貨ペアNo, 日時, 処理位置, 買いRate, 売りRate, OrderEntryRate, Limit, 危険Rate, 処理位置_補足, 取引状況, 注文設定_モード, 買売モード_15m, 買売モード_Daily, 成行をスキップ, ポジション有り, ボーナスステージ判定, ADX上昇判定_15m, ASI買い気配, DMIplusDI上昇判定 FROM smlt.T_Order判定History WHERE (処理位置 = @処理位置) AND (日時 = @日時) AND (通貨ペアNo = @通貨ペアNo)";
            this._adapter.InsertCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@通貨ペアNo", global::System.Data.SqlDbType.TinyInt, 0, global::System.Data.ParameterDirection.Input, 0, 0, "通貨ペアNo", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@日時", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "日時", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@処理位置", global::System.Data.SqlDbType.TinyInt, 0, global::System.Data.ParameterDirection.Input, 0, 0, "処理位置", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@買いRate", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "買いRate", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@売りRate", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "売りRate", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@OrderEntryRate", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "OrderEntryRate", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Limit", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Limit", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@危険Rate", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "危険Rate", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@処理位置_補足", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "処理位置_補足", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@取引状況", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "取引状況", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@注文設定_モード", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "注文設定_モード", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@買売モード_15m", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "買売モード_15m", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@買売モード_Daily", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "買売モード_Daily", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@成行をスキップ", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "成行をスキップ", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ポジション有り", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ポジション有り", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ボーナスステージ判定", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ボーナスステージ判定", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ADX上昇判定_15m", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ADX上昇判定_15m", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ASI買い気配", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ASI買い気配", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@DMIplusDI上昇判定", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "DMIplusDI上昇判定", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand = new global::System.Data.SqlClient.SqlCommand();
            this._adapter.UpdateCommand.Connection = this.Connection;
            this._adapter.UpdateCommand.CommandText = "UPDATE [smlt].[T_Order判定History] SET [通貨ペアNo] = @通貨ペアNo, [日時] = @日時, [処理位置] = @処理" +
                "位置, [買いRate] = @買いRate, [売りRate] = @売りRate, [OrderEntryRate] = @OrderEntryRate, " +
                "[Limit] = @Limit, [危険Rate] = @危険Rate, [処理位置_補足] = @処理位置_補足, [取引状況] = @取引状況, [注文設" +
                "定_モード] = @注文設定_モード, [買売モード_15m] = @買売モード_15m, [買売モード_Daily] = @買売モード_Daily, [成行を" +
                "スキップ] = @成行をスキップ, [ポジション有り] = @ポジション有り, [ボーナスステージ判定] = @ボーナスステージ判定, [ADX上昇判定_15m" +
                "] = @ADX上昇判定_15m, [ASI買い気配] = @ASI買い気配, [DMIplusDI上昇判定] = @DMIplusDI上昇判定 WHERE (" +
                "([通貨ペアNo] = @Original_通貨ペアNo) AND ([日時] = @Original_日時) AND ([処理位置] = @Original_" +
                "処理位置) AND ((@IsNull_買いRate = 1 AND [買いRate] IS NULL) OR ([買いRate] = @Original_買い" +
                "Rate)) AND ((@IsNull_売りRate = 1 AND [売りRate] IS NULL) OR ([売りRate] = @Original_売" +
                "りRate)) AND ((@IsNull_OrderEntryRate = 1 AND [OrderEntryRate] IS NULL) OR ([Orde" +
                "rEntryRate] = @Original_OrderEntryRate)) AND ((@IsNull_Limit = 1 AND [Limit] IS " +
                "NULL) OR ([Limit] = @Original_Limit)) AND ((@IsNull_危険Rate = 1 AND [危険Rate] IS N" +
                "ULL) OR ([危険Rate] = @Original_危険Rate)) AND ((@IsNull_処理位置_補足 = 1 AND [処理位置_補足] I" +
                "S NULL) OR ([処理位置_補足] = @Original_処理位置_補足)) AND ((@IsNull_取引状況 = 1 AND [取引状況] IS" +
                " NULL) OR ([取引状況] = @Original_取引状況)) AND ((@IsNull_注文設定_モード = 1 AND [注文設定_モード] I" +
                "S NULL) OR ([注文設定_モード] = @Original_注文設定_モード)) AND ((@IsNull_買売モード_15m = 1 AND [買" +
                "売モード_15m] IS NULL) OR ([買売モード_15m] = @Original_買売モード_15m)) AND ((@IsNull_買売モード_D" +
                "aily = 1 AND [買売モード_Daily] IS NULL) OR ([買売モード_Daily] = @Original_買売モード_Daily)) " +
                "AND ((@IsNull_成行をスキップ = 1 AND [成行をスキップ] IS NULL) OR ([成行をスキップ] = @Original_成行をスキ" +
                "ップ)) AND ((@IsNull_ポジション有り = 1 AND [ポジション有り] IS NULL) OR ([ポジション有り] = @Original_" +
                "ポジション有り)) AND ((@IsNull_ボーナスステージ判定 = 1 AND [ボーナスステージ判定] IS NULL) OR ([ボーナスステージ判定" +
                "] = @Original_ボーナスステージ判定)) AND ((@IsNull_ADX上昇判定_15m = 1 AND [ADX上昇判定_15m] IS NU" +
                "LL) OR ([ADX上昇判定_15m] = @Original_ADX上昇判定_15m)) AND ((@IsNull_ASI買い気配 = 1 AND [A" +
                "SI買い気配] IS NULL) OR ([ASI買い気配] = @Original_ASI買い気配)) AND ((@IsNull_DMIplusDI上昇判定" +
                " = 1 AND [DMIplusDI上昇判定] IS NULL) OR ([DMIplusDI上昇判定] = @Original_DMIplusDI上昇判定)" +
                "));\r\nSELECT 通貨ペアNo, 日時, 処理位置, 買いRate, 売りRate, OrderEntryRate, Limit, 危険Rate, 処理位" +
                "置_補足, 取引状況, 注文設定_モード, 買売モード_15m, 買売モード_Daily, 成行をスキップ, ポジション有り, ボーナスステージ判定, ADX上" +
                "昇判定_15m, ASI買い気配, DMIplusDI上昇判定 FROM smlt.T_Order判定History WHERE (処理位置 = @処理位置) " +
                "AND (日時 = @日時) AND (通貨ペアNo = @通貨ペアNo)";
            this._adapter.UpdateCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@通貨ペアNo", global::System.Data.SqlDbType.TinyInt, 0, global::System.Data.ParameterDirection.Input, 0, 0, "通貨ペアNo", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@日時", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "日時", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@処理位置", global::System.Data.SqlDbType.TinyInt, 0, global::System.Data.ParameterDirection.Input, 0, 0, "処理位置", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@買いRate", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "買いRate", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@売りRate", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "売りRate", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@OrderEntryRate", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "OrderEntryRate", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Limit", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Limit", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@危険Rate", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "危険Rate", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@処理位置_補足", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "処理位置_補足", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@取引状況", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "取引状況", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@注文設定_モード", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "注文設定_モード", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@買売モード_15m", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "買売モード_15m", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@買売モード_Daily", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "買売モード_Daily", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@成行をスキップ", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "成行をスキップ", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ポジション有り", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ポジション有り", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ボーナスステージ判定", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ボーナスステージ判定", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ADX上昇判定_15m", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ADX上昇判定_15m", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ASI買い気配", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ASI買い気配", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@DMIplusDI上昇判定", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "DMIplusDI上昇判定", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_通貨ペアNo", global::System.Data.SqlDbType.TinyInt, 0, global::System.Data.ParameterDirection.Input, 0, 0, "通貨ペアNo", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_日時", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "日時", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_処理位置", global::System.Data.SqlDbType.TinyInt, 0, global::System.Data.ParameterDirection.Input, 0, 0, "処理位置", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_買いRate", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "買いRate", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_買いRate", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "買いRate", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_売りRate", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "売りRate", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_売りRate", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "売りRate", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_OrderEntryRate", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "OrderEntryRate", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_OrderEntryRate", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "OrderEntryRate", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_Limit", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Limit", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Limit", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Limit", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_危険Rate", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "危険Rate", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_危険Rate", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "危険Rate", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_処理位置_補足", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "処理位置_補足", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_処理位置_補足", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "処理位置_補足", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_取引状況", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "取引状況", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_取引状況", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "取引状況", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_注文設定_モード", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "注文設定_モード", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_注文設定_モード", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "注文設定_モード", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_買売モード_15m", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "買売モード_15m", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_買売モード_15m", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "買売モード_15m", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_買売モード_Daily", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "買売モード_Daily", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_買売モード_Daily", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "買売モード_Daily", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_成行をスキップ", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "成行をスキップ", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_成行をスキップ", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "成行をスキップ", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_ポジション有り", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ポジション有り", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_ポジション有り", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ポジション有り", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_ボーナスステージ判定", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ボーナスステージ判定", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_ボーナスステージ判定", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ボーナスステージ判定", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_ADX上昇判定_15m", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ADX上昇判定_15m", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_ADX上昇判定_15m", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ADX上昇判定_15m", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_ASI買い気配", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ASI買い気配", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_ASI買い気配", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ASI買い気配", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_DMIplusDI上昇判定", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "DMIplusDI上昇判定", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_DMIplusDI上昇判定", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "DMIplusDI上昇判定", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void InitConnection() {
            this._connection = new global::System.Data.SqlClient.SqlConnection();
            this._connection.ConnectionString = global::AutoFx_Form.Properties.Settings.Default.FXConnectionString;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void InitCommandCollection() {
            this._commandCollection = new global::System.Data.SqlClient.SqlCommand[2];
            this._commandCollection[0] = new global::System.Data.SqlClient.SqlCommand();
            this._commandCollection[0].Connection = this.Connection;
            this._commandCollection[0].CommandText = "SELECT            smlt.T_Order判定History.*\r\nFROM              smlt.T_Order判定Histor" +
                "y";
            this._commandCollection[0].CommandType = global::System.Data.CommandType.Text;
            this._commandCollection[1] = new global::System.Data.SqlClient.SqlCommand();
            this._commandCollection[1].Connection = this.Connection;
            this._commandCollection[1].CommandText = "DELETE FROM [smlt].[T_Order判定History] ";
            this._commandCollection[1].CommandType = global::System.Data.CommandType.Text;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Fill, true)]
        public virtual int Fill(DFX_smlt.T_Order判定HistoryDataTable dataTable) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, true)]
        public virtual DFX_smlt.T_Order判定HistoryDataTable GetData() {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            DFX_smlt.T_Order判定HistoryDataTable dataTable = new DFX_smlt.T_Order判定HistoryDataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(DFX_smlt.T_Order判定HistoryDataTable dataTable) {
            return this.Adapter.Update(dataTable);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(DFX_smlt dataSet) {
            return this.Adapter.Update(dataSet, "T_Order判定History");
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow dataRow) {
            return this.Adapter.Update(new global::System.Data.DataRow[] {
                        dataRow});
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow[] dataRows) {
            return this.Adapter.Update(dataRows);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Delete, true)]
        public virtual int Delete(
                    byte Original_通貨ペアNo, 
                    System.DateTime Original_日時, 
                    byte Original_処理位置, 
                    global::System.Nullable<double> Original_買いRate, 
                    global::System.Nullable<double> Original_売りRate, 
                    global::System.Nullable<double> Original_OrderEntryRate, 
                    global::System.Nullable<double> Original_Limit, 
                    global::System.Nullable<double> Original_危険Rate, 
                    string Original_処理位置_補足, 
                    string Original_取引状況, 
                    string Original_注文設定_モード, 
                    string Original_買売モード_15m, 
                    string Original_買売モード_Daily, 
                    string Original_成行をスキップ, 
                    string Original_ポジション有り, 
                    string Original_ボーナスステージ判定, 
                    string Original_ADX上昇判定_15m, 
                    string Original_ASI買い気配, 
                    string Original_DMIplusDI上昇判定) {
            this.Adapter.DeleteCommand.Parameters[0].Value = ((byte)(Original_通貨ペアNo));
            this.Adapter.DeleteCommand.Parameters[1].Value = ((System.DateTime)(Original_日時));
            this.Adapter.DeleteCommand.Parameters[2].Value = ((byte)(Original_処理位置));
            if ((Original_買いRate.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[3].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[4].Value = ((double)(Original_買いRate.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[3].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[4].Value = global::System.DBNull.Value;
            }
            if ((Original_売りRate.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[5].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[6].Value = ((double)(Original_売りRate.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[5].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[6].Value = global::System.DBNull.Value;
            }
            if ((Original_OrderEntryRate.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[7].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[8].Value = ((double)(Original_OrderEntryRate.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[7].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[8].Value = global::System.DBNull.Value;
            }
            if ((Original_Limit.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[9].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[10].Value = ((double)(Original_Limit.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[9].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[10].Value = global::System.DBNull.Value;
            }
            if ((Original_危険Rate.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[11].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[12].Value = ((double)(Original_危険Rate.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[11].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[12].Value = global::System.DBNull.Value;
            }
            if ((Original_処理位置_補足 == null)) {
                this.Adapter.DeleteCommand.Parameters[13].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[14].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[13].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[14].Value = ((string)(Original_処理位置_補足));
            }
            if ((Original_取引状況 == null)) {
                this.Adapter.DeleteCommand.Parameters[15].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[16].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[15].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[16].Value = ((string)(Original_取引状況));
            }
            if ((Original_注文設定_モード == null)) {
                this.Adapter.DeleteCommand.Parameters[17].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[18].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[17].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[18].Value = ((string)(Original_注文設定_モード));
            }
            if ((Original_買売モード_15m == null)) {
                this.Adapter.DeleteCommand.Parameters[19].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[20].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[19].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[20].Value = ((string)(Original_買売モード_15m));
            }
            if ((Original_買売モード_Daily == null)) {
                this.Adapter.DeleteCommand.Parameters[21].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[22].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[21].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[22].Value = ((string)(Original_買売モード_Daily));
            }
            if ((Original_成行をスキップ == null)) {
                this.Adapter.DeleteCommand.Parameters[23].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[24].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[23].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[24].Value = ((string)(Original_成行をスキップ));
            }
            if ((Original_ポジション有り == null)) {
                this.Adapter.DeleteCommand.Parameters[25].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[26].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[25].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[26].Value = ((string)(Original_ポジション有り));
            }
            if ((Original_ボーナスステージ判定 == null)) {
                this.Adapter.DeleteCommand.Parameters[27].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[28].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[27].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[28].Value = ((string)(Original_ボーナスステージ判定));
            }
            if ((Original_ADX上昇判定_15m == null)) {
                this.Adapter.DeleteCommand.Parameters[29].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[30].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[29].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[30].Value = ((string)(Original_ADX上昇判定_15m));
            }
            if ((Original_ASI買い気配 == null)) {
                this.Adapter.DeleteCommand.Parameters[31].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[32].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[31].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[32].Value = ((string)(Original_ASI買い気配));
            }
            if ((Original_DMIplusDI上昇判定 == null)) {
                this.Adapter.DeleteCommand.Parameters[33].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[34].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[33].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[34].Value = ((string)(Original_DMIplusDI上昇判定));
            }
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.DeleteCommand.Connection.State;
            if (((this.Adapter.DeleteCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.DeleteCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.DeleteCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.DeleteCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Insert, true)]
        public virtual int Insert(
                    byte 通貨ペアNo, 
                    System.DateTime 日時, 
                    byte 処理位置, 
                    global::System.Nullable<double> 買いRate, 
                    global::System.Nullable<double> 売りRate, 
                    global::System.Nullable<double> OrderEntryRate, 
                    global::System.Nullable<double> Limit, 
                    global::System.Nullable<double> 危険Rate, 
                    string 処理位置_補足, 
                    string 取引状況, 
                    string 注文設定_モード, 
                    string 買売モード_15m, 
                    string 買売モード_Daily, 
                    string 成行をスキップ, 
                    string ポジション有り, 
                    string ボーナスステージ判定, 
                    string ADX上昇判定_15m, 
                    string ASI買い気配, 
                    string DMIplusDI上昇判定) {
            this.Adapter.InsertCommand.Parameters[0].Value = ((byte)(通貨ペアNo));
            this.Adapter.InsertCommand.Parameters[1].Value = ((System.DateTime)(日時));
            this.Adapter.InsertCommand.Parameters[2].Value = ((byte)(処理位置));
            if ((買いRate.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[3].Value = ((double)(買いRate.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[3].Value = global::System.DBNull.Value;
            }
            if ((売りRate.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[4].Value = ((double)(売りRate.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[4].Value = global::System.DBNull.Value;
            }
            if ((OrderEntryRate.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[5].Value = ((double)(OrderEntryRate.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[5].Value = global::System.DBNull.Value;
            }
            if ((Limit.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[6].Value = ((double)(Limit.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[6].Value = global::System.DBNull.Value;
            }
            if ((危険Rate.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[7].Value = ((double)(危険Rate.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[7].Value = global::System.DBNull.Value;
            }
            if ((処理位置_補足 == null)) {
                this.Adapter.InsertCommand.Parameters[8].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[8].Value = ((string)(処理位置_補足));
            }
            if ((取引状況 == null)) {
                this.Adapter.InsertCommand.Parameters[9].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[9].Value = ((string)(取引状況));
            }
            if ((注文設定_モード == null)) {
                this.Adapter.InsertCommand.Parameters[10].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[10].Value = ((string)(注文設定_モード));
            }
            if ((買売モード_15m == null)) {
                this.Adapter.InsertCommand.Parameters[11].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[11].Value = ((string)(買売モード_15m));
            }
            if ((買売モード_Daily == null)) {
                this.Adapter.InsertCommand.Parameters[12].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[12].Value = ((string)(買売モード_Daily));
            }
            if ((成行をスキップ == null)) {
                this.Adapter.InsertCommand.Parameters[13].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[13].Value = ((string)(成行をスキップ));
            }
            if ((ポジション有り == null)) {
                this.Adapter.InsertCommand.Parameters[14].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[14].Value = ((string)(ポジション有り));
            }
            if ((ボーナスステージ判定 == null)) {
                this.Adapter.InsertCommand.Parameters[15].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[15].Value = ((string)(ボーナスステージ判定));
            }
            if ((ADX上昇判定_15m == null)) {
                this.Adapter.InsertCommand.Parameters[16].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[16].Value = ((string)(ADX上昇判定_15m));
            }
            if ((ASI買い気配 == null)) {
                this.Adapter.InsertCommand.Parameters[17].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[17].Value = ((string)(ASI買い気配));
            }
            if ((DMIplusDI上昇判定 == null)) {
                this.Adapter.InsertCommand.Parameters[18].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[18].Value = ((string)(DMIplusDI上昇判定));
            }
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.InsertCommand.Connection.State;
            if (((this.Adapter.InsertCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.InsertCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.InsertCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.InsertCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Update, true)]
        public virtual int Update(
                    byte 通貨ペアNo, 
                    System.DateTime 日時, 
                    byte 処理位置, 
                    global::System.Nullable<double> 買いRate, 
                    global::System.Nullable<double> 売りRate, 
                    global::System.Nullable<double> OrderEntryRate, 
                    global::System.Nullable<double> Limit, 
                    global::System.Nullable<double> 危険Rate, 
                    string 処理位置_補足, 
                    string 取引状況, 
                    string 注文設定_モード, 
                    string 買売モード_15m, 
                    string 買売モード_Daily, 
                    string 成行をスキップ, 
                    string ポジション有り, 
                    string ボーナスステージ判定, 
                    string ADX上昇判定_15m, 
                    string ASI買い気配, 
                    string DMIplusDI上昇判定, 
                    byte Original_通貨ペアNo, 
                    System.DateTime Original_日時, 
                    byte Original_処理位置, 
                    global::System.Nullable<double> Original_買いRate, 
                    global::System.Nullable<double> Original_売りRate, 
                    global::System.Nullable<double> Original_OrderEntryRate, 
                    global::System.Nullable<double> Original_Limit, 
                    global::System.Nullable<double> Original_危険Rate, 
                    string Original_処理位置_補足, 
                    string Original_取引状況, 
                    string Original_注文設定_モード, 
                    string Original_買売モード_15m, 
                    string Original_買売モード_Daily, 
                    string Original_成行をスキップ, 
                    string Original_ポジション有り, 
                    string Original_ボーナスステージ判定, 
                    string Original_ADX上昇判定_15m, 
                    string Original_ASI買い気配, 
                    string Original_DMIplusDI上昇判定) {
            this.Adapter.UpdateCommand.Parameters[0].Value = ((byte)(通貨ペアNo));
            this.Adapter.UpdateCommand.Parameters[1].Value = ((System.DateTime)(日時));
            this.Adapter.UpdateCommand.Parameters[2].Value = ((byte)(処理位置));
            if ((買いRate.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[3].Value = ((double)(買いRate.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[3].Value = global::System.DBNull.Value;
            }
            if ((売りRate.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[4].Value = ((double)(売りRate.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[4].Value = global::System.DBNull.Value;
            }
            if ((OrderEntryRate.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[5].Value = ((double)(OrderEntryRate.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[5].Value = global::System.DBNull.Value;
            }
            if ((Limit.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[6].Value = ((double)(Limit.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[6].Value = global::System.DBNull.Value;
            }
            if ((危険Rate.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[7].Value = ((double)(危険Rate.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[7].Value = global::System.DBNull.Value;
            }
            if ((処理位置_補足 == null)) {
                this.Adapter.UpdateCommand.Parameters[8].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[8].Value = ((string)(処理位置_補足));
            }
            if ((取引状況 == null)) {
                this.Adapter.UpdateCommand.Parameters[9].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[9].Value = ((string)(取引状況));
            }
            if ((注文設定_モード == null)) {
                this.Adapter.UpdateCommand.Parameters[10].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[10].Value = ((string)(注文設定_モード));
            }
            if ((買売モード_15m == null)) {
                this.Adapter.UpdateCommand.Parameters[11].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[11].Value = ((string)(買売モード_15m));
            }
            if ((買売モード_Daily == null)) {
                this.Adapter.UpdateCommand.Parameters[12].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[12].Value = ((string)(買売モード_Daily));
            }
            if ((成行をスキップ == null)) {
                this.Adapter.UpdateCommand.Parameters[13].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[13].Value = ((string)(成行をスキップ));
            }
            if ((ポジション有り == null)) {
                this.Adapter.UpdateCommand.Parameters[14].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[14].Value = ((string)(ポジション有り));
            }
            if ((ボーナスステージ判定 == null)) {
                this.Adapter.UpdateCommand.Parameters[15].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[15].Value = ((string)(ボーナスステージ判定));
            }
            if ((ADX上昇判定_15m == null)) {
                this.Adapter.UpdateCommand.Parameters[16].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[16].Value = ((string)(ADX上昇判定_15m));
            }
            if ((ASI買い気配 == null)) {
                this.Adapter.UpdateCommand.Parameters[17].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[17].Value = ((string)(ASI買い気配));
            }
            if ((DMIplusDI上昇判定 == null)) {
                this.Adapter.UpdateCommand.Parameters[18].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[18].Value = ((string)(DMIplusDI上昇判定));
            }
            this.Adapter.UpdateCommand.Parameters[19].Value = ((byte)(Original_通貨ペアNo));
            this.Adapter.UpdateCommand.Parameters[20].Value = ((System.DateTime)(Original_日時));
            this.Adapter.UpdateCommand.Parameters[21].Value = ((byte)(Original_処理位置));
            if ((Original_買いRate.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[22].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[23].Value = ((double)(Original_買いRate.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[22].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[23].Value = global::System.DBNull.Value;
            }
            if ((Original_売りRate.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[24].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[25].Value = ((double)(Original_売りRate.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[24].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[25].Value = global::System.DBNull.Value;
            }
            if ((Original_OrderEntryRate.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[26].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[27].Value = ((double)(Original_OrderEntryRate.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[26].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[27].Value = global::System.DBNull.Value;
            }
            if ((Original_Limit.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[28].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[29].Value = ((double)(Original_Limit.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[28].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[29].Value = global::System.DBNull.Value;
            }
            if ((Original_危険Rate.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[30].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[31].Value = ((double)(Original_危険Rate.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[30].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[31].Value = global::System.DBNull.Value;
            }
            if ((Original_処理位置_補足 == null)) {
                this.Adapter.UpdateCommand.Parameters[32].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[33].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[32].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[33].Value = ((string)(Original_処理位置_補足));
            }
            if ((Original_取引状況 == null)) {
                this.Adapter.UpdateCommand.Parameters[34].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[35].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[34].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[35].Value = ((string)(Original_取引状況));
            }
            if ((Original_注文設定_モード == null)) {
                this.Adapter.UpdateCommand.Parameters[36].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[37].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[36].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[37].Value = ((string)(Original_注文設定_モード));
            }
            if ((Original_買売モード_15m == null)) {
                this.Adapter.UpdateCommand.Parameters[38].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[39].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[38].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[39].Value = ((string)(Original_買売モード_15m));
            }
            if ((Original_買売モード_Daily == null)) {
                this.Adapter.UpdateCommand.Parameters[40].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[41].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[40].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[41].Value = ((string)(Original_買売モード_Daily));
            }
            if ((Original_成行をスキップ == null)) {
                this.Adapter.UpdateCommand.Parameters[42].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[43].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[42].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[43].Value = ((string)(Original_成行をスキップ));
            }
            if ((Original_ポジション有り == null)) {
                this.Adapter.UpdateCommand.Parameters[44].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[45].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[44].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[45].Value = ((string)(Original_ポジション有り));
            }
            if ((Original_ボーナスステージ判定 == null)) {
                this.Adapter.UpdateCommand.Parameters[46].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[47].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[46].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[47].Value = ((string)(Original_ボーナスステージ判定));
            }
            if ((Original_ADX上昇判定_15m == null)) {
                this.Adapter.UpdateCommand.Parameters[48].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[49].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[48].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[49].Value = ((string)(Original_ADX上昇判定_15m));
            }
            if ((Original_ASI買い気配 == null)) {
                this.Adapter.UpdateCommand.Parameters[50].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[51].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[50].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[51].Value = ((string)(Original_ASI買い気配));
            }
            if ((Original_DMIplusDI上昇判定 == null)) {
                this.Adapter.UpdateCommand.Parameters[52].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[53].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[52].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[53].Value = ((string)(Original_DMIplusDI上昇判定));
            }
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.UpdateCommand.Connection.State;
            if (((this.Adapter.UpdateCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.UpdateCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.UpdateCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.UpdateCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Update, true)]
        public virtual int Update(
                    global::System.Nullable<double> 買いRate, 
                    global::System.Nullable<double> 売りRate, 
                    global::System.Nullable<double> OrderEntryRate, 
                    global::System.Nullable<double> Limit, 
                    global::System.Nullable<double> 危険Rate, 
                    string 処理位置_補足, 
                    string 取引状況, 
                    string 注文設定_モード, 
                    string 買売モード_15m, 
                    string 買売モード_Daily, 
                    string 成行をスキップ, 
                    string ポジション有り, 
                    string ボーナスステージ判定, 
                    string ADX上昇判定_15m, 
                    string ASI買い気配, 
                    string DMIplusDI上昇判定, 
                    byte Original_通貨ペアNo, 
                    System.DateTime Original_日時, 
                    byte Original_処理位置, 
                    global::System.Nullable<double> Original_買いRate, 
                    global::System.Nullable<double> Original_売りRate, 
                    global::System.Nullable<double> Original_OrderEntryRate, 
                    global::System.Nullable<double> Original_Limit, 
                    global::System.Nullable<double> Original_危険Rate, 
                    string Original_処理位置_補足, 
                    string Original_取引状況, 
                    string Original_注文設定_モード, 
                    string Original_買売モード_15m, 
                    string Original_買売モード_Daily, 
                    string Original_成行をスキップ, 
                    string Original_ポジション有り, 
                    string Original_ボーナスステージ判定, 
                    string Original_ADX上昇判定_15m, 
                    string Original_ASI買い気配, 
                    string Original_DMIplusDI上昇判定) {
            return this.Update(Original_通貨ペアNo, Original_日時, Original_処理位置, 買いRate, 売りRate, OrderEntryRate, Limit, 危険Rate, 処理位置_補足, 取引状況, 注文設定_モード, 買売モード_15m, 買売モード_Daily, 成行をスキップ, ポジション有り, ボーナスステージ判定, ADX上昇判定_15m, ASI買い気配, DMIplusDI上昇判定, Original_通貨ペアNo, Original_日時, Original_処理位置, Original_買いRate, Original_売りRate, Original_OrderEntryRate, Original_Limit, Original_危険Rate, Original_処理位置_補足, Original_取引状況, Original_注文設定_モード, Original_買売モード_15m, Original_買売モード_Daily, Original_成行をスキップ, Original_ポジション有り, Original_ボーナスステージ判定, Original_ADX上昇判定_15m, Original_ASI買い気配, Original_DMIplusDI上昇判定);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Delete, false)]
        public virtual int DeleteALL() {
            global::System.Data.SqlClient.SqlCommand command = this.CommandCollection[1];
            global::System.Data.ConnectionState previousConnectionState = command.Connection.State;
            if (((command.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                command.Connection.Open();
            }
            int returnValue;
            try {
                returnValue = command.ExecuteNonQuery();
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    command.Connection.Close();
                }
            }
            return returnValue;
        }
    }
    
    /// <summary>
    ///TableAdapterManager is used to coordinate TableAdapters in the dataset to enable Hierarchical Update scenarios
    ///</summary>
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterManagerDesigner, Microsoft.VSD" +
        "esigner, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapterManager")]
    public partial class TableAdapterManager : global::System.ComponentModel.Component {
        
        private UpdateOrderOption _updateOrder;
        
        private T_Indicator_15mTableAdapter _t_Indicator_15mTableAdapter;
        
        private T_RateHistory_15mTableAdapter _t_RateHistory_15mTableAdapter;
        
        private T_Order判定HistoryTableAdapter _t_Order判定HistoryTableAdapter;
        
        private bool _backupDataSetBeforeUpdate;
        
        private global::System.Data.IDbConnection _connection;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public UpdateOrderOption UpdateOrder {
            get {
                return this._updateOrder;
            }
            set {
                this._updateOrder = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.EditorAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterManagerPropertyEditor, Microso" +
            "ft.VSDesigner, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3" +
            "a", "System.Drawing.Design.UITypeEditor")]
        public T_Indicator_15mTableAdapter T_Indicator_15mTableAdapter {
            get {
                return this._t_Indicator_15mTableAdapter;
            }
            set {
                this._t_Indicator_15mTableAdapter = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.EditorAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterManagerPropertyEditor, Microso" +
            "ft.VSDesigner, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3" +
            "a", "System.Drawing.Design.UITypeEditor")]
        public T_RateHistory_15mTableAdapter T_RateHistory_15mTableAdapter {
            get {
                return this._t_RateHistory_15mTableAdapter;
            }
            set {
                this._t_RateHistory_15mTableAdapter = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.EditorAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterManagerPropertyEditor, Microso" +
            "ft.VSDesigner, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3" +
            "a", "System.Drawing.Design.UITypeEditor")]
        public T_Order判定HistoryTableAdapter T_Order判定HistoryTableAdapter {
            get {
                return this._t_Order判定HistoryTableAdapter;
            }
            set {
                this._t_Order判定HistoryTableAdapter = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public bool BackupDataSetBeforeUpdate {
            get {
                return this._backupDataSetBeforeUpdate;
            }
            set {
                this._backupDataSetBeforeUpdate = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Browsable(false)]
        public global::System.Data.IDbConnection Connection {
            get {
                if ((this._connection != null)) {
                    return this._connection;
                }
                if (((this._t_Indicator_15mTableAdapter != null) 
                            && (this._t_Indicator_15mTableAdapter.Connection != null))) {
                    return this._t_Indicator_15mTableAdapter.Connection;
                }
                if (((this._t_RateHistory_15mTableAdapter != null) 
                            && (this._t_RateHistory_15mTableAdapter.Connection != null))) {
                    return this._t_RateHistory_15mTableAdapter.Connection;
                }
                if (((this._t_Order判定HistoryTableAdapter != null) 
                            && (this._t_Order判定HistoryTableAdapter.Connection != null))) {
                    return this._t_Order判定HistoryTableAdapter.Connection;
                }
                return null;
            }
            set {
                this._connection = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Browsable(false)]
        public int TableAdapterInstanceCount {
            get {
                int count = 0;
                if ((this._t_Indicator_15mTableAdapter != null)) {
                    count = (count + 1);
                }
                if ((this._t_RateHistory_15mTableAdapter != null)) {
                    count = (count + 1);
                }
                if ((this._t_Order判定HistoryTableAdapter != null)) {
                    count = (count + 1);
                }
                return count;
            }
        }
        
        /// <summary>
        ///Update rows in top-down order.
        ///</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private int UpdateUpdatedRows(DFX_smlt dataSet, global::System.Collections.Generic.List<global::System.Data.DataRow> allChangedRows, global::System.Collections.Generic.List<global::System.Data.DataRow> allAddedRows) {
            int result = 0;
            if ((this._t_Order判定HistoryTableAdapter != null)) {
                global::System.Data.DataRow[] updatedRows = dataSet.T_Order判定History.Select(null, null, global::System.Data.DataViewRowState.ModifiedCurrent);
                updatedRows = this.GetRealUpdatedRows(updatedRows, allAddedRows);
                if (((updatedRows != null) 
                            && (0 < updatedRows.Length))) {
                    result = (result + this._t_Order判定HistoryTableAdapter.Update(updatedRows));
                    allChangedRows.AddRange(updatedRows);
                }
            }
            if ((this._t_RateHistory_15mTableAdapter != null)) {
                global::System.Data.DataRow[] updatedRows = dataSet.T_RateHistory_15m.Select(null, null, global::System.Data.DataViewRowState.ModifiedCurrent);
                updatedRows = this.GetRealUpdatedRows(updatedRows, allAddedRows);
                if (((updatedRows != null) 
                            && (0 < updatedRows.Length))) {
                    result = (result + this._t_RateHistory_15mTableAdapter.Update(updatedRows));
                    allChangedRows.AddRange(updatedRows);
                }
            }
            if ((this._t_Indicator_15mTableAdapter != null)) {
                global::System.Data.DataRow[] updatedRows = dataSet.T_Indicator_15m.Select(null, null, global::System.Data.DataViewRowState.ModifiedCurrent);
                updatedRows = this.GetRealUpdatedRows(updatedRows, allAddedRows);
                if (((updatedRows != null) 
                            && (0 < updatedRows.Length))) {
                    result = (result + this._t_Indicator_15mTableAdapter.Update(updatedRows));
                    allChangedRows.AddRange(updatedRows);
                }
            }
            return result;
        }
        
        /// <summary>
        ///Insert rows in top-down order.
        ///</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private int UpdateInsertedRows(DFX_smlt dataSet, global::System.Collections.Generic.List<global::System.Data.DataRow> allAddedRows) {
            int result = 0;
            if ((this._t_Order判定HistoryTableAdapter != null)) {
                global::System.Data.DataRow[] addedRows = dataSet.T_Order判定History.Select(null, null, global::System.Data.DataViewRowState.Added);
                if (((addedRows != null) 
                            && (0 < addedRows.Length))) {
                    result = (result + this._t_Order判定HistoryTableAdapter.Update(addedRows));
                    allAddedRows.AddRange(addedRows);
                }
            }
            if ((this._t_RateHistory_15mTableAdapter != null)) {
                global::System.Data.DataRow[] addedRows = dataSet.T_RateHistory_15m.Select(null, null, global::System.Data.DataViewRowState.Added);
                if (((addedRows != null) 
                            && (0 < addedRows.Length))) {
                    result = (result + this._t_RateHistory_15mTableAdapter.Update(addedRows));
                    allAddedRows.AddRange(addedRows);
                }
            }
            if ((this._t_Indicator_15mTableAdapter != null)) {
                global::System.Data.DataRow[] addedRows = dataSet.T_Indicator_15m.Select(null, null, global::System.Data.DataViewRowState.Added);
                if (((addedRows != null) 
                            && (0 < addedRows.Length))) {
                    result = (result + this._t_Indicator_15mTableAdapter.Update(addedRows));
                    allAddedRows.AddRange(addedRows);
                }
            }
            return result;
        }
        
        /// <summary>
        ///Delete rows in bottom-up order.
        ///</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private int UpdateDeletedRows(DFX_smlt dataSet, global::System.Collections.Generic.List<global::System.Data.DataRow> allChangedRows) {
            int result = 0;
            if ((this._t_Indicator_15mTableAdapter != null)) {
                global::System.Data.DataRow[] deletedRows = dataSet.T_Indicator_15m.Select(null, null, global::System.Data.DataViewRowState.Deleted);
                if (((deletedRows != null) 
                            && (0 < deletedRows.Length))) {
                    result = (result + this._t_Indicator_15mTableAdapter.Update(deletedRows));
                    allChangedRows.AddRange(deletedRows);
                }
            }
            if ((this._t_RateHistory_15mTableAdapter != null)) {
                global::System.Data.DataRow[] deletedRows = dataSet.T_RateHistory_15m.Select(null, null, global::System.Data.DataViewRowState.Deleted);
                if (((deletedRows != null) 
                            && (0 < deletedRows.Length))) {
                    result = (result + this._t_RateHistory_15mTableAdapter.Update(deletedRows));
                    allChangedRows.AddRange(deletedRows);
                }
            }
            if ((this._t_Order判定HistoryTableAdapter != null)) {
                global::System.Data.DataRow[] deletedRows = dataSet.T_Order判定History.Select(null, null, global::System.Data.DataViewRowState.Deleted);
                if (((deletedRows != null) 
                            && (0 < deletedRows.Length))) {
                    result = (result + this._t_Order判定HistoryTableAdapter.Update(deletedRows));
                    allChangedRows.AddRange(deletedRows);
                }
            }
            return result;
        }
        
        /// <summary>
        ///Remove inserted rows that become updated rows after calling TableAdapter.Update(inserted rows) first
        ///</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private global::System.Data.DataRow[] GetRealUpdatedRows(global::System.Data.DataRow[] updatedRows, global::System.Collections.Generic.List<global::System.Data.DataRow> allAddedRows) {
            if (((updatedRows == null) 
                        || (updatedRows.Length < 1))) {
                return updatedRows;
            }
            if (((allAddedRows == null) 
                        || (allAddedRows.Count < 1))) {
                return updatedRows;
            }
            global::System.Collections.Generic.List<global::System.Data.DataRow> realUpdatedRows = new global::System.Collections.Generic.List<global::System.Data.DataRow>();
            for (int i = 0; (i < updatedRows.Length); i = (i + 1)) {
                global::System.Data.DataRow row = updatedRows[i];
                if ((allAddedRows.Contains(row) == false)) {
                    realUpdatedRows.Add(row);
                }
            }
            return realUpdatedRows.ToArray();
        }
        
        /// <summary>
        ///Update all changes to the dataset.
        ///</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public virtual int UpdateAll(DFX_smlt dataSet) {
            if ((dataSet == null)) {
                throw new global::System.ArgumentNullException("dataSet");
            }
            if ((dataSet.HasChanges() == false)) {
                return 0;
            }
            if (((this._t_Indicator_15mTableAdapter != null) 
                        && (this.MatchTableAdapterConnection(this._t_Indicator_15mTableAdapter.Connection) == false))) {
                throw new global::System.ArgumentException("TableAdapterManager で管理されるすべての TableAdapter は同一の接続文字列を使用する必要があります。");
            }
            if (((this._t_RateHistory_15mTableAdapter != null) 
                        && (this.MatchTableAdapterConnection(this._t_RateHistory_15mTableAdapter.Connection) == false))) {
                throw new global::System.ArgumentException("TableAdapterManager で管理されるすべての TableAdapter は同一の接続文字列を使用する必要があります。");
            }
            if (((this._t_Order判定HistoryTableAdapter != null) 
                        && (this.MatchTableAdapterConnection(this._t_Order判定HistoryTableAdapter.Connection) == false))) {
                throw new global::System.ArgumentException("TableAdapterManager で管理されるすべての TableAdapter は同一の接続文字列を使用する必要があります。");
            }
            global::System.Data.IDbConnection workConnection = this.Connection;
            if ((workConnection == null)) {
                throw new global::System.ApplicationException("TableAdapterManager には接続情報がありません。それぞれの TableAdapterManager TableAdapter プロパティを有効な" +
                        " TableAdapter インスタンスに設定してください。");
            }
            bool workConnOpened = false;
            if (((workConnection.State & global::System.Data.ConnectionState.Broken) 
                        == global::System.Data.ConnectionState.Broken)) {
                workConnection.Close();
            }
            if ((workConnection.State == global::System.Data.ConnectionState.Closed)) {
                workConnection.Open();
                workConnOpened = true;
            }
            global::System.Data.IDbTransaction workTransaction = workConnection.BeginTransaction();
            if ((workTransaction == null)) {
                throw new global::System.ApplicationException("トランザクションを開始できません。現在のデータ接続がトランザクションをサポートしていないか、または現在の状態がトランザクションの開始を許可していません。");
            }
            global::System.Collections.Generic.List<global::System.Data.DataRow> allChangedRows = new global::System.Collections.Generic.List<global::System.Data.DataRow>();
            global::System.Collections.Generic.List<global::System.Data.DataRow> allAddedRows = new global::System.Collections.Generic.List<global::System.Data.DataRow>();
            global::System.Collections.Generic.List<global::System.Data.Common.DataAdapter> adaptersWithAcceptChangesDuringUpdate = new global::System.Collections.Generic.List<global::System.Data.Common.DataAdapter>();
            global::System.Collections.Generic.Dictionary<object, global::System.Data.IDbConnection> revertConnections = new global::System.Collections.Generic.Dictionary<object, global::System.Data.IDbConnection>();
            int result = 0;
            global::System.Data.DataSet backupDataSet = null;
            if (this.BackupDataSetBeforeUpdate) {
                backupDataSet = new global::System.Data.DataSet();
                backupDataSet.Merge(dataSet);
            }
            try {
                // ---- Prepare for update -----------
                //
                if ((this._t_Indicator_15mTableAdapter != null)) {
                    revertConnections.Add(this._t_Indicator_15mTableAdapter, this._t_Indicator_15mTableAdapter.Connection);
                    this._t_Indicator_15mTableAdapter.Connection = ((global::System.Data.SqlClient.SqlConnection)(workConnection));
                    this._t_Indicator_15mTableAdapter.Transaction = ((global::System.Data.SqlClient.SqlTransaction)(workTransaction));
                    if (this._t_Indicator_15mTableAdapter.Adapter.AcceptChangesDuringUpdate) {
                        this._t_Indicator_15mTableAdapter.Adapter.AcceptChangesDuringUpdate = false;
                        adaptersWithAcceptChangesDuringUpdate.Add(this._t_Indicator_15mTableAdapter.Adapter);
                    }
                }
                if ((this._t_RateHistory_15mTableAdapter != null)) {
                    revertConnections.Add(this._t_RateHistory_15mTableAdapter, this._t_RateHistory_15mTableAdapter.Connection);
                    this._t_RateHistory_15mTableAdapter.Connection = ((global::System.Data.SqlClient.SqlConnection)(workConnection));
                    this._t_RateHistory_15mTableAdapter.Transaction = ((global::System.Data.SqlClient.SqlTransaction)(workTransaction));
                    if (this._t_RateHistory_15mTableAdapter.Adapter.AcceptChangesDuringUpdate) {
                        this._t_RateHistory_15mTableAdapter.Adapter.AcceptChangesDuringUpdate = false;
                        adaptersWithAcceptChangesDuringUpdate.Add(this._t_RateHistory_15mTableAdapter.Adapter);
                    }
                }
                if ((this._t_Order判定HistoryTableAdapter != null)) {
                    revertConnections.Add(this._t_Order判定HistoryTableAdapter, this._t_Order判定HistoryTableAdapter.Connection);
                    this._t_Order判定HistoryTableAdapter.Connection = ((global::System.Data.SqlClient.SqlConnection)(workConnection));
                    this._t_Order判定HistoryTableAdapter.Transaction = ((global::System.Data.SqlClient.SqlTransaction)(workTransaction));
                    if (this._t_Order判定HistoryTableAdapter.Adapter.AcceptChangesDuringUpdate) {
                        this._t_Order判定HistoryTableAdapter.Adapter.AcceptChangesDuringUpdate = false;
                        adaptersWithAcceptChangesDuringUpdate.Add(this._t_Order判定HistoryTableAdapter.Adapter);
                    }
                }
                // 
                //---- Perform updates -----------
                //
                if ((this.UpdateOrder == UpdateOrderOption.UpdateInsertDelete)) {
                    result = (result + this.UpdateUpdatedRows(dataSet, allChangedRows, allAddedRows));
                    result = (result + this.UpdateInsertedRows(dataSet, allAddedRows));
                }
                else {
                    result = (result + this.UpdateInsertedRows(dataSet, allAddedRows));
                    result = (result + this.UpdateUpdatedRows(dataSet, allChangedRows, allAddedRows));
                }
                result = (result + this.UpdateDeletedRows(dataSet, allChangedRows));
                // 
                //---- Commit updates -----------
                //
                workTransaction.Commit();
                if ((0 < allAddedRows.Count)) {
                    global::System.Data.DataRow[] rows = new System.Data.DataRow[allAddedRows.Count];
                    allAddedRows.CopyTo(rows);
                    for (int i = 0; (i < rows.Length); i = (i + 1)) {
                        global::System.Data.DataRow row = rows[i];
                        row.AcceptChanges();
                    }
                }
                if ((0 < allChangedRows.Count)) {
                    global::System.Data.DataRow[] rows = new System.Data.DataRow[allChangedRows.Count];
                    allChangedRows.CopyTo(rows);
                    for (int i = 0; (i < rows.Length); i = (i + 1)) {
                        global::System.Data.DataRow row = rows[i];
                        row.AcceptChanges();
                    }
                }
            }
            catch (global::System.Exception ex) {
                workTransaction.Rollback();
                // ---- Restore the dataset -----------
                if (this.BackupDataSetBeforeUpdate) {
                    global::System.Diagnostics.Debug.Assert((backupDataSet != null));
                    dataSet.Clear();
                    dataSet.Merge(backupDataSet);
                }
                else {
                    if ((0 < allAddedRows.Count)) {
                        global::System.Data.DataRow[] rows = new System.Data.DataRow[allAddedRows.Count];
                        allAddedRows.CopyTo(rows);
                        for (int i = 0; (i < rows.Length); i = (i + 1)) {
                            global::System.Data.DataRow row = rows[i];
                            row.AcceptChanges();
                            row.SetAdded();
                        }
                    }
                }
                throw ex;
            }
            finally {
                if (workConnOpened) {
                    workConnection.Close();
                }
                if ((this._t_Indicator_15mTableAdapter != null)) {
                    this._t_Indicator_15mTableAdapter.Connection = ((global::System.Data.SqlClient.SqlConnection)(revertConnections[this._t_Indicator_15mTableAdapter]));
                    this._t_Indicator_15mTableAdapter.Transaction = null;
                }
                if ((this._t_RateHistory_15mTableAdapter != null)) {
                    this._t_RateHistory_15mTableAdapter.Connection = ((global::System.Data.SqlClient.SqlConnection)(revertConnections[this._t_RateHistory_15mTableAdapter]));
                    this._t_RateHistory_15mTableAdapter.Transaction = null;
                }
                if ((this._t_Order判定HistoryTableAdapter != null)) {
                    this._t_Order判定HistoryTableAdapter.Connection = ((global::System.Data.SqlClient.SqlConnection)(revertConnections[this._t_Order判定HistoryTableAdapter]));
                    this._t_Order判定HistoryTableAdapter.Transaction = null;
                }
                if ((0 < adaptersWithAcceptChangesDuringUpdate.Count)) {
                    global::System.Data.Common.DataAdapter[] adapters = new System.Data.Common.DataAdapter[adaptersWithAcceptChangesDuringUpdate.Count];
                    adaptersWithAcceptChangesDuringUpdate.CopyTo(adapters);
                    for (int i = 0; (i < adapters.Length); i = (i + 1)) {
                        global::System.Data.Common.DataAdapter adapter = adapters[i];
                        adapter.AcceptChangesDuringUpdate = true;
                    }
                }
            }
            return result;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected virtual void SortSelfReferenceRows(global::System.Data.DataRow[] rows, global::System.Data.DataRelation relation, bool childFirst) {
            global::System.Array.Sort<global::System.Data.DataRow>(rows, new SelfReferenceComparer(relation, childFirst));
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected virtual bool MatchTableAdapterConnection(global::System.Data.IDbConnection inputConnection) {
            if ((this._connection != null)) {
                return true;
            }
            if (((this.Connection == null) 
                        || (inputConnection == null))) {
                return true;
            }
            if (string.Equals(this.Connection.ConnectionString, inputConnection.ConnectionString, global::System.StringComparison.Ordinal)) {
                return true;
            }
            return false;
        }
        
        /// <summary>
        ///Update Order Option
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public enum UpdateOrderOption {
            
            InsertUpdateDelete = 0,
            
            UpdateInsertDelete = 1,
        }
        
        /// <summary>
        ///Used to sort self-referenced table's rows
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private class SelfReferenceComparer : object, global::System.Collections.Generic.IComparer<global::System.Data.DataRow> {
            
            private global::System.Data.DataRelation _relation;
            
            private int _childFirst;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal SelfReferenceComparer(global::System.Data.DataRelation relation, bool childFirst) {
                this._relation = relation;
                if (childFirst) {
                    this._childFirst = -1;
                }
                else {
                    this._childFirst = 1;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            private global::System.Data.DataRow GetRoot(global::System.Data.DataRow row, out int distance) {
                global::System.Diagnostics.Debug.Assert((row != null));
                global::System.Data.DataRow root = row;
                distance = 0;

                global::System.Collections.Generic.IDictionary<global::System.Data.DataRow, global::System.Data.DataRow> traversedRows = new global::System.Collections.Generic.Dictionary<global::System.Data.DataRow, global::System.Data.DataRow>();
                traversedRows[row] = row;

                global::System.Data.DataRow parent = row.GetParentRow(this._relation, global::System.Data.DataRowVersion.Default);
                for (
                ; ((parent != null) 
                            && (traversedRows.ContainsKey(parent) == false)); 
                ) {
                    distance = (distance + 1);
                    root = parent;
                    traversedRows[parent] = parent;
                    parent = parent.GetParentRow(this._relation, global::System.Data.DataRowVersion.Default);
                }

                if ((distance == 0)) {
                    traversedRows.Clear();
                    traversedRows[row] = row;
                    parent = row.GetParentRow(this._relation, global::System.Data.DataRowVersion.Original);
                    for (
                    ; ((parent != null) 
                                && (traversedRows.ContainsKey(parent) == false)); 
                    ) {
                        distance = (distance + 1);
                        root = parent;
                        traversedRows[parent] = parent;
                        parent = parent.GetParentRow(this._relation, global::System.Data.DataRowVersion.Original);
                    }
                }

                return root;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int Compare(global::System.Data.DataRow row1, global::System.Data.DataRow row2) {
                if (object.ReferenceEquals(row1, row2)) {
                    return 0;
                }
                if ((row1 == null)) {
                    return -1;
                }
                if ((row2 == null)) {
                    return 1;
                }

                int distance1 = 0;
                global::System.Data.DataRow root1 = this.GetRoot(row1, out distance1);

                int distance2 = 0;
                global::System.Data.DataRow root2 = this.GetRoot(row2, out distance2);

                if (object.ReferenceEquals(root1, root2)) {
                    return (this._childFirst * distance1.CompareTo(distance2));
                }
                else {
                    global::System.Diagnostics.Debug.Assert(((root1.Table != null) 
                                    && (root2.Table != null)));
                    if ((root1.Table.Rows.IndexOf(root1) < root2.Table.Rows.IndexOf(root2))) {
                        return -1;
                    }
                    else {
                        return 1;
                    }
                }
            }
        }
    }
}

#pragma warning restore 1591